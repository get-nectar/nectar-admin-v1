"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/on-exit-leak-free";
exports.ids = ["vendor-chunks/on-exit-leak-free"];
exports.modules = {

/***/ "(rsc)/./node_modules/on-exit-leak-free/index.js":
/*!*************************************************!*\
  !*** ./node_modules/on-exit-leak-free/index.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\nconst refs = {\n    exit: [],\n    beforeExit: []\n};\nconst functions = {\n    exit: onExit,\n    beforeExit: onBeforeExit\n};\nlet registry;\nfunction ensureRegistry() {\n    if (registry === undefined) {\n        registry = new FinalizationRegistry(clear);\n    }\n}\nfunction install(event) {\n    if (refs[event].length > 0) {\n        return;\n    }\n    process.on(event, functions[event]);\n}\nfunction uninstall(event) {\n    if (refs[event].length > 0) {\n        return;\n    }\n    process.removeListener(event, functions[event]);\n    if (refs.exit.length === 0 && refs.beforeExit.length === 0) {\n        registry = undefined;\n    }\n}\nfunction onExit() {\n    callRefs(\"exit\");\n}\nfunction onBeforeExit() {\n    callRefs(\"beforeExit\");\n}\nfunction callRefs(event) {\n    for (const ref of refs[event]){\n        const obj = ref.deref();\n        const fn = ref.fn;\n        // This should always happen, however GC is\n        // undeterministic so it might not happen.\n        /* istanbul ignore else */ if (obj !== undefined) {\n            fn(obj, event);\n        }\n    }\n    refs[event] = [];\n}\nfunction clear(ref) {\n    for (const event of [\n        \"exit\",\n        \"beforeExit\"\n    ]){\n        const index = refs[event].indexOf(ref);\n        refs[event].splice(index, index + 1);\n        uninstall(event);\n    }\n}\nfunction _register(event, obj, fn) {\n    if (obj === undefined) {\n        throw new Error(\"the object can't be undefined\");\n    }\n    install(event);\n    const ref = new WeakRef(obj);\n    ref.fn = fn;\n    ensureRegistry();\n    registry.register(obj, ref);\n    refs[event].push(ref);\n}\nfunction register(obj, fn) {\n    _register(\"exit\", obj, fn);\n}\nfunction registerBeforeExit(obj, fn) {\n    _register(\"beforeExit\", obj, fn);\n}\nfunction unregister(obj) {\n    if (registry === undefined) {\n        return;\n    }\n    registry.unregister(obj);\n    for (const event of [\n        \"exit\",\n        \"beforeExit\"\n    ]){\n        refs[event] = refs[event].filter((ref)=>{\n            const _obj = ref.deref();\n            return _obj && _obj !== obj;\n        });\n        uninstall(event);\n    }\n}\nmodule.exports = {\n    register,\n    registerBeforeExit,\n    unregister\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvb24tZXhpdC1sZWFrLWZyZWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxPQUFPO0lBQ1hDLE1BQU0sRUFBRTtJQUNSQyxZQUFZLEVBQUU7QUFDaEI7QUFDQSxNQUFNQyxZQUFZO0lBQ2hCRixNQUFNRztJQUNORixZQUFZRztBQUNkO0FBRUEsSUFBSUM7QUFFSixTQUFTQztJQUNQLElBQUlELGFBQWFFLFdBQVc7UUFDMUJGLFdBQVcsSUFBSUcscUJBQXFCQztJQUN0QztBQUNGO0FBRUEsU0FBU0MsUUFBU0MsS0FBSztJQUNyQixJQUFJWixJQUFJLENBQUNZLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7UUFDMUI7SUFDRjtJQUVBQyxRQUFRQyxFQUFFLENBQUNILE9BQU9ULFNBQVMsQ0FBQ1MsTUFBTTtBQUNwQztBQUVBLFNBQVNJLFVBQVdKLEtBQUs7SUFDdkIsSUFBSVosSUFBSSxDQUFDWSxNQUFNLENBQUNDLE1BQU0sR0FBRyxHQUFHO1FBQzFCO0lBQ0Y7SUFDQUMsUUFBUUcsY0FBYyxDQUFDTCxPQUFPVCxTQUFTLENBQUNTLE1BQU07SUFDOUMsSUFBSVosS0FBS0MsSUFBSSxDQUFDWSxNQUFNLEtBQUssS0FBS2IsS0FBS0UsVUFBVSxDQUFDVyxNQUFNLEtBQUssR0FBRztRQUMxRFAsV0FBV0U7SUFDYjtBQUNGO0FBRUEsU0FBU0o7SUFDUGMsU0FBUztBQUNYO0FBRUEsU0FBU2I7SUFDUGEsU0FBUztBQUNYO0FBRUEsU0FBU0EsU0FBVU4sS0FBSztJQUN0QixLQUFLLE1BQU1PLE9BQU9uQixJQUFJLENBQUNZLE1BQU0sQ0FBRTtRQUM3QixNQUFNUSxNQUFNRCxJQUFJRSxLQUFLO1FBQ3JCLE1BQU1DLEtBQUtILElBQUlHLEVBQUU7UUFFakIsMkNBQTJDO1FBQzNDLDBDQUEwQztRQUMxQyx3QkFBd0IsR0FDeEIsSUFBSUYsUUFBUVosV0FBVztZQUNyQmMsR0FBR0YsS0FBS1I7UUFDVjtJQUNGO0lBQ0FaLElBQUksQ0FBQ1ksTUFBTSxHQUFHLEVBQUU7QUFDbEI7QUFFQSxTQUFTRixNQUFPUyxHQUFHO0lBQ2pCLEtBQUssTUFBTVAsU0FBUztRQUFDO1FBQVE7S0FBYSxDQUFFO1FBQzFDLE1BQU1XLFFBQVF2QixJQUFJLENBQUNZLE1BQU0sQ0FBQ1ksT0FBTyxDQUFDTDtRQUNsQ25CLElBQUksQ0FBQ1ksTUFBTSxDQUFDYSxNQUFNLENBQUNGLE9BQU9BLFFBQVE7UUFDbENQLFVBQVVKO0lBQ1o7QUFDRjtBQUVBLFNBQVNjLFVBQVdkLEtBQUssRUFBRVEsR0FBRyxFQUFFRSxFQUFFO0lBQ2hDLElBQUlGLFFBQVFaLFdBQVc7UUFDckIsTUFBTSxJQUFJbUIsTUFBTTtJQUNsQjtJQUNBaEIsUUFBUUM7SUFDUixNQUFNTyxNQUFNLElBQUlTLFFBQVFSO0lBQ3hCRCxJQUFJRyxFQUFFLEdBQUdBO0lBRVRmO0lBQ0FELFNBQVN1QixRQUFRLENBQUNULEtBQUtEO0lBQ3ZCbkIsSUFBSSxDQUFDWSxNQUFNLENBQUNrQixJQUFJLENBQUNYO0FBQ25CO0FBRUEsU0FBU1UsU0FBVVQsR0FBRyxFQUFFRSxFQUFFO0lBQ3hCSSxVQUFVLFFBQVFOLEtBQUtFO0FBQ3pCO0FBRUEsU0FBU1MsbUJBQW9CWCxHQUFHLEVBQUVFLEVBQUU7SUFDbENJLFVBQVUsY0FBY04sS0FBS0U7QUFDL0I7QUFFQSxTQUFTVSxXQUFZWixHQUFHO0lBQ3RCLElBQUlkLGFBQWFFLFdBQVc7UUFDMUI7SUFDRjtJQUNBRixTQUFTMEIsVUFBVSxDQUFDWjtJQUNwQixLQUFLLE1BQU1SLFNBQVM7UUFBQztRQUFRO0tBQWEsQ0FBRTtRQUMxQ1osSUFBSSxDQUFDWSxNQUFNLEdBQUdaLElBQUksQ0FBQ1ksTUFBTSxDQUFDcUIsTUFBTSxDQUFDLENBQUNkO1lBQ2hDLE1BQU1lLE9BQU9mLElBQUlFLEtBQUs7WUFDdEIsT0FBT2EsUUFBUUEsU0FBU2Q7UUFDMUI7UUFDQUosVUFBVUo7SUFDWjtBQUNGO0FBRUF1QixPQUFPQyxPQUFPLEdBQUc7SUFDZlA7SUFDQUU7SUFDQUM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25lY3Rhci1hZG1pbi12MS8uL25vZGVfbW9kdWxlcy9vbi1leGl0LWxlYWstZnJlZS9pbmRleC5qcz8zOTgzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCByZWZzID0ge1xuICBleGl0OiBbXSxcbiAgYmVmb3JlRXhpdDogW11cbn1cbmNvbnN0IGZ1bmN0aW9ucyA9IHtcbiAgZXhpdDogb25FeGl0LFxuICBiZWZvcmVFeGl0OiBvbkJlZm9yZUV4aXRcbn1cblxubGV0IHJlZ2lzdHJ5XG5cbmZ1bmN0aW9uIGVuc3VyZVJlZ2lzdHJ5ICgpIHtcbiAgaWYgKHJlZ2lzdHJ5ID09PSB1bmRlZmluZWQpIHtcbiAgICByZWdpc3RyeSA9IG5ldyBGaW5hbGl6YXRpb25SZWdpc3RyeShjbGVhcilcbiAgfVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsIChldmVudCkge1xuICBpZiAocmVmc1tldmVudF0ubGVuZ3RoID4gMCkge1xuICAgIHJldHVyblxuICB9XG5cbiAgcHJvY2Vzcy5vbihldmVudCwgZnVuY3Rpb25zW2V2ZW50XSlcbn1cblxuZnVuY3Rpb24gdW5pbnN0YWxsIChldmVudCkge1xuICBpZiAocmVmc1tldmVudF0ubGVuZ3RoID4gMCkge1xuICAgIHJldHVyblxuICB9XG4gIHByb2Nlc3MucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGZ1bmN0aW9uc1tldmVudF0pXG4gIGlmIChyZWZzLmV4aXQubGVuZ3RoID09PSAwICYmIHJlZnMuYmVmb3JlRXhpdC5sZW5ndGggPT09IDApIHtcbiAgICByZWdpc3RyeSA9IHVuZGVmaW5lZFxuICB9XG59XG5cbmZ1bmN0aW9uIG9uRXhpdCAoKSB7XG4gIGNhbGxSZWZzKCdleGl0Jylcbn1cblxuZnVuY3Rpb24gb25CZWZvcmVFeGl0ICgpIHtcbiAgY2FsbFJlZnMoJ2JlZm9yZUV4aXQnKVxufVxuXG5mdW5jdGlvbiBjYWxsUmVmcyAoZXZlbnQpIHtcbiAgZm9yIChjb25zdCByZWYgb2YgcmVmc1tldmVudF0pIHtcbiAgICBjb25zdCBvYmogPSByZWYuZGVyZWYoKVxuICAgIGNvbnN0IGZuID0gcmVmLmZuXG5cbiAgICAvLyBUaGlzIHNob3VsZCBhbHdheXMgaGFwcGVuLCBob3dldmVyIEdDIGlzXG4gICAgLy8gdW5kZXRlcm1pbmlzdGljIHNvIGl0IG1pZ2h0IG5vdCBoYXBwZW4uXG4gICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAob2JqICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGZuKG9iaiwgZXZlbnQpXG4gICAgfVxuICB9XG4gIHJlZnNbZXZlbnRdID0gW11cbn1cblxuZnVuY3Rpb24gY2xlYXIgKHJlZikge1xuICBmb3IgKGNvbnN0IGV2ZW50IG9mIFsnZXhpdCcsICdiZWZvcmVFeGl0J10pIHtcbiAgICBjb25zdCBpbmRleCA9IHJlZnNbZXZlbnRdLmluZGV4T2YocmVmKVxuICAgIHJlZnNbZXZlbnRdLnNwbGljZShpbmRleCwgaW5kZXggKyAxKVxuICAgIHVuaW5zdGFsbChldmVudClcbiAgfVxufVxuXG5mdW5jdGlvbiBfcmVnaXN0ZXIgKGV2ZW50LCBvYmosIGZuKSB7XG4gIGlmIChvYmogPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndGhlIG9iamVjdCBjYW5cXCd0IGJlIHVuZGVmaW5lZCcpXG4gIH1cbiAgaW5zdGFsbChldmVudClcbiAgY29uc3QgcmVmID0gbmV3IFdlYWtSZWYob2JqKVxuICByZWYuZm4gPSBmblxuXG4gIGVuc3VyZVJlZ2lzdHJ5KClcbiAgcmVnaXN0cnkucmVnaXN0ZXIob2JqLCByZWYpXG4gIHJlZnNbZXZlbnRdLnB1c2gocmVmKVxufVxuXG5mdW5jdGlvbiByZWdpc3RlciAob2JqLCBmbikge1xuICBfcmVnaXN0ZXIoJ2V4aXQnLCBvYmosIGZuKVxufVxuXG5mdW5jdGlvbiByZWdpc3RlckJlZm9yZUV4aXQgKG9iaiwgZm4pIHtcbiAgX3JlZ2lzdGVyKCdiZWZvcmVFeGl0Jywgb2JqLCBmbilcbn1cblxuZnVuY3Rpb24gdW5yZWdpc3RlciAob2JqKSB7XG4gIGlmIChyZWdpc3RyeSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuXG4gIH1cbiAgcmVnaXN0cnkudW5yZWdpc3RlcihvYmopXG4gIGZvciAoY29uc3QgZXZlbnQgb2YgWydleGl0JywgJ2JlZm9yZUV4aXQnXSkge1xuICAgIHJlZnNbZXZlbnRdID0gcmVmc1tldmVudF0uZmlsdGVyKChyZWYpID0+IHtcbiAgICAgIGNvbnN0IF9vYmogPSByZWYuZGVyZWYoKVxuICAgICAgcmV0dXJuIF9vYmogJiYgX29iaiAhPT0gb2JqXG4gICAgfSlcbiAgICB1bmluc3RhbGwoZXZlbnQpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlZ2lzdGVyLFxuICByZWdpc3RlckJlZm9yZUV4aXQsXG4gIHVucmVnaXN0ZXJcbn1cbiJdLCJuYW1lcyI6WyJyZWZzIiwiZXhpdCIsImJlZm9yZUV4aXQiLCJmdW5jdGlvbnMiLCJvbkV4aXQiLCJvbkJlZm9yZUV4aXQiLCJyZWdpc3RyeSIsImVuc3VyZVJlZ2lzdHJ5IiwidW5kZWZpbmVkIiwiRmluYWxpemF0aW9uUmVnaXN0cnkiLCJjbGVhciIsImluc3RhbGwiLCJldmVudCIsImxlbmd0aCIsInByb2Nlc3MiLCJvbiIsInVuaW5zdGFsbCIsInJlbW92ZUxpc3RlbmVyIiwiY2FsbFJlZnMiLCJyZWYiLCJvYmoiLCJkZXJlZiIsImZuIiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiX3JlZ2lzdGVyIiwiRXJyb3IiLCJXZWFrUmVmIiwicmVnaXN0ZXIiLCJwdXNoIiwicmVnaXN0ZXJCZWZvcmVFeGl0IiwidW5yZWdpc3RlciIsImZpbHRlciIsIl9vYmoiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/on-exit-leak-free/index.js\n");

/***/ })

};
;