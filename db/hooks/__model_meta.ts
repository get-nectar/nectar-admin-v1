/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, email: {
                    name: "email",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, mfaFactors: {
                    name: "mfaFactors",
                    type: "MFAFactor",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, registrationStage: {
                    name: "registrationStage",
                    type: "RegistrationStage",
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdWorkspaces: {
                    name: "createdWorkspaces",
                    type: "Workspace",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owner',
                }, workspaces: {
                    name: "workspaces",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                }, activeWorkspace: {
                    name: "activeWorkspace",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'activeUser',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
        },
        metric: {
            name: 'Metric', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'metrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'metrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'metrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'metrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, displayFormat: {
                    name: "displayFormat",
                    type: "MetricDisplayFormat",
                }, name: {
                    name: "name",
                    type: "MetricType",
                }, aggregationType: {
                    name: "aggregationType",
                    type: "MetricAggregationType",
                }, value: {
                    name: "value",
                    type: "Float",
                }, calculatedTimestamp: {
                    name: "calculatedTimestamp",
                    type: "DateTime",
                }, timePeriod: {
                    name: "timePeriod",
                    type: "MetricTimePeriod",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_instagramAccountId_name_calculatedTimestamp_timePeriod: {
                    name: "workspaceId_instagramAccountId_name_calculatedTimestamp_timePeriod",
                    fields: ["workspaceId", "instagramAccountId", "name", "calculatedTimestamp", "timePeriod"]
                }, workspaceId_facebookPageAccountId_name_calculatedTimestamp_timePeriod: {
                    name: "workspaceId_facebookPageAccountId_name_calculatedTimestamp_timePeriod",
                    fields: ["workspaceId", "facebookPageAccountId", "name", "calculatedTimestamp", "timePeriod"]
                }, workspaceId_tiktokAccountId_name_calculatedTimestamp_timePeriod: {
                    name: "workspaceId_tiktokAccountId_name_calculatedTimestamp_timePeriod",
                    fields: ["workspaceId", "tiktokAccountId", "name", "calculatedTimestamp", "timePeriod"]
                },
            },
        },
        journeyMetric: {
            name: 'JourneyMetric', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'metrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, value: {
                    name: "value",
                    type: "Float",
                }, name: {
                    name: "name",
                    type: "JourneyMetricType",
                }, aggregationType: {
                    name: "aggregationType",
                    type: "MetricAggregationType",
                }, displayFormat: {
                    name: "displayFormat",
                    type: "MetricDisplayFormat",
                }, calculatedTimestamp: {
                    name: "calculatedTimestamp",
                    type: "DateTime",
                }, timePeriod: {
                    name: "timePeriod",
                    type: "MetricTimePeriod",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_name_calculatedTimestamp_timePeriod: {
                    name: "journeyId_name_calculatedTimestamp_timePeriod",
                    fields: ["journeyId", "name", "calculatedTimestamp", "timePeriod"]
                },
            },
        },
        agentPerformanceMetric: {
            name: 'AgentPerformanceMetric', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'agentPerformanceMetrics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, name: {
                    name: "name",
                    type: "AgentPerformanceMetricType",
                }, displayFormat: {
                    name: "displayFormat",
                    type: "MetricDisplayFormat",
                }, aggregationType: {
                    name: "aggregationType",
                    type: "MetricAggregationType",
                }, timePeriod: {
                    name: "timePeriod",
                    type: "MetricTimePeriod",
                }, value: {
                    name: "value",
                    type: "Float",
                }, calculatedTimestamp: {
                    name: "calculatedTimestamp",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_name_calculatedTimestamp_timePeriod: {
                    name: "workspaceId_name_calculatedTimestamp_timePeriod",
                    fields: ["workspaceId", "name", "calculatedTimestamp", "timePeriod"]
                },
            },
        },
        workspaceUserActiveTime: {
            name: 'WorkspaceUserActiveTime', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'activeTime',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, activeTimeInSeconds: {
                    name: "activeTimeInSeconds",
                    type: "Int",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        workspacePageAccess: {
            name: 'WorkspacePageAccess', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, tab: {
                    name: "tab",
                    type: "TabType",
                }, accessLevel: {
                    name: "accessLevel",
                    type: "AccessLevel",
                }, accessRoleId: {
                    name: "accessRoleId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'accessRole',
                }, accessRole: {
                    name: "accessRole",
                    type: "WorkspaceAccessRole",
                    isDataModel: true,
                    backLink: 'permissions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "accessRoleId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, accessRoleId_tab: {
                    name: "accessRoleId_tab",
                    fields: ["accessRoleId", "tab"]
                },
            },
        },
        workspaceAccessRole: {
            name: 'WorkspaceAccessRole', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, isDefault: {
                    name: "isDefault",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'accessRoles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, workspaceUsers: {
                    name: "workspaceUsers",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'accessRole',
                }, permissions: {
                    name: "permissions",
                    type: "WorkspacePageAccess",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'accessRole',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_name: {
                    name: "workspaceId_name",
                    fields: ["workspaceId", "name"]
                },
            },
        },
        workspaceUser: {
            name: 'WorkspaceUser', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'members',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'workspaces',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, activeUserId: {
                    name: "activeUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'activeUser',
                }, activeUser: {
                    name: "activeUser",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'activeWorkspace',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "activeUserId" },
                }, role: {
                    name: "role",
                    type: "WorkspaceRole",
                }, savedViews: {
                    name: "savedViews",
                    type: "View",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, notes: {
                    name: "notes",
                    type: "Note",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, inboxViewSettings: {
                    name: "inboxViewSettings",
                    type: "Json",
                    isOptional: true,
                }, communityColumnSettings: {
                    name: "communityColumnSettings",
                    type: "Json",
                    isOptional: true,
                }, escalationDelegate: {
                    name: "escalationDelegate",
                    type: "PersonaEscalationSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'assignee',
                }, personaEscalationDelegate: {
                    name: "personaEscalationDelegate",
                    type: "AiPersonaEscalationSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'assignee',
                }, assignedInboxItems: {
                    name: "assignedInboxItems",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'assignee',
                }, defaultView: {
                    name: "defaultView",
                    type: "DefaultView",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, inboxItemReadStates: {
                    name: "inboxItemReadStates",
                    type: "InboxFeedItemRead",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, sentMessages: {
                    name: "sentMessages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceSender',
                }, sentComments: {
                    name: "sentComments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'isMarkedAsDoneByUser',
                }, analyticViewConfig: {
                    name: "analyticViewConfig",
                    type: "Json",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "WorkspaceUserStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, primaryParticipantActivities: {
                    name: "primaryParticipantActivities",
                    type: "ConversationEventActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'primaryParticipant',
                }, secondaryParticipantActivities: {
                    name: "secondaryParticipantActivities",
                    type: "ConversationEventActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'secondaryParticipant',
                }, createdJourneys: {
                    name: "createdJourneys",
                    type: "Journey",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'createdBy',
                }, updatedJourneys: {
                    name: "updatedJourneys",
                    type: "Journey",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'latestUpdatedBy',
                }, createdInboxRules: {
                    name: "createdInboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'createdBy',
                }, updatedInboxRules: {
                    name: "updatedInboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'lastUpdatedBy',
                }, commentsMarkedAsDone: {
                    name: "commentsMarkedAsDone",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'isMarkedAsDoneByUser',
                }, userViewPins: {
                    name: "userViewPins",
                    type: "WorkspaceUserViewPinState",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, communityMemberBlockState: {
                    name: "communityMemberBlockState",
                    type: "CommunityMemberBlockState",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blockedByUser',
                }, messageBlastCampaigns: {
                    name: "messageBlastCampaigns",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'latestUpdatedBy',
                }, activityLogs: {
                    name: "activityLogs",
                    type: "WorkspaceUserActivityLog",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, activeTime: {
                    name: "activeTime",
                    type: "WorkspaceUserActiveTime",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, generatedLinks: {
                    name: "generatedLinks",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, contentPublishingMetadata: {
                    name: "contentPublishingMetadata",
                    type: "ContentPublishingMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUserAuthor',
                }, accessRoleId: {
                    name: "accessRoleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'accessRole',
                }, accessRole: {
                    name: "accessRole",
                    type: "WorkspaceAccessRole",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'workspaceUsers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "accessRoleId" },
                }, triggeredJourneySessions: {
                    name: "triggeredJourneySessions",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'triggeredBy',
                }, triggeredJourneySessionsV2: {
                    name: "triggeredJourneySessionsV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'triggeredBy',
                }, metricsRefreshRequests: {
                    name: "metricsRefreshRequests",
                    type: "MetricsRefreshRequests",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'addedByUser',
                }, slackUserAccounts: {
                    name: "slackUserAccounts",
                    type: "SlackUserAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                }, notificationSettings: {
                    name: "notificationSettings",
                    type: "NotificationSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceUser',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, activeUserId: {
                    name: "activeUserId",
                    fields: ["activeUserId"]
                }, workspaceId_userId: {
                    name: "workspaceId_userId",
                    fields: ["workspaceId", "userId"]
                },
            },
        },
        workspaceUserActivityLog: {
            name: 'WorkspaceUserActivityLog', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'activityLogs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, action: {
                    name: "action",
                    type: "WorkspaceUserActivityLogAction",
                }, pagePathname: {
                    name: "pagePathname",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        metricsRefreshRequests: {
            name: 'MetricsRefreshRequests', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'metricsRefreshRequests',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'metricsRefreshRequests',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, entityType: {
                    name: "entityType",
                    type: "MetricsRefreshRequestEntityType",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        workspace: {
            name: 'Workspace', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, companyName: {
                    name: "companyName",
                    type: "String",
                }, industry: {
                    name: "industry",
                    type: "Industry",
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'owner',
                }, shortCode: {
                    name: "shortCode",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [] }],
                }, teamSize: {
                    name: "teamSize",
                    type: "Size",
                }, logoUri: {
                    name: "logoUri",
                    type: "String",
                    isOptional: true,
                }, invitedEmails: {
                    name: "invitedEmails",
                    type: "Json",
                    isOptional: true,
                }, shortLinkDomainName: {
                    name: "shortLinkDomainName",
                    type: "String",
                    isOptional: true,
                }, owner: {
                    name: "owner",
                    type: "User",
                    isDataModel: true,
                    backLink: 'createdWorkspaces',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "ownerId" },
                }, members: {
                    name: "members",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, communityFields: {
                    name: "communityFields",
                    type: "CustomField",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, metaAdAccount: {
                    name: "metaAdAccount",
                    type: "MetaAdAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, shopifyAccount: {
                    name: "shopifyAccount",
                    type: "ShopifyAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, knowledgeBase: {
                    name: "knowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'workspace',
                }, persona: {
                    name: "persona",
                    type: "Persona",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, aiPersona: {
                    name: "aiPersona",
                    type: "AiPersona",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, personaConfig: {
                    name: "personaConfig",
                    type: "PersonaConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'workspace',
                }, customLabels: {
                    name: "customLabels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, intents: {
                    name: "intents",
                    type: "Intent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, intentCategory: {
                    name: "intentCategory",
                    type: "IntentCategory",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, responseJourney: {
                    name: "responseJourney",
                    type: "ResponseJourney",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, suggestedIntents: {
                    name: "suggestedIntents",
                    type: "SuggestedIntent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, trackedTopics: {
                    name: "trackedTopics",
                    type: "TrackedTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, savedViews: {
                    name: "savedViews",
                    type: "View",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, metrics: {
                    name: "metrics",
                    type: "Metric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, agentPerformanceMetrics: {
                    name: "agentPerformanceMetrics",
                    type: "AgentPerformanceMetric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, links: {
                    name: "links",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, recentActivity: {
                    name: "recentActivity",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, insight: {
                    name: "insight",
                    type: "Insight",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, insightGroup: {
                    name: "insightGroup",
                    type: "InsightGroup",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, insightCategory: {
                    name: "insightCategory",
                    type: "InsightCategory",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, insightClusterPendingItems: {
                    name: "insightClusterPendingItems",
                    type: "InsightClusterPendingItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, internalMetadata: {
                    name: "internalMetadata",
                    type: "WorkspaceInternalMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'workspace',
                }, journeys: {
                    name: "journeys",
                    type: "Journey",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, moderatedItems: {
                    name: "moderatedItems",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, communityMemberEmails: {
                    name: "communityMemberEmails",
                    type: "CommunityMemberEmail",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, communityMemberPhoneNumbers: {
                    name: "communityMemberPhoneNumbers",
                    type: "CommunityMemberPhoneNumber",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, communityImportJobs: {
                    name: "communityImportJobs",
                    type: "CommunityImportJob",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, autopilotDraftState: {
                    name: "autopilotDraftState",
                    type: "AutopilotDraftState",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, cardTemplates: {
                    name: "cardTemplates",
                    type: "CardTemplate",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, klaviyoAccount: {
                    name: "klaviyoAccount",
                    type: "KlaviyoAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, inboxRules: {
                    name: "inboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, blastTemplates: {
                    name: "blastTemplates",
                    type: "BlastTemplate",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, blastTemplateCategories: {
                    name: "blastTemplateCategories",
                    type: "BlastTemplateCategory",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, workingHours: {
                    name: "workingHours",
                    type: "WorkingHours",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'workspace',
                }, instagramProfiles: {
                    name: "instagramProfiles",
                    type: "CommunityMemberInstagramProfileData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, facebookProfiles: {
                    name: "facebookProfiles",
                    type: "CommunityMemberFacebookProfileData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, tiktokProfiles: {
                    name: "tiktokProfiles",
                    type: "CommunityMemberTiktokProfileData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, conversations: {
                    name: "conversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, comments: {
                    name: "comments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, messages: {
                    name: "messages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, accessRoles: {
                    name: "accessRoles",
                    type: "WorkspaceAccessRole",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, thirdPartyApps: {
                    name: "thirdPartyApps",
                    type: "ThirdPartyApp",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, thirdPartyAppTokens: {
                    name: "thirdPartyAppTokens",
                    type: "ThirdPartyAppToken",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, webhookSubscriptions: {
                    name: "webhookSubscriptions",
                    type: "WebhookSubscription",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, keywords: {
                    name: "keywords",
                    type: "Keyword",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, mentionedKeywords: {
                    name: "mentionedKeywords",
                    type: "KeywordMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, socialListeningTopics: {
                    name: "socialListeningTopics",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, messageReactions: {
                    name: "messageReactions",
                    type: "MessageReaction",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, isMFAEnabled: {
                    name: "isMFAEnabled",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, inboxSettings: {
                    name: "inboxSettings",
                    type: "InboxSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, productMentions: {
                    name: "productMentions",
                    type: "ProductMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, metricsRefreshRequests: {
                    name: "metricsRefreshRequests",
                    type: "MetricsRefreshRequests",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, automationPreviews: {
                    name: "automationPreviews",
                    type: "AutomationPreview",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, automationPreviewSessions: {
                    name: "automationPreviewSessions",
                    type: "AutomationPreviewSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, prompts: {
                    name: "prompts",
                    type: "PromptTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, slackWorkspaces: {
                    name: "slackWorkspaces",
                    type: "SlackWorkspace",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, slackUserAccounts: {
                    name: "slackUserAccounts",
                    type: "SlackUserAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, notificationSettings: {
                    name: "notificationSettings",
                    type: "NotificationSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, customProducts: {
                    name: "customProducts",
                    type: "CustomProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                }, productTrackings: {
                    name: "productTrackings",
                    type: "ProductTracking",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspace',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shortCode: {
                    name: "shortCode",
                    fields: ["shortCode"]
                },
            },
        },
        inboxSetting: {
            name: 'InboxSetting', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, settingType: {
                    name: "settingType",
                    type: "InboxSettingType",
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'inboxSettings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_settingType: {
                    name: "workspaceId_settingType",
                    fields: ["workspaceId", "settingType"]
                },
            },
        },
        taskLock: {
            name: 'TaskLock', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                }, status: {
                    name: "status",
                    type: "TaskStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, info: {
                    name: "info",
                    type: "Json",
                    isOptional: true,
                }, lockAcquiredAt: {
                    name: "lockAcquiredAt",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        mFAFactor: {
            name: 'MFAFactor', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, userId: {
                    name: "userId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    backLink: 'mfaFactors',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, type: {
                    name: "type",
                    type: "MFAFactorType",
                }, status: {
                    name: "status",
                    type: "MFAFactorStatus",
                }, secret: {
                    name: "secret",
                    type: "String",
                }, phoneNumber: {
                    name: "phoneNumber",
                    type: "String",
                    isOptional: true,
                }, friendlyName: {
                    name: "friendlyName",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        workspaceInternalMetadata: {
            name: 'WorkspaceInternalMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'internalMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, contentEmbeddings: {
                    name: "contentEmbeddings",
                    type: "ContentEmbedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workspaceInternalMetadata',
                }, lastSuggestedIntentRun: {
                    name: "lastSuggestedIntentRun",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId: {
                    name: "workspaceId",
                    fields: ["workspaceId"]
                },
            },
        },
        note: {
            name: 'Note', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'notes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'customNotes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, content: {
                    name: "content",
                    type: "String",
                }, isPinned: {
                    name: "isPinned",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'notes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, attachments: {
                    name: "attachments",
                    type: "Json",
                    isArray: true,
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'notes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, conversationFeedItem: {
                    name: "conversationFeedItem",
                    type: "ConversationFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'note',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        workspaceUserViewPinState: {
            name: 'WorkspaceUserViewPinState', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, isPinned: {
                    name: "isPinned",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, viewId: {
                    name: "viewId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'view',
                }, view: {
                    name: "view",
                    type: "View",
                    isDataModel: true,
                    backLink: 'userViewPins',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "viewId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'userViewPins',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceUserId_viewId: {
                    name: "workspaceUserId_viewId",
                    fields: ["workspaceUserId", "viewId"]
                },
            },
        },
        view: {
            name: 'View', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'savedViews',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'savedViews',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'views',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'views',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'views',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, isDefault: {
                    name: "isDefault",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isPinned: {
                    name: "isPinned",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, surface: {
                    name: "surface",
                    type: "ViewSurface",
                }, title: {
                    name: "title",
                    type: "String",
                }, filters: {
                    name: "filters",
                    type: "Filter",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'view',
                }, predefinedList: {
                    name: "predefinedList",
                    type: "PredefinedViewType",
                    isOptional: true,
                }, defaultView: {
                    name: "defaultView",
                    type: "DefaultView",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'view',
                }, viewType: {
                    name: "viewType",
                    type: "ViewType",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, columnSettings: {
                    name: "columnSettings",
                    type: "Json",
                    isOptional: true,
                }, order: {
                    name: "order",
                    type: "Int",
                    isOptional: true,
                }, sidebarOrder: {
                    name: "sidebarOrder",
                    type: "Int",
                    isOptional: true,
                }, isPredefined: {
                    name: "isPredefined",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, userViewPins: {
                    name: "userViewPins",
                    type: "WorkspaceUserViewPinState",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'view',
                }, socialListeningTopic: {
                    name: "socialListeningTopic",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'view',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        defaultView: {
            name: 'DefaultView', fields: {
                workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, viewId: {
                    name: "viewId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'view',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'defaultView',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, view: {
                    name: "view",
                    type: "View",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'defaultView',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "viewId" },
                }, surface: {
                    name: "surface",
                    type: "ViewSurface",
                }, predefinedViewId: {
                    name: "predefinedViewId",
                    type: "PredefinedViewId",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                workspaceUserId: {
                    name: "workspaceUserId",
                    fields: ["workspaceUserId"]
                }, surface_workspaceUserId: {
                    name: "surface_workspaceUserId",
                    fields: ["surface", "workspaceUserId"]
                },
            },
        },
        filter: {
            name: 'Filter', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, key: {
                    name: "key",
                    type: "String",
                }, labels: {
                    name: "labels",
                    type: "String",
                    isArray: true,
                }, condition: {
                    name: "condition",
                    type: "FilterCondition",
                }, value: {
                    name: "value",
                    type: "Json",
                }, view: {
                    name: "view",
                    type: "View",
                    isDataModel: true,
                    backLink: 'filters',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "viewId" },
                }, viewId: {
                    name: "viewId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'view',
                }, queryValue: {
                    name: "queryValue",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, viewId_key: {
                    name: "viewId_key",
                    fields: ["viewId", "key"]
                },
            },
        },
        personaConfig: {
            name: 'PersonaConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'personaConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, channelSettings: {
                    name: "channelSettings",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentConfig',
                }, escalationSetting: {
                    name: "escalationSetting",
                    type: "AiPersonaEscalationSetting",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaConfig',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId: {
                    name: "workspaceId",
                    fields: ["workspaceId"]
                },
            },
        },
        personaChannelSetting: {
            name: 'PersonaChannelSetting', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, parentConfigId: {
                    name: "parentConfigId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'parentConfig',
                }, parentConfig: {
                    name: "parentConfig",
                    type: "PersonaConfig",
                    isDataModel: true,
                    backLink: 'channelSettings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentConfigId" },
                }, aiPersonaId: {
                    name: "aiPersonaId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'aiPersona',
                }, aiPersona: {
                    name: "aiPersona",
                    type: "AiPersona",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'channelSetting',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "aiPersonaId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaChannelSetting',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaChannelSetting',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaChannelSetting',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, enabledTopics: {
                    name: "enabledTopics",
                    type: "PersonaChannelEnabledTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'personaChannelSetting',
                }, responseTime: {
                    name: "responseTime",
                    type: "PersonaChannelResponseTime",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'channelSetting',
                }, businessHoursOption: {
                    name: "businessHoursOption",
                    type: "PersonaChannelBusinessHoursOptions",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    fields: ["instagramAccountId"]
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    fields: ["facebookPageAccountId"]
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    fields: ["tiktokAccountId"]
                },
            },
        },
        personaChannelResponseTime: {
            name: 'PersonaChannelResponseTime', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, channelSettingId: {
                    name: "channelSettingId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'channelSetting',
                }, channelSetting: {
                    name: "channelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    backLink: 'responseTime',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "channelSettingId" },
                }, channelType: {
                    name: "channelType",
                    type: "PersonaItemChannel",
                }, timeDelay: {
                    name: "timeDelay",
                    type: "ResponseDelayTime",
                    attributes: [{ "name": "@default", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, channelSettingId_channelType: {
                    name: "channelSettingId_channelType",
                    fields: ["channelSettingId", "channelType"]
                },
            },
        },
        personaChannelEnabledTopic: {
            name: 'PersonaChannelEnabledTopic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, personaChannelSettingId: {
                    name: "personaChannelSettingId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'personaChannelSetting',
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    backLink: 'enabledTopics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "personaChannelSettingId" },
                }, topicId: {
                    name: "topicId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'topic',
                }, topic: {
                    name: "topic",
                    type: "Intent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaEnabledTopics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "topicId" },
                }, allowUntrainedTopics: {
                    name: "allowUntrainedTopics",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, enableAllTopics: {
                    name: "enableAllTopics",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, channel: {
                    name: "channel",
                    type: "PersonaTopicChannel",
                }, mode: {
                    name: "mode",
                    type: "PersonaChannelTopicReplyMode",
                }, autopilotEnabledAt: {
                    name: "autopilotEnabledAt",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, personaChannelSettingId_topicId_channel: {
                    name: "personaChannelSettingId_topicId_channel",
                    fields: ["personaChannelSettingId", "topicId", "channel"]
                },
            },
        },
        personaEscalationSetting: {
            name: 'PersonaEscalationSetting', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, channelSettingId: {
                    name: "channelSettingId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'channelSetting',
                }, channelSetting: {
                    name: "channelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "channelSettingId" },
                }, escalationOptions: {
                    name: "escalationOptions",
                    type: "PersonaEscalationOption",
                    isArray: true,
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, instructionsEnabled: {
                    name: "instructionsEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, instructions: {
                    name: "instructions",
                    type: "String",
                    isOptional: true,
                }, assigneeId: {
                    name: "assigneeId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'assignee',
                }, assignee: {
                    name: "assignee",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'escalationDelegate',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "assigneeId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, channelSettingId: {
                    name: "channelSettingId",
                    fields: ["channelSettingId"]
                },
            },
        },
        aiPersonaEscalationSetting: {
            name: 'AiPersonaEscalationSetting', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, personaConfigId: {
                    name: "personaConfigId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'personaConfig',
                }, personaConfig: {
                    name: "personaConfig",
                    type: "PersonaConfig",
                    isDataModel: true,
                    backLink: 'escalationSetting',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "personaConfigId" },
                }, escalationOptions: {
                    name: "escalationOptions",
                    type: "PersonaEscalationOption",
                    isArray: true,
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, instructionsEnabled: {
                    name: "instructionsEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, instructions: {
                    name: "instructions",
                    type: "String",
                    isOptional: true,
                }, assigneeId: {
                    name: "assigneeId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'assignee',
                }, assignee: {
                    name: "assignee",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'personaEscalationDelegate',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "assigneeId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, personaConfigId: {
                    name: "personaConfigId",
                    fields: ["personaConfigId"]
                },
            },
        },
        communityMemberKlaviyoProfile: {
            name: 'CommunityMemberKlaviyoProfile', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'klaviyoProfile',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, klaviyoAccountId: {
                    name: "klaviyoAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'klaviyoAccount',
                }, klaviyoAccount: {
                    name: "klaviyoAccount",
                    type: "KlaviyoAccount",
                    isDataModel: true,
                    backLink: 'klaviyoProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "klaviyoAccountId" },
                }, profileId: {
                    name: "profileId",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        communityMemberKlaviyoLinkedProfile: {
            name: 'CommunityMemberKlaviyoLinkedProfile', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'klaviyoProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, klaviyoAccountId: {
                    name: "klaviyoAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'klaviyoAccount',
                }, klaviyoAccount: {
                    name: "klaviyoAccount",
                    type: "KlaviyoAccount",
                    isDataModel: true,
                    backLink: 'klaviyoLinkedProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "klaviyoAccountId" },
                }, profileId: {
                    name: "profileId",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, klaviyoAccountId_profileId_communityMemberId: {
                    name: "klaviyoAccountId_profileId_communityMemberId",
                    fields: ["klaviyoAccountId", "profileId", "communityMemberId"]
                },
            },
        },
        klaviyoAccount: {
            name: 'KlaviyoAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'klaviyoAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                }, organizationName: {
                    name: "organizationName",
                    type: "String",
                }, scope: {
                    name: "scope",
                    type: "String",
                }, accountId: {
                    name: "accountId",
                    type: "String",
                }, jobs: {
                    name: "jobs",
                    type: "KlaviyoJob",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'klaviyoAccount',
                }, emailListId: {
                    name: "emailListId",
                    type: "String",
                    isOptional: true,
                }, smsListId: {
                    name: "smsListId",
                    type: "String",
                    isOptional: true,
                }, klaviyoProfiles: {
                    name: "klaviyoProfiles",
                    type: "CommunityMemberKlaviyoProfile",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'klaviyoAccount',
                }, klaviyoLinkedProfiles: {
                    name: "klaviyoLinkedProfiles",
                    type: "CommunityMemberKlaviyoLinkedProfile",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'klaviyoAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        klaviyoJob: {
            name: 'KlaviyoJob', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, jobId: {
                    name: "jobId",
                    type: "String",
                }, klaviyoId: {
                    name: "klaviyoId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'klaviyoAccount',
                }, klaviyoAccount: {
                    name: "klaviyoAccount",
                    type: "KlaviyoAccount",
                    isDataModel: true,
                    backLink: 'jobs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "klaviyoId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        slackWorkspace: {
            name: 'SlackWorkspace', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'slackWorkspaces',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                }, scope: {
                    name: "scope",
                    type: "String",
                }, teamName: {
                    name: "teamName",
                    type: "String",
                }, teamId: {
                    name: "teamId",
                    type: "String",
                }, botUserId: {
                    name: "botUserId",
                    type: "String",
                }, appId: {
                    name: "appId",
                    type: "String",
                }, members: {
                    name: "members",
                    type: "SlackUserAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'slackWorkspace',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_teamId: {
                    name: "workspaceId_teamId",
                    fields: ["workspaceId", "teamId"]
                },
            },
        },
        notificationSetting: {
            name: 'NotificationSetting', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'notificationSettings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'notificationSettings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, sendEmailNotification: {
                    name: "sendEmailNotification",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, sendSlackNotification: {
                    name: "sendSlackNotification",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, notificationType: {
                    name: "notificationType",
                    type: "NotificationSubscriptionType",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceUserId_notificationType: {
                    name: "workspaceUserId_notificationType",
                    fields: ["workspaceUserId", "notificationType"]
                },
            },
        },
        slackUserAccount: {
            name: 'SlackUserAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'slackUserAccounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                    isOptional: true,
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                    isOptional: true,
                }, scope: {
                    name: "scope",
                    type: "String",
                    isOptional: true,
                }, slackUserId: {
                    name: "slackUserId",
                    type: "String",
                }, dmChannelId: {
                    name: "dmChannelId",
                    type: "String",
                }, slackWorkspaceId: {
                    name: "slackWorkspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'slackWorkspace',
                }, slackWorkspace: {
                    name: "slackWorkspace",
                    type: "SlackWorkspace",
                    isDataModel: true,
                    backLink: 'members',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "slackWorkspaceId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'slackUserAccounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_slackWorkspaceId_slackUserId: {
                    name: "workspaceId_slackWorkspaceId_slackUserId",
                    fields: ["workspaceId", "slackWorkspaceId", "slackUserId"]
                },
            },
        },
        instagramAccount: {
            name: 'InstagramAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'instagramAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, instagramBusinessId: {
                    name: "instagramBusinessId",
                    type: "String",
                }, facebookPageId: {
                    name: "facebookPageId",
                    type: "String",
                }, facebookPageName: {
                    name: "facebookPageName",
                    type: "String",
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    type: "String",
                }, userAccessToken: {
                    name: "userAccessToken",
                    type: "String",
                }, pageAccessToken: {
                    name: "pageAccessToken",
                    type: "String",
                }, username: {
                    name: "username",
                    type: "String",
                }, fullName: {
                    name: "fullName",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, conversationOwner: {
                    name: "conversationOwner",
                    type: "ConversationOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramAccount',
                }, contentOwner: {
                    name: "contentOwner",
                    type: "ContentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramAccount',
                }, commentOwner: {
                    name: "commentOwner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramAccount',
                }, communityMemberData: {
                    name: "communityMemberData",
                    type: "CommunityMemberInstagramRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owningAccountInstagram',
                }, messageBlastCampaign: {
                    name: "messageBlastCampaign",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, metrics: {
                    name: "metrics",
                    type: "Metric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, views: {
                    name: "views",
                    type: "View",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, instagramTriggers: {
                    name: "instagramTriggers",
                    type: "InstagramTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, instagramModerationConfig: {
                    name: "instagramModerationConfig",
                    type: "InstagramModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramAccount',
                }, inboxRules: {
                    name: "inboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, contentSyncTasks: {
                    name: "contentSyncTasks",
                    type: "ContentSyncTask",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, hashtagTrackers: {
                    name: "hashtagTrackers",
                    type: "HashtagTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                }, searchQueryTrackers: {
                    name: "searchQueryTrackers",
                    type: "SearchQueryTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramBusinessId_workspaceId: {
                    name: "instagramBusinessId_workspaceId",
                    fields: ["instagramBusinessId", "workspaceId"]
                },
            },
        },
        metaAdAccount: {
            name: 'MetaAdAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'metaAdAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, accountId: {
                    name: "accountId",
                    type: "String",
                }, adAccountId: {
                    name: "adAccountId",
                    type: "String",
                }, businessName: {
                    name: "businessName",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                }, ownerId: {
                    name: "ownerId",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, accountId_workspaceId: {
                    name: "accountId_workspaceId",
                    fields: ["accountId", "workspaceId"]
                },
            },
        },
        facebookPageAccount: {
            name: 'FacebookPageAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'facebookPageAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, facebookPageId: {
                    name: "facebookPageId",
                    type: "String",
                }, facebookPageName: {
                    name: "facebookPageName",
                    type: "String",
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    type: "String",
                }, userAccessToken: {
                    name: "userAccessToken",
                    type: "String",
                }, pageAccessToken: {
                    name: "pageAccessToken",
                    type: "String",
                }, fullName: {
                    name: "fullName",
                    type: "String",
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, conversationOwner: {
                    name: "conversationOwner",
                    type: "ConversationOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookPageAccount',
                }, contentOwner: {
                    name: "contentOwner",
                    type: "ContentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookAccount',
                }, commentOwner: {
                    name: "commentOwner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookAccount',
                }, relationData: {
                    name: "relationData",
                    type: "CommunityMemberFacebookRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owningAccountFacebook',
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, facebookTriggers: {
                    name: "facebookTriggers",
                    type: "FacebookTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, metrics: {
                    name: "metrics",
                    type: "Metric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, views: {
                    name: "views",
                    type: "View",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, facebookModerationConfig: {
                    name: "facebookModerationConfig",
                    type: "FacebookModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookPageAccount',
                }, contentSyncTasks: {
                    name: "contentSyncTasks",
                    type: "ContentSyncTask",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                }, inboxRules: {
                    name: "inboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookPageAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, facebookPageId_workspaceId: {
                    name: "facebookPageId_workspaceId",
                    fields: ["facebookPageId", "workspaceId"]
                },
            },
        },
        tikTokAccount: {
            name: 'TikTokAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'tiktokAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, tiktokBusinessId: {
                    name: "tiktokBusinessId",
                    type: "String",
                }, userAccessToken: {
                    name: "userAccessToken",
                    type: "String",
                }, userRefreshToken: {
                    name: "userRefreshToken",
                    type: "String",
                }, username: {
                    name: "username",
                    type: "String",
                }, fullName: {
                    name: "fullName",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, baseRegion: {
                    name: "baseRegion",
                    type: "String",
                    isOptional: true,
                }, accountType: {
                    name: "accountType",
                    type: "TikTokAccountType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, userType: {
                    name: "userType",
                    type: "TikTokUserType",
                    isOptional: true,
                }, conversationOwner: {
                    name: "conversationOwner",
                    type: "ConversationOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokAccount',
                }, contentOwner: {
                    name: "contentOwner",
                    type: "ContentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokAccount',
                }, commentOwner: {
                    name: "commentOwner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokAccount',
                }, relationData: {
                    name: "relationData",
                    type: "CommunityMemberTiktokRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'owningAccountTiktok',
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, metrics: {
                    name: "metrics",
                    type: "Metric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, views: {
                    name: "views",
                    type: "View",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, tiktokModerationConfig: {
                    name: "tiktokModerationConfig",
                    type: "TiktokModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokAccount',
                }, trackedHashtags: {
                    name: "trackedHashtags",
                    type: "TikTokHashtagTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccounts',
                    isRelationOwner: true,
                }, trackedSearchQueries: {
                    name: "trackedSearchQueries",
                    type: "TikTokSearchQueryTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccounts',
                    isRelationOwner: true,
                }, tiktokShops: {
                    name: "tiktokShops",
                    type: "TikTokShop",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, hashtagTrackers: {
                    name: "hashtagTrackers",
                    type: "HashtagTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                }, searchQueryTrackers: {
                    name: "searchQueryTrackers",
                    type: "SearchQueryTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, tiktokBusinessId_workspaceId: {
                    name: "tiktokBusinessId_workspaceId",
                    fields: ["tiktokBusinessId", "workspaceId"]
                },
            },
        },
        tikTokShop: {
            name: 'TikTokShop', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    backLink: 'tiktokShops',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, shopId: {
                    name: "shopId",
                    type: "String",
                }, sellerType: {
                    name: "sellerType",
                    type: "TikTokShopSellerType",
                }, cipher: {
                    name: "cipher",
                    type: "String",
                }, code: {
                    name: "code",
                    type: "String",
                }, products: {
                    name: "products",
                    type: "TikTokProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokShop',
                }, orders: {
                    name: "orders",
                    type: "TikTokOrder",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokShop',
                }, coupons: {
                    name: "coupons",
                    type: "TikTokCoupon",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokShop',
                }, customerService: {
                    name: "customerService",
                    type: "TikTokCustomerService",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokShop',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopId_tiktokAccountId: {
                    name: "shopId_tiktokAccountId",
                    fields: ["shopId", "tiktokAccountId"]
                },
            },
        },
        socialListeningTopic: {
            name: 'SocialListeningTopic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'socialListeningTopics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, viewId: {
                    name: "viewId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'view',
                }, view: {
                    name: "view",
                    type: "View",
                    isDataModel: true,
                    backLink: 'socialListeningTopic',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "viewId" },
                }, conditions: {
                    name: "conditions",
                    type: "Json",
                    isOptional: true,
                }, conditionsUniqueHash: {
                    name: "conditionsUniqueHash",
                    type: "String",
                    isOptional: true,
                }, hashtags: {
                    name: "hashtags",
                    type: "HashtagTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'socialListeningTopics',
                    isRelationOwner: true,
                }, searchQueryTrackers: {
                    name: "searchQueryTrackers",
                    type: "SearchQueryTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'socialListeningTopics',
                    isRelationOwner: true,
                }, prompts: {
                    name: "prompts",
                    type: "PromptTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'socialListeningTopic',
                }, globalContents: {
                    name: "globalContents",
                    type: "GlobalContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'topics',
                    isRelationOwner: true,
                }, contents: {
                    name: "contents",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'topics',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, viewId: {
                    name: "viewId",
                    fields: ["viewId"]
                }, conditionsUniqueHash: {
                    name: "conditionsUniqueHash",
                    fields: ["conditionsUniqueHash"]
                },
            },
        },
        hashtagTracker: {
            name: 'HashtagTracker', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, hashtagId: {
                    name: "hashtagId",
                    type: "String",
                    isOptional: true,
                }, hashtag: {
                    name: "hashtag",
                    type: "String",
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, priority: {
                    name: "priority",
                    type: "HashtagPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, lastRun: {
                    name: "lastRun",
                    type: "DateTime",
                    isOptional: true,
                }, lastRunId: {
                    name: "lastRunId",
                    type: "String",
                    isOptional: true,
                }, lastRunStatus: {
                    name: "lastRunStatus",
                    type: "HashtagTrackerStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, isActiveOnBrand: {
                    name: "isActiveOnBrand",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, globalContents: {
                    name: "globalContents",
                    type: "GlobalContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'hashtagTrackers',
                }, accounts: {
                    name: "accounts",
                    type: "HashtagTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'hashtagTracker',
                }, contents: {
                    name: "contents",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'hashtagTrackers',
                }, socialListeningTopics: {
                    name: "socialListeningTopics",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'hashtags',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, hashtagId: {
                    name: "hashtagId",
                    fields: ["hashtagId"]
                }, hashtag_platform: {
                    name: "hashtag_platform",
                    fields: ["hashtag", "platform"]
                },
            },
        },
        searchQueryTracker: {
            name: 'SearchQueryTracker', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, searchQuery: {
                    name: "searchQuery",
                    type: "String",
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, priority: {
                    name: "priority",
                    type: "SearchQueryPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, lastRun: {
                    name: "lastRun",
                    type: "DateTime",
                    isOptional: true,
                }, lastRunId: {
                    name: "lastRunId",
                    type: "String",
                    isOptional: true,
                }, lastRunStatus: {
                    name: "lastRunStatus",
                    type: "SearchQueryTrackerStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, globalContents: {
                    name: "globalContents",
                    type: "GlobalContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'searchQueryTrackers',
                }, contents: {
                    name: "contents",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'searchQueryTrackers',
                }, socialListeningTopics: {
                    name: "socialListeningTopics",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'searchQueryTrackers',
                    isRelationOwner: true,
                }, accounts: {
                    name: "accounts",
                    type: "SearchQueryTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'searchQueryTracker',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, searchQuery: {
                    name: "searchQuery",
                    fields: ["searchQuery"]
                }, searchQuery_platform: {
                    name: "searchQuery_platform",
                    fields: ["searchQuery", "platform"]
                },
            },
        },
        promptTracker: {
            name: 'PromptTracker', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, prompt: {
                    name: "prompt",
                    type: "String",
                }, hashtagsToAccounts: {
                    name: "hashtagsToAccounts",
                    type: "HashtagTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'prompts',
                    isRelationOwner: true,
                }, searchQueryToAccounts: {
                    name: "searchQueryToAccounts",
                    type: "SearchQueryTrackerToAccounts",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'prompts',
                    isRelationOwner: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'prompts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, socialListeningTopicId: {
                    name: "socialListeningTopicId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'socialListeningTopic',
                }, socialListeningTopic: {
                    name: "socialListeningTopic",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'prompts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "socialListeningTopicId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        searchQueryTrackerToAccounts: {
            name: 'SearchQueryTrackerToAccounts', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, searchQueryTrackerId: {
                    name: "searchQueryTrackerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'searchQueryTracker',
                }, searchQueryTracker: {
                    name: "searchQueryTracker",
                    type: "SearchQueryTracker",
                    isDataModel: true,
                    backLink: 'accounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "searchQueryTrackerId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'searchQueryTrackers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'searchQueryTrackers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, priority: {
                    name: "priority",
                    type: "SearchQueryTrackerPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, status: {
                    name: "status",
                    type: "SearchQueryAccountTrackerStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, source: {
                    name: "source",
                    type: "SearchQueryTrackerSource",
                    isArray: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, prompts: {
                    name: "prompts",
                    type: "PromptTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'searchQueryToAccounts',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, searchQueryTrackerId_tiktokAccountId: {
                    name: "searchQueryTrackerId_tiktokAccountId",
                    fields: ["searchQueryTrackerId", "tiktokAccountId"]
                }, searchQueryTrackerId_instagramAccountId: {
                    name: "searchQueryTrackerId_instagramAccountId",
                    fields: ["searchQueryTrackerId", "instagramAccountId"]
                },
            },
        },
        hashtagTrackerToAccounts: {
            name: 'HashtagTrackerToAccounts', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, hashtagTrackerId: {
                    name: "hashtagTrackerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'hashtagTracker',
                }, hashtagTracker: {
                    name: "hashtagTracker",
                    type: "HashtagTracker",
                    isDataModel: true,
                    backLink: 'accounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "hashtagTrackerId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'hashtagTrackers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'hashtagTrackers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, priority: {
                    name: "priority",
                    type: "HashtagTrackerPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, status: {
                    name: "status",
                    type: "HashtagTrackingAccountStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, source: {
                    name: "source",
                    type: "HashtagTrackerSource",
                    isArray: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, prompts: {
                    name: "prompts",
                    type: "PromptTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'hashtagsToAccounts',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, hashtagTrackerId_tiktokAccountId: {
                    name: "hashtagTrackerId_tiktokAccountId",
                    fields: ["hashtagTrackerId", "tiktokAccountId"]
                }, hashtagTrackerId_instagramAccountId: {
                    name: "hashtagTrackerId_instagramAccountId",
                    fields: ["hashtagTrackerId", "instagramAccountId"]
                },
            },
        },
        tikTokHashtagTracker: {
            name: 'TikTokHashtagTracker', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, hashtag: {
                    name: "hashtag",
                    type: "String",
                }, lastRun: {
                    name: "lastRun",
                    type: "DateTime",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, priority: {
                    name: "priority",
                    type: "HashtagPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, lastResults: {
                    name: "lastResults",
                    type: "Json",
                    isOptional: true,
                }, lastRunId: {
                    name: "lastRunId",
                    type: "String",
                    isOptional: true,
                }, lastRunStatus: {
                    name: "lastRunStatus",
                    type: "TikTokTrackerStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, tiktokAccounts: {
                    name: "tiktokAccounts",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'trackedHashtags',
                    isRelationOwner: true,
                }, contents: {
                    name: "contents",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokHashtagTrackers',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, hashtag: {
                    name: "hashtag",
                    fields: ["hashtag"]
                },
            },
        },
        tikTokSearchQueryTracker: {
            name: 'TikTokSearchQueryTracker', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, searchQuery: {
                    name: "searchQuery",
                    type: "String",
                }, lastRun: {
                    name: "lastRun",
                    type: "DateTime",
                    isOptional: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, priority: {
                    name: "priority",
                    type: "SearchQueryPriority",
                    attributes: [{ "name": "@default", "args": [] }],
                }, lastResults: {
                    name: "lastResults",
                    type: "Json",
                    isOptional: true,
                }, lastRunId: {
                    name: "lastRunId",
                    type: "String",
                    isOptional: true,
                }, lastRunStatus: {
                    name: "lastRunStatus",
                    type: "TikTokTrackerStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, tiktokAccounts: {
                    name: "tiktokAccounts",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'trackedSearchQueries',
                    isRelationOwner: true,
                }, isActiveOnBrand: {
                    name: "isActiveOnBrand",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, contents: {
                    name: "contents",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokSearchQueryTrackers',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, searchQuery: {
                    name: "searchQuery",
                    fields: ["searchQuery"]
                },
            },
        },
        tikTokProduct: {
            name: 'TikTokProduct', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, tiktokShopId: {
                    name: "tiktokShopId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokShop',
                }, tiktokShop: {
                    name: "tiktokShop",
                    type: "TikTokShop",
                    isDataModel: true,
                    backLink: 'products',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokShopId" },
                }, productId: {
                    name: "productId",
                    type: "String",
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                }, status: {
                    name: "status",
                    type: "TikTokProductStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, price: {
                    name: "price",
                    type: "Float",
                }, currency: {
                    name: "currency",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "USD" }] }],
                }, imageHeight: {
                    name: "imageHeight",
                    type: "Int",
                }, imageWidth: {
                    name: "imageWidth",
                    type: "Int",
                }, imageUrl: {
                    name: "imageUrl",
                    type: "String",
                }, createTime: {
                    name: "createTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updateTime: {
                    name: "updateTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, orders: {
                    name: "orders",
                    type: "TikTokOrderProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'product',
                }, coupons: {
                    name: "coupons",
                    type: "TikTokCoupon",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'productIds',
                    isRelationOwner: true,
                }, tiktokCards: {
                    name: "tiktokCards",
                    type: "TikTokCard",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokProduct',
                }, productImages: {
                    name: "productImages",
                    type: "ProductImage",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokProduct',
                }, productTracking: {
                    name: "productTracking",
                    type: "ProductTracking",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokProduct',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, productId: {
                    name: "productId",
                    fields: ["productId"]
                },
            },
        },
        tikTokOrder: {
            name: 'TikTokOrder', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, tiktokShopId: {
                    name: "tiktokShopId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokShop',
                }, tiktokShop: {
                    name: "tiktokShop",
                    type: "TikTokShop",
                    isDataModel: true,
                    backLink: 'orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokShopId" },
                }, orderId: {
                    name: "orderId",
                    type: "String",
                }, displayStatus: {
                    name: "displayStatus",
                    type: "TikTokOrderStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, trackingNumber: {
                    name: "trackingNumber",
                    type: "String",
                    isOptional: true,
                }, shippingProvider: {
                    name: "shippingProvider",
                    type: "String",
                    isOptional: true,
                }, price: {
                    name: "price",
                    type: "Float",
                }, currency: {
                    name: "currency",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "USD" }] }],
                }, subTotal: {
                    name: "subTotal",
                    type: "String",
                    isOptional: true,
                }, shippingFee: {
                    name: "shippingFee",
                    type: "String",
                    isOptional: true,
                }, originalTotalProductPrice: {
                    name: "originalTotalProductPrice",
                    type: "String",
                    isOptional: true,
                }, originalShippingFee: {
                    name: "originalShippingFee",
                    type: "String",
                    isOptional: true,
                }, sellerDiscount: {
                    name: "sellerDiscount",
                    type: "String",
                    isOptional: true,
                }, platformDiscount: {
                    name: "platformDiscount",
                    type: "String",
                    isOptional: true,
                }, shippingFeeSellerDiscount: {
                    name: "shippingFeeSellerDiscount",
                    type: "String",
                    isOptional: true,
                }, shippingFeePlatformDiscount: {
                    name: "shippingFeePlatformDiscount",
                    type: "String",
                    isOptional: true,
                }, tax: {
                    name: "tax",
                    type: "String",
                    isOptional: true,
                }, shippingFeeTax: {
                    name: "shippingFeeTax",
                    type: "String",
                    isOptional: true,
                }, productTax: {
                    name: "productTax",
                    type: "String",
                    isOptional: true,
                }, retailDeliveryFee: {
                    name: "retailDeliveryFee",
                    type: "String",
                    isOptional: true,
                }, addressLine1: {
                    name: "addressLine1",
                    type: "String",
                    isOptional: true,
                }, addressLine2: {
                    name: "addressLine2",
                    type: "String",
                    isOptional: true,
                }, fullAddress: {
                    name: "fullAddress",
                    type: "String",
                    isOptional: true,
                }, city: {
                    name: "city",
                    type: "String",
                    isOptional: true,
                }, state: {
                    name: "state",
                    type: "String",
                    isOptional: true,
                }, country: {
                    name: "country",
                    type: "String",
                    isOptional: true,
                }, postalCode: {
                    name: "postalCode",
                    type: "String",
                    isOptional: true,
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, createdTime: {
                    name: "createdTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedTime: {
                    name: "updatedTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, buyerId: {
                    name: "buyerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'buyer',
                }, buyer: {
                    name: "buyer",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokOrders',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "buyerId" },
                }, products: {
                    name: "products",
                    type: "TikTokOrderProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'order',
                }, height: {
                    name: "height",
                    type: "Int",
                }, width: {
                    name: "width",
                    type: "Int",
                }, url: {
                    name: "url",
                    type: "String",
                }, tiktokCards: {
                    name: "tiktokCards",
                    type: "TikTokCard",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokOrder',
                }, returnRecords: {
                    name: "returnRecords",
                    type: "TikTokOrderReturn",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'order',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, orderId: {
                    name: "orderId",
                    fields: ["orderId"]
                },
            },
        },
        tikTokOrderProduct: {
            name: 'TikTokOrderProduct', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, orderId: {
                    name: "orderId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'order',
                }, order: {
                    name: "order",
                    type: "TikTokOrder",
                    isDataModel: true,
                    backLink: 'products',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orderId" },
                }, productId: {
                    name: "productId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'product',
                }, product: {
                    name: "product",
                    type: "TikTokProduct",
                    isDataModel: true,
                    backLink: 'orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "productId" },
                }, skuId: {
                    name: "skuId",
                    type: "String",
                }, salePrice: {
                    name: "salePrice",
                    type: "String",
                    isOptional: true,
                }, originalPrice: {
                    name: "originalPrice",
                    type: "String",
                    isOptional: true,
                }, platformDiscount: {
                    name: "platformDiscount",
                    type: "String",
                    isOptional: true,
                }, sellerDiscount: {
                    name: "sellerDiscount",
                    type: "String",
                    isOptional: true,
                }, tiktokCards: {
                    name: "tiktokCards",
                    type: "TikTokCard",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'refundProduct',
                }, returnItems: {
                    name: "returnItems",
                    type: "TikTokOrderReturnProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'orderProduct',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, orderId_productId: {
                    name: "orderId_productId",
                    fields: ["orderId", "productId"]
                },
            },
        },
        tikTokCoupon: {
            name: 'TikTokCoupon', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, tiktokShopId: {
                    name: "tiktokShopId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokShop',
                }, tiktokShop: {
                    name: "tiktokShop",
                    type: "TikTokShop",
                    isDataModel: true,
                    backLink: 'coupons',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokShopId" },
                }, couponId: {
                    name: "couponId",
                    type: "String",
                }, title: {
                    name: "title",
                    type: "String",
                }, sellerTnc: {
                    name: "sellerTnc",
                    type: "String",
                    isOptional: true,
                }, claimStartTime: {
                    name: "claimStartTime",
                    type: "DateTime",
                    isOptional: true,
                }, claimEndTime: {
                    name: "claimEndTime",
                    type: "DateTime",
                    isOptional: true,
                }, redemptionType: {
                    name: "redemptionType",
                    type: "TikTokCouponRedemptionType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, redemptionStartTime: {
                    name: "redemptionStartTime",
                    type: "DateTime",
                    isOptional: true,
                }, redemptionEndTime: {
                    name: "redemptionEndTime",
                    type: "DateTime",
                    isOptional: true,
                }, redemptionRelativeTime: {
                    name: "redemptionRelativeTime",
                    type: "Int",
                    isOptional: true,
                }, discountType: {
                    name: "discountType",
                    type: "TikTokCouponDiscountType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, amount: {
                    name: "amount",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "String",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": "USD" }] }],
                }, percentage: {
                    name: "percentage",
                    type: "String",
                    isOptional: true,
                }, maxAmount: {
                    name: "maxAmount",
                    type: "String",
                    isOptional: true,
                }, thresholdAmount: {
                    name: "thresholdAmount",
                    type: "String",
                    isOptional: true,
                }, displayType: {
                    name: "displayType",
                    type: "TikTokCouponDisplayType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, status: {
                    name: "status",
                    type: "TikTokCouponStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, creationSource: {
                    name: "creationSource",
                    type: "TikTokCouponCreationSource",
                    attributes: [{ "name": "@default", "args": [] }],
                }, targetBuyerSegment: {
                    name: "targetBuyerSegment",
                    type: "TikTokTargetBuyerSegment",
                    attributes: [{ "name": "@default", "args": [] }],
                }, createTime: {
                    name: "createTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updateTime: {
                    name: "updateTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, productIds: {
                    name: "productIds",
                    type: "TikTokProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'coupons',
                    isRelationOwner: true,
                }, tiktokCards: {
                    name: "tiktokCards",
                    type: "TikTokCard",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokCoupon',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, couponId: {
                    name: "couponId",
                    fields: ["couponId"]
                },
            },
        },
        tikTokCard: {
            name: 'TikTokCard', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    backLink: 'tiktokCard',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, tiktokProductId: {
                    name: "tiktokProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokProduct',
                }, tiktokProduct: {
                    name: "tiktokProduct",
                    type: "TikTokProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokCards',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokProductId" },
                }, tiktokOrderId: {
                    name: "tiktokOrderId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokOrder',
                }, tiktokOrder: {
                    name: "tiktokOrder",
                    type: "TikTokOrder",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokCards',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokOrderId" },
                }, tiktokCouponId: {
                    name: "tiktokCouponId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokCoupon',
                }, tiktokCoupon: {
                    name: "tiktokCoupon",
                    type: "TikTokCoupon",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokCards',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokCouponId" },
                }, refundProductId: {
                    name: "refundProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'refundProduct',
                }, refundProduct: {
                    name: "refundProduct",
                    type: "TikTokOrderProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokCards',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "refundProductId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                },
            },
        },
        tikTokOrderReturn: {
            name: 'TikTokOrderReturn', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, orderId: {
                    name: "orderId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'order',
                }, order: {
                    name: "order",
                    type: "TikTokOrder",
                    isDataModel: true,
                    backLink: 'returnRecords',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orderId" },
                }, returnId: {
                    name: "returnId",
                    type: "String",
                }, returnType: {
                    name: "returnType",
                    type: "TikTokOrderReturnType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, returnStatus: {
                    name: "returnStatus",
                    type: "TikTokOrderReturnStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, role: {
                    name: "role",
                    type: "TikTokOrderReturnRole",
                    attributes: [{ "name": "@default", "args": [] }],
                }, returnReasonText: {
                    name: "returnReasonText",
                    type: "String",
                    isOptional: true,
                }, returnTrackingNumber: {
                    name: "returnTrackingNumber",
                    type: "String",
                    isOptional: true,
                }, returnProviderName: {
                    name: "returnProviderName",
                    type: "String",
                    isOptional: true,
                }, createTime: {
                    name: "createTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updateTime: {
                    name: "updateTime",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                }, refundTotal: {
                    name: "refundTotal",
                    type: "String",
                    isOptional: true,
                }, refundSubtotal: {
                    name: "refundSubtotal",
                    type: "String",
                    isOptional: true,
                }, refundShippingFee: {
                    name: "refundShippingFee",
                    type: "String",
                    isOptional: true,
                }, refundTax: {
                    name: "refundTax",
                    type: "String",
                    isOptional: true,
                }, retailDeliveryFee: {
                    name: "retailDeliveryFee",
                    type: "String",
                    isOptional: true,
                }, buyerServiceFee: {
                    name: "buyerServiceFee",
                    type: "String",
                    isOptional: true,
                }, partialRefund: {
                    name: "partialRefund",
                    type: "String",
                    isOptional: true,
                }, returnProducts: {
                    name: "returnProducts",
                    type: "TikTokOrderReturnProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'return',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, returnId: {
                    name: "returnId",
                    fields: ["returnId"]
                },
            },
        },
        tikTokOrderReturnProduct: {
            name: 'TikTokOrderReturnProduct', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, returnId: {
                    name: "returnId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'return',
                }, return: {
                    name: "return",
                    type: "TikTokOrderReturn",
                    isDataModel: true,
                    backLink: 'returnProducts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "returnId" },
                }, orderProductId: {
                    name: "orderProductId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'orderProduct',
                }, orderProduct: {
                    name: "orderProduct",
                    type: "TikTokOrderProduct",
                    isDataModel: true,
                    backLink: 'returnItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orderProductId" },
                }, refundTotal: {
                    name: "refundTotal",
                    type: "String",
                    isOptional: true,
                }, refundSubtotal: {
                    name: "refundSubtotal",
                    type: "String",
                    isOptional: true,
                }, refundShippingFee: {
                    name: "refundShippingFee",
                    type: "String",
                    isOptional: true,
                }, refundTax: {
                    name: "refundTax",
                    type: "String",
                    isOptional: true,
                }, retailDeliveryFee: {
                    name: "retailDeliveryFee",
                    type: "String",
                    isOptional: true,
                }, buyerServiceFee: {
                    name: "buyerServiceFee",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, returnId_orderProductId: {
                    name: "returnId_orderProductId",
                    fields: ["returnId", "orderProductId"]
                },
            },
        },
        tikTokCustomerService: {
            name: 'TikTokCustomerService', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, userId: {
                    name: "userId",
                    type: "String",
                }, avatar: {
                    name: "avatar",
                    type: "String",
                    isOptional: true,
                }, nickname: {
                    name: "nickname",
                    type: "String",
                    isOptional: true,
                }, tiktokShopId: {
                    name: "tiktokShopId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokShop',
                }, tiktokShop: {
                    name: "tiktokShop",
                    type: "TikTokShop",
                    isDataModel: true,
                    backLink: 'customerService',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokShopId" },
                }, messages: {
                    name: "messages",
                    type: "TikTokCustomerServiceMessage",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customerService',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, userId: {
                    name: "userId",
                    fields: ["userId"]
                },
            },
        },
        tikTokCustomerServiceMessage: {
            name: 'TikTokCustomerServiceMessage', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    backLink: 'tiktokCustomerService',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, customerServiceId: {
                    name: "customerServiceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customerService',
                }, customerService: {
                    name: "customerService",
                    type: "TikTokCustomerService",
                    isDataModel: true,
                    backLink: 'messages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customerServiceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                },
            },
        },
        shopifyAccount: {
            name: 'ShopifyAccount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'shopifyAccount',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, isReauthRequired: {
                    name: "isReauthRequired",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, shopName: {
                    name: "shopName",
                    type: "String",
                    isOptional: true,
                }, shopDomain: {
                    name: "shopDomain",
                    type: "String",
                    isOptional: true,
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'store',
                }, extractionMetadataKeys: {
                    name: "extractionMetadataKeys",
                    type: "String",
                    isArray: true,
                }, customAppClientId: {
                    name: "customAppClientId",
                    type: "String",
                    isOptional: true,
                }, customAppClientSecret: {
                    name: "customAppClientSecret",
                    type: "String",
                    isOptional: true,
                }, shopifyDiscounts: {
                    name: "shopifyDiscounts",
                    type: "ShopifyDiscount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyAccount',
                }, communityMemberShopifyProfileData: {
                    name: "communityMemberShopifyProfileData",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyStore',
                }, recentActivities: {
                    name: "recentActivities",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopName_workspaceId: {
                    name: "shopName_workspaceId",
                    fields: ["shopName", "workspaceId"]
                },
            },
        },
        shopifyDiscount: {
            name: 'ShopifyDiscount', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, shopifyAccountId: {
                    name: "shopifyAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyAccount',
                }, shopifyAccount: {
                    name: "shopifyAccount",
                    type: "ShopifyAccount",
                    isDataModel: true,
                    backLink: 'shopifyDiscounts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyAccountId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, prefix: {
                    name: "prefix",
                    type: "String",
                    isOptional: true,
                }, discountType: {
                    name: "discountType",
                    type: "ShopifyDiscountType",
                }, discountValue: {
                    name: "discountValue",
                    type: "String",
                    isOptional: true,
                }, minimumRequirement: {
                    name: "minimumRequirement",
                    type: "ShopifyDiscountMinimumRequirement",
                    attributes: [{ "name": "@default", "args": [] }],
                }, minimumRequirementValue: {
                    name: "minimumRequirementValue",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                    attributes: [{ "name": "@default", "args": [] }],
                }, discountResources: {
                    name: "discountResources",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'discounts',
                    isRelationOwner: true,
                }, discountDurationType: {
                    name: "discountDurationType",
                    type: "DiscountDurationType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, endsAt: {
                    name: "endsAt",
                    type: "DateTime",
                    isOptional: true,
                }, duration: {
                    name: "duration",
                    type: "Int",
                    isOptional: true,
                }, durationUnit: {
                    name: "durationUnit",
                    type: "TimePeriodUnit",
                    isOptional: true,
                }, discountCodes: {
                    name: "discountCodes",
                    type: "ShopifyDiscountCode",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'discountConfig',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, title_shopifyAccountId: {
                    name: "title_shopifyAccountId",
                    fields: ["title", "shopifyAccountId"]
                },
            },
        },
        shopifyDiscountCode: {
            name: 'ShopifyDiscountCode', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, code: {
                    name: "code",
                    type: "String",
                }, discountConfigId: {
                    name: "discountConfigId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'discountConfig',
                }, discountConfig: {
                    name: "discountConfig",
                    type: "ShopifyDiscount",
                    isDataModel: true,
                    backLink: 'discountCodes',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "discountConfigId" },
                }, startsAt: {
                    name: "startsAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, endsAt: {
                    name: "endsAt",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, code_discountConfigId: {
                    name: "code_discountConfigId",
                    fields: ["code", "discountConfigId"]
                },
            },
        },
        shopifyRegistrationConfig: {
            name: 'ShopifyRegistrationConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, invitationLink: {
                    name: "invitationLink",
                    type: "String",
                    isOptional: true,
                }, customAppClientId: {
                    name: "customAppClientId",
                    type: "String",
                    isOptional: true,
                }, customAppClientSecret: {
                    name: "customAppClientSecret",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, invitationLink: {
                    name: "invitationLink",
                    fields: ["invitationLink"]
                },
            },
        },
        cardTemplate: {
            name: 'CardTemplate', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, ctaUrl: {
                    name: "ctaUrl",
                    type: "String",
                    isOptional: true,
                }, ctaText: {
                    name: "ctaText",
                    type: "String",
                }, pictureSrc: {
                    name: "pictureSrc",
                    type: "String",
                    isOptional: true,
                }, type: {
                    name: "type",
                    type: "CardTemplateType",
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'savedTemplates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'cardTemplates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        embedding: {
            name: 'Embedding', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, rawText: {
                    name: "rawText",
                    type: "String",
                }, rawTextHash: {
                    name: "rawTextHash",
                    type: "String",
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                }, parentEntity: {
                    name: "parentEntity",
                    type: "EmbeddingEntity",
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, customProduct: {
                    name: "customProduct",
                    type: "CustomProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customProductId" },
                }, customProductId: {
                    name: "customProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'customProduct',
                }, documentResource: {
                    name: "documentResource",
                    type: "DocumentResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "documentResourceId" },
                }, documentResourceId: {
                    name: "documentResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'documentResource',
                }, intentShadowResource: {
                    name: "intentShadowResource",
                    type: "IntentShadowResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentShadowResourceId" },
                }, intentShadowResourceId: {
                    name: "intentShadowResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'intentShadowResource',
                }, knowledgeBase: {
                    name: "knowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    backLink: 'embedding',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "knowledgeBaseId" },
                }, knowledgeBaseId: {
                    name: "knowledgeBaseId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'knowledgeBase',
                }, shopifyMetafield: {
                    name: "shopifyMetafield",
                    type: "ShopifyMetafield",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'embedding',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyMetafieldId" },
                }, shopifyMetafieldId: {
                    name: "shopifyMetafieldId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyMetafield',
                }, intentChannel: {
                    name: "intentChannel",
                    type: "IntentChannel",
                    attributes: [{ "name": "@default", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, rawTextHash_knowledgeBaseId_shopifyMetafieldId: {
                    name: "rawTextHash_knowledgeBaseId_shopifyMetafieldId",
                    fields: ["rawTextHash", "knowledgeBaseId", "shopifyMetafieldId"]
                }, rawTextHash_knowledgeBaseId_shopifyResourceId: {
                    name: "rawTextHash_knowledgeBaseId_shopifyResourceId",
                    fields: ["rawTextHash", "knowledgeBaseId", "shopifyResourceId"]
                }, rawTextHash_knowledgeBaseId_documentResourceId: {
                    name: "rawTextHash_knowledgeBaseId_documentResourceId",
                    fields: ["rawTextHash", "knowledgeBaseId", "documentResourceId"]
                },
            },
        },
        conversationOwner: {
            name: 'ConversationOwner', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, conversations: {
                    name: "conversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversationOwner',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    fields: ["instagramAccountId"]
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    fields: ["facebookPageAccountId"]
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    fields: ["tiktokAccountId"]
                },
            },
        },
        customField: {
            name: 'CustomField', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'communityFields',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "CustomFieldType",
                }, options: {
                    name: "options",
                    type: "String",
                    isArray: true,
                }, currencyCode: {
                    name: "currencyCode",
                    type: "CurrencyCode",
                    isOptional: true,
                }, currencyDisplayStyle: {
                    name: "currencyDisplayStyle",
                    type: "CurrencyCodeStyle",
                    isOptional: true,
                }, customFieldValue: {
                    name: "customFieldValue",
                    type: "CustomFieldValue",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customField',
                }, valueSaveInstructions: {
                    name: "valueSaveInstructions",
                    type: "String",
                    isOptional: true,
                }, journeyCollectedData: {
                    name: "journeyCollectedData",
                    type: "JourneyCollectedData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customField',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, title_workspaceId: {
                    name: "title_workspaceId",
                    fields: ["title", "workspaceId"]
                },
            },
        },
        customFieldValue: {
            name: 'CustomFieldValue', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'customFieldValues',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, customFieldId: {
                    name: "customFieldId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customField',
                }, customField: {
                    name: "customField",
                    type: "CustomField",
                    isDataModel: true,
                    backLink: 'customFieldValue',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customFieldId" },
                }, value: {
                    name: "value",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "" }] }],
                }, valueDate: {
                    name: "valueDate",
                    type: "DateTime",
                    isOptional: true,
                }, valueNumber: {
                    name: "valueNumber",
                    type: "Int",
                    isOptional: true,
                }, valueBoolean: {
                    name: "valueBoolean",
                    type: "Boolean",
                    isOptional: true,
                }, valueTags: {
                    name: "valueTags",
                    type: "String",
                    isArray: true,
                }, valueFloat: {
                    name: "valueFloat",
                    type: "Float",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_customFieldId: {
                    name: "communityMemberId_customFieldId",
                    fields: ["communityMemberId", "customFieldId"]
                },
            },
        },
        limitedCommunityMember: {
            name: 'LimitedCommunityMember', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'limitedCommunityMember',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, identifier: {
                    name: "identifier",
                    type: "String",
                }, displayName: {
                    name: "displayName",
                    type: "String",
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, contentOwner: {
                    name: "contentOwner",
                    type: "ContentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'limitedCommunityMember',
                }, commentOwner: {
                    name: "commentOwner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'limitedCommunityMember',
                }, inboxFeedProfile: {
                    name: "inboxFeedProfile",
                    type: "InboxFeedProfile",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'limitedCommunityMember',
                }, labels: {
                    name: "labels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'limitedCommunityMembers',
                    isRelationOwner: true,
                }, moderatedItems: {
                    name: "moderatedItems",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'limitedCommunityMember',
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'limitedCommunityMember',
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_identifier_platform: {
                    name: "workspaceId_identifier_platform",
                    fields: ["workspaceId", "identifier", "platform"]
                },
            },
        },
        recentActivity: {
            name: 'RecentActivity', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'recentActivity',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'recentActivity',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, type: {
                    name: "type",
                    type: "ActivityType",
                }, inboxItemId: {
                    name: "inboxItemId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxItem',
                }, inboxItem: {
                    name: "inboxItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'activityLink',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxItemId" },
                }, originContentId: {
                    name: "originContentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'originContent',
                }, originContent: {
                    name: "originContent",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'linkedEvents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "originContentId" },
                }, shortcodeUrl: {
                    name: "shortcodeUrl",
                    type: "String",
                    isOptional: true,
                }, pixelClientId: {
                    name: "pixelClientId",
                    type: "String",
                    isOptional: true,
                }, linkedShopifyResources: {
                    name: "linkedShopifyResources",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'linkedActivity',
                    isRelationOwner: true,
                }, shortLinkId: {
                    name: "shortLinkId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shortLink',
                }, shortLink: {
                    name: "shortLink",
                    type: "Link",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'activities',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shortLinkId" },
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                    isOptional: true,
                }, purchaseAmount: {
                    name: "purchaseAmount",
                    type: "Float",
                    isOptional: true,
                }, shopifyOrderId: {
                    name: "shopifyOrderId",
                    type: "String",
                    isOptional: true,
                }, shopifyAccountId: {
                    name: "shopifyAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyAccount',
                }, shopifyAccount: {
                    name: "shopifyAccount",
                    type: "ShopifyAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'recentActivities',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyAccountId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_timestamp_type_platform: {
                    name: "communityMemberId_timestamp_type_platform",
                    fields: ["communityMemberId", "timestamp", "type", "platform"]
                }, originContentId_timestamp_type_platform: {
                    name: "originContentId_timestamp_type_platform",
                    fields: ["originContentId", "timestamp", "type", "platform"]
                }, shopifyOrderId_shopifyAccountId_workspaceId_type_platform: {
                    name: "shopifyOrderId_shopifyAccountId_workspaceId_type_platform",
                    fields: ["shopifyOrderId", "shopifyAccountId", "workspaceId", "type", "platform"]
                }, pixelClientId_shortcodeUrl_timestamp_type_platform: {
                    name: "pixelClientId_shortcodeUrl_timestamp_type_platform",
                    fields: ["pixelClientId", "shortcodeUrl", "timestamp", "type", "platform"]
                },
            },
        },
        communityMemberBlockState: {
            name: 'CommunityMemberBlockState', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'communityMemberBlockState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                }, blockedByUserId: {
                    name: "blockedByUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'blockedByUser',
                }, blockedByUser: {
                    name: "blockedByUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMemberBlockState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blockedByUserId" },
                }, blockedFromPlatforms: {
                    name: "blockedFromPlatforms",
                    type: "Platform",
                    isArray: true,
                }, blockedState: {
                    name: "blockedState",
                    type: "BlockedState",
                    attributes: [{ "name": "@default", "args": [] }],
                }, lastBlockedTimestamp: {
                    name: "lastBlockedTimestamp",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        globalCommunityMember: {
            name: 'GlobalCommunityMember', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, engagedPlatforms: {
                    name: "engagedPlatforms",
                    type: "Platform",
                    isArray: true,
                }, identifier: {
                    name: "identifier",
                    type: "String",
                }, firstName: {
                    name: "firstName",
                    type: "String",
                    isOptional: true,
                }, lastName: {
                    name: "lastName",
                    type: "String",
                    isOptional: true,
                }, streetAddress: {
                    name: "streetAddress",
                    type: "String",
                    isOptional: true,
                }, city: {
                    name: "city",
                    type: "String",
                    isOptional: true,
                }, state: {
                    name: "state",
                    type: "String",
                    isOptional: true,
                }, country: {
                    name: "country",
                    type: "String",
                    isOptional: true,
                }, zipCode: {
                    name: "zipCode",
                    type: "String",
                    isOptional: true,
                }, phoneNumber: {
                    name: "phoneNumber",
                    type: "String",
                    isOptional: true,
                }, location: {
                    name: "location",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, instagramHandle: {
                    name: "instagramHandle",
                    type: "String",
                    isOptional: true,
                }, tiktokUsername: {
                    name: "tiktokUsername",
                    type: "String",
                    isOptional: true,
                }, instagramProfileData: {
                    name: "instagramProfileData",
                    type: "GlobalCommunityMemberInstagramProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, tiktokProfileData: {
                    name: "tiktokProfileData",
                    type: "GlobalCommunityMemberTiktokProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, authoredContent: {
                    name: "authoredContent",
                    type: "GlobalContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, taggedContent: {
                    name: "taggedContent",
                    type: "GlobalContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'taggedUsers',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramHandle: {
                    name: "instagramHandle",
                    fields: ["instagramHandle"]
                }, tiktokUsername: {
                    name: "tiktokUsername",
                    fields: ["tiktokUsername"]
                },
            },
        },
        communityMember: {
            name: 'CommunityMember', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'communityMember',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, labels: {
                    name: "labels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMembers',
                    isRelationOwner: true,
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, engagedPlatforms: {
                    name: "engagedPlatforms",
                    type: "Platform",
                    isArray: true,
                }, identifier: {
                    name: "identifier",
                    type: "String",
                }, firstName: {
                    name: "firstName",
                    type: "String",
                    isOptional: true,
                }, lastName: {
                    name: "lastName",
                    type: "String",
                    isOptional: true,
                }, streetAddress: {
                    name: "streetAddress",
                    type: "String",
                    isOptional: true,
                }, city: {
                    name: "city",
                    type: "String",
                    isOptional: true,
                }, state: {
                    name: "state",
                    type: "String",
                    isOptional: true,
                }, country: {
                    name: "country",
                    type: "String",
                    isOptional: true,
                }, zipCode: {
                    name: "zipCode",
                    type: "String",
                    isOptional: true,
                }, email: {
                    name: "email",
                    type: "String",
                    isOptional: true,
                }, phoneNumber: {
                    name: "phoneNumber",
                    type: "String",
                    isOptional: true,
                }, location: {
                    name: "location",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, customFieldValues: {
                    name: "customFieldValues",
                    type: "CustomFieldValue",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, shopifyPurchasesAOV: {
                    name: "shopifyPurchasesAOV",
                    type: "Int",
                    isOptional: true,
                }, customNotes: {
                    name: "customNotes",
                    type: "Note",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, instagramHandle: {
                    name: "instagramHandle",
                    type: "String",
                    isOptional: true,
                }, facebookScopedId: {
                    name: "facebookScopedId",
                    type: "String",
                    isOptional: true,
                }, tiktokUsername: {
                    name: "tiktokUsername",
                    type: "String",
                    isOptional: true,
                }, tiktokUniversalId: {
                    name: "tiktokUniversalId",
                    type: "String",
                    isOptional: true,
                }, tiktokUserId: {
                    name: "tiktokUserId",
                    type: "String",
                    isOptional: true,
                }, instagramProfileData: {
                    name: "instagramProfileData",
                    type: "CommunityMemberInstagramProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, instagramRelationData: {
                    name: "instagramRelationData",
                    type: "CommunityMemberInstagramRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, facebookProfileData: {
                    name: "facebookProfileData",
                    type: "CommunityMemberFacebookProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, facebookRelationData: {
                    name: "facebookRelationData",
                    type: "CommunityMemberFacebookRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, tiktokProfileData: {
                    name: "tiktokProfileData",
                    type: "CommunityMemberTiktokProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, tiktokRelationData: {
                    name: "tiktokRelationData",
                    type: "CommunityMemberTiktokRelationData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, shopifyProfileData: {
                    name: "shopifyProfileData",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, conversations: {
                    name: "conversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'participant',
                }, content: {
                    name: "content",
                    type: "ContentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, comments: {
                    name: "comments",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, engagement: {
                    name: "engagement",
                    type: "CommunityMemberEngagement",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, brandMentionCount: {
                    name: "brandMentionCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, recentActivity: {
                    name: "recentActivity",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, blasts: {
                    name: "blasts",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'targetAudience',
                    isRelationOwner: true,
                }, linkStatistics: {
                    name: "linkStatistics",
                    type: "LinkShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMembers',
                    isRelationOwner: true,
                }, blastStatistics: {
                    name: "blastStatistics",
                    type: "BlastShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMembers',
                    isRelationOwner: true,
                }, journeyStatistics: {
                    name: "journeyStatistics",
                    type: "JourneyShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMembers',
                    isRelationOwner: true,
                }, isEmailOptedIn: {
                    name: "isEmailOptedIn",
                    type: "Boolean",
                    isOptional: true,
                }, isMarkedAsSpam: {
                    name: "isMarkedAsSpam",
                    type: "Boolean",
                    isOptional: true,
                }, moderatedItems: {
                    name: "moderatedItems",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, journeys: {
                    name: "journeys",
                    type: "Journey",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'audience',
                }, journeySessions: {
                    name: "journeySessions",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, journeySessionsV2: {
                    name: "journeySessionsV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, customResponseSessions: {
                    name: "customResponseSessions",
                    type: "CustomResponseSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, customResponseSessionsV2: {
                    name: "customResponseSessionsV2",
                    type: "CustomResponseSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, quizAnswers: {
                    name: "quizAnswers",
                    type: "QuizAnswer",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, journeyResponses: {
                    name: "journeyResponses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, quizSessions: {
                    name: "quizSessions",
                    type: "QuizSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, quizSessionsV2: {
                    name: "quizSessionsV2",
                    type: "QuizSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, emails: {
                    name: "emails",
                    type: "CommunityMemberEmail",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, phoneNumbers: {
                    name: "phoneNumbers",
                    type: "CommunityMemberPhoneNumber",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, inboxFeedProfile: {
                    name: "inboxFeedProfile",
                    type: "InboxFeedProfile",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, importedCommunityMembers: {
                    name: "importedCommunityMembers",
                    type: "ImportedCommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'createdCommunityMember',
                }, blastAudienceMembers: {
                    name: "blastAudienceMembers",
                    type: "BlastAudienceMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, tiktokOrders: {
                    name: "tiktokOrders",
                    type: "TikTokOrder",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'buyer',
                }, klaviyoProfile: {
                    name: "klaviyoProfile",
                    type: "CommunityMemberKlaviyoProfile",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, klaviyoProfiles: {
                    name: "klaviyoProfiles",
                    type: "CommunityMemberKlaviyoLinkedProfile",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, communityMemberBlockState: {
                    name: "communityMemberBlockState",
                    type: "CommunityMemberBlockState",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'communityMember',
                }, journeyCollectedData: {
                    name: "journeyCollectedData",
                    type: "JourneyCollectedData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, contentMediaTags: {
                    name: "contentMediaTags",
                    type: "ContentMediaTag",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                }, contentCollaborations: {
                    name: "contentCollaborations",
                    type: "ContentCollaboration",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityMember',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_email: {
                    name: "workspaceId_email",
                    fields: ["workspaceId", "email"]
                }, workspaceId_instagramHandle: {
                    name: "workspaceId_instagramHandle",
                    fields: ["workspaceId", "instagramHandle"]
                }, workspaceId_facebookScopedId: {
                    name: "workspaceId_facebookScopedId",
                    fields: ["workspaceId", "facebookScopedId"]
                },
            },
        },
        communityMemberEngagement: {
            name: 'CommunityMemberEngagement', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'engagement',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, level: {
                    name: "level",
                    type: "EngagementLevel",
                    isOptional: true,
                }, score: {
                    name: "score",
                    type: "Float",
                    isOptional: true,
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        communityMemberEmail: {
            name: 'CommunityMemberEmail', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, email: {
                    name: "email",
                    type: "String",
                }, isPrimary: {
                    name: "isPrimary",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, source: {
                    name: "source",
                    type: "EmailSource",
                    isOptional: true,
                }, marketingOptInStatus: {
                    name: "marketingOptInStatus",
                    type: "MarketingOptInStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'emails',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'communityMemberEmails',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_email: {
                    name: "communityMemberId_email",
                    fields: ["communityMemberId", "email"]
                }, workspaceId_email: {
                    name: "workspaceId_email",
                    fields: ["workspaceId", "email"]
                },
            },
        },
        communityMemberPhoneNumber: {
            name: 'CommunityMemberPhoneNumber', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, phoneNumber: {
                    name: "phoneNumber",
                    type: "String",
                }, isPrimary: {
                    name: "isPrimary",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, source: {
                    name: "source",
                    type: "PhoneNumberSource",
                    isOptional: true,
                }, marketingOptInStatus: {
                    name: "marketingOptInStatus",
                    type: "MarketingOptInStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'phoneNumbers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'communityMemberPhoneNumbers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_phoneNumber: {
                    name: "communityMemberId_phoneNumber",
                    fields: ["communityMemberId", "phoneNumber"]
                }, workspaceId_phoneNumber: {
                    name: "workspaceId_phoneNumber",
                    fields: ["workspaceId", "phoneNumber"]
                },
            },
        },
        communityMemberFacebookProfileData: {
            name: 'CommunityMemberFacebookProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'facebookProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, name: {
                    name: "name",
                    type: "String",
                }, facebookAppScopedId: {
                    name: "facebookAppScopedId",
                    type: "String",
                }, isVerified: {
                    name: "isVerified",
                    type: "Boolean",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'facebookProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, workspaceId_facebookAppScopedId: {
                    name: "workspaceId_facebookAppScopedId",
                    fields: ["workspaceId", "facebookAppScopedId"]
                },
            },
        },
        communityMemberFacebookRelationData: {
            name: 'CommunityMemberFacebookRelationData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'facebookRelationData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    backLink: 'relationData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, scopedPlatformId: {
                    name: "scopedPlatformId",
                    type: "String",
                }, commentCount: {
                    name: "commentCount",
                    type: "Int",
                    isOptional: true,
                }, tagMentionCount: {
                    name: "tagMentionCount",
                    type: "Int",
                    isOptional: true,
                }, lastEngagedWith: {
                    name: "lastEngagedWith",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_facebookPageAccountId: {
                    name: "communityMemberId_facebookPageAccountId",
                    fields: ["communityMemberId", "facebookPageAccountId"]
                },
            },
        },
        globalCommunityMemberTiktokProfileData: {
            name: 'GlobalCommunityMemberTiktokProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "GlobalCommunityMember",
                    isDataModel: true,
                    backLink: 'tiktokProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, tiktokUniversalId: {
                    name: "tiktokUniversalId",
                    type: "String",
                    isOptional: true,
                }, nickName: {
                    name: "nickName",
                    type: "String",
                    isOptional: true,
                }, isVerified: {
                    name: "isVerified",
                    type: "Boolean",
                    isOptional: true,
                }, biography: {
                    name: "biography",
                    type: "String",
                    isOptional: true,
                }, followerCount: {
                    name: "followerCount",
                    type: "Int",
                    isOptional: true,
                }, likeCount: {
                    name: "likeCount",
                    type: "Int",
                    isOptional: true,
                }, videoCount: {
                    name: "videoCount",
                    type: "Int",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        communityMemberTiktokProfileData: {
            name: 'CommunityMemberTiktokProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'tiktokProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, name: {
                    name: "name",
                    type: "String",
                }, tiktokUniversalId: {
                    name: "tiktokUniversalId",
                    type: "String",
                    isOptional: true,
                }, nickName: {
                    name: "nickName",
                    type: "String",
                    isOptional: true,
                }, isVerified: {
                    name: "isVerified",
                    type: "Boolean",
                    isOptional: true,
                }, profileUrl: {
                    name: "profileUrl",
                    type: "String",
                    isOptional: true,
                }, biography: {
                    name: "biography",
                    type: "String",
                    isOptional: true,
                }, followerCount: {
                    name: "followerCount",
                    type: "Int",
                    isOptional: true,
                }, likeCount: {
                    name: "likeCount",
                    type: "Int",
                    isOptional: true,
                }, videoCount: {
                    name: "videoCount",
                    type: "Int",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'tiktokProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        communityMemberTiktokRelationData: {
            name: 'CommunityMemberTiktokRelationData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'tiktokRelationData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    backLink: 'relationData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, scopedPlatformId: {
                    name: "scopedPlatformId",
                    type: "String",
                }, commentCount: {
                    name: "commentCount",
                    type: "Int",
                    isOptional: true,
                }, tagMentionCount: {
                    name: "tagMentionCount",
                    type: "Int",
                    isOptional: true,
                }, lastEngagedWith: {
                    name: "lastEngagedWith",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_tiktokAccountId: {
                    name: "communityMemberId_tiktokAccountId",
                    fields: ["communityMemberId", "tiktokAccountId"]
                },
            },
        },
        communityMemberShopifyProfileData: {
            name: 'CommunityMemberShopifyProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'shopifyProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, pixelClientId: {
                    name: "pixelClientId",
                    type: "String",
                    isArray: true,
                }, shopifyStoreId: {
                    name: "shopifyStoreId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyStore',
                }, shopifyStore: {
                    name: "shopifyStore",
                    type: "ShopifyAccount",
                    isDataModel: true,
                    backLink: 'communityMemberShopifyProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyStoreId" },
                }, customerSinceDate: {
                    name: "customerSinceDate",
                    type: "DateTime",
                    isOptional: true,
                }, shopifyCustomerId: {
                    name: "shopifyCustomerId",
                    type: "String",
                    isOptional: true,
                }, firstName: {
                    name: "firstName",
                    type: "String",
                    isOptional: true,
                }, lastName: {
                    name: "lastName",
                    type: "String",
                    isOptional: true,
                }, email: {
                    name: "email",
                    type: "String",
                    isOptional: true,
                }, phone: {
                    name: "phone",
                    type: "String",
                    isOptional: true,
                }, totalOrderCount: {
                    name: "totalOrderCount",
                    type: "Int",
                    isOptional: true,
                }, totalOrderValue: {
                    name: "totalOrderValue",
                    type: "Decimal",
                    isOptional: true,
                }, currencyCode: {
                    name: "currencyCode",
                    type: "CurrencyCode",
                    isOptional: true,
                }, addresses: {
                    name: "addresses",
                    type: "ShopifyCustomerAddress",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyCustomer',
                }, orders: {
                    name: "orders",
                    type: "ShopifyOrder",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customer',
                }, abandonedCheckout: {
                    name: "abandonedCheckout",
                    type: "ShopifyAbandonedCheckout",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'customer',
                }, abandonedCart: {
                    name: "abandonedCart",
                    type: "ShopifyAbandonedCart",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'customer',
                }, abandonedCartSince: {
                    name: "abandonedCartSince",
                    type: "DateTime",
                    isOptional: true,
                }, lastOrderTime: {
                    name: "lastOrderTime",
                    type: "DateTime",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, communityMemberId_shopifyCustomerId: {
                    name: "communityMemberId_shopifyCustomerId",
                    fields: ["communityMemberId", "shopifyCustomerId"]
                }, communityMemberId_email: {
                    name: "communityMemberId_email",
                    fields: ["communityMemberId", "email"]
                },
            },
        },
        communityImportJob: {
            name: 'CommunityImportJob', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                    isOptional: true,
                }, uploadedFileUrl: {
                    name: "uploadedFileUrl",
                    type: "String",
                }, columnMapping: {
                    name: "columnMapping",
                    type: "Json",
                    isOptional: true,
                }, importStatus: {
                    name: "importStatus",
                    type: "CommunityImportJobStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'communityImportJobs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, importedCommunityMembers: {
                    name: "importedCommunityMembers",
                    type: "ImportedCommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'communityImportJob',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        importedCommunityMember: {
            name: 'ImportedCommunityMember', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "ImportedCommunityMemberStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, data: {
                    name: "data",
                    type: "Json",
                    isOptional: true,
                }, createdCommunityMemberId: {
                    name: "createdCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdCommunityMember',
                }, createdCommunityMember: {
                    name: "createdCommunityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'importedCommunityMembers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdCommunityMemberId" },
                }, communityImportJobId: {
                    name: "communityImportJobId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityImportJob',
                }, communityImportJob: {
                    name: "communityImportJob",
                    type: "CommunityImportJob",
                    isDataModel: true,
                    backLink: 'importedCommunityMembers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityImportJobId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        shopifyAbandonedCart: {
            name: 'ShopifyAbandonedCart', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, cartCreatedAt: {
                    name: "cartCreatedAt",
                    type: "DateTime",
                }, customerId: {
                    name: "customerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customer',
                }, customer: {
                    name: "customer",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    backLink: 'abandonedCart',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customerId" },
                }, totalPrice: {
                    name: "totalPrice",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                    isOptional: true,
                }, lineItems: {
                    name: "lineItems",
                    type: "ShopifyAbandonedCartLineItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'cart',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, customerId: {
                    name: "customerId",
                    fields: ["customerId"]
                },
            },
        },
        shopifyAbandonedCartLineItem: {
            name: 'ShopifyAbandonedCartLineItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, cartId: {
                    name: "cartId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'cart',
                }, cart: {
                    name: "cart",
                    type: "ShopifyAbandonedCart",
                    isDataModel: true,
                    backLink: 'lineItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "cartId" },
                }, productId: {
                    name: "productId",
                    type: "String",
                }, title: {
                    name: "title",
                    type: "String",
                    isOptional: true,
                }, quantity: {
                    name: "quantity",
                    type: "Int",
                    isOptional: true,
                }, price: {
                    name: "price",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        shopifyCustomerAddress: {
            name: 'ShopifyCustomerAddress', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, shopifyCustomerId: {
                    name: "shopifyCustomerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyCustomer',
                }, shopifyCustomer: {
                    name: "shopifyCustomer",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    backLink: 'addresses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyCustomerId" },
                }, type: {
                    name: "type",
                    type: "ShopifyCustomerAddressType",
                }, addressId: {
                    name: "addressId",
                    type: "String",
                    isOptional: true,
                }, addressLine1: {
                    name: "addressLine1",
                    type: "String",
                    isOptional: true,
                }, addressLine2: {
                    name: "addressLine2",
                    type: "String",
                    isOptional: true,
                }, city: {
                    name: "city",
                    type: "String",
                    isOptional: true,
                }, province: {
                    name: "province",
                    type: "String",
                    isOptional: true,
                }, country: {
                    name: "country",
                    type: "String",
                }, countryCode: {
                    name: "countryCode",
                    type: "String",
                }, zip: {
                    name: "zip",
                    type: "String",
                    isOptional: true,
                }, phone: {
                    name: "phone",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                }, company: {
                    name: "company",
                    type: "String",
                    isOptional: true,
                }, isDefault: {
                    name: "isDefault",
                    type: "Boolean",
                }, linkedOrders: {
                    name: "linkedOrders",
                    type: "ShopifyOrder",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shippingAddress',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopifyCustomerId_addressId: {
                    name: "shopifyCustomerId_addressId",
                    fields: ["shopifyCustomerId", "addressId"]
                }, shopifyCustomerId_addressLine1_addressLine2_city_province_country_zip_phone_name: {
                    name: "shopifyCustomerId_addressLine1_addressLine2_city_province_country_zip_phone_name",
                    fields: ["shopifyCustomerId", "addressLine1", "addressLine2", "city", "province", "country", "zip", "phone", "name"]
                },
            },
        },
        shopifyAbandonedCheckout: {
            name: 'ShopifyAbandonedCheckout', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, checkoutCreatedAt: {
                    name: "checkoutCreatedAt",
                    type: "DateTime",
                }, customerId: {
                    name: "customerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customer',
                }, customer: {
                    name: "customer",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    backLink: 'abandonedCheckout',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customerId" },
                }, totalPrice: {
                    name: "totalPrice",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                    isOptional: true,
                }, lineItems: {
                    name: "lineItems",
                    type: "ShopifyAbandonedCheckoutLineItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'checkout',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, customerId: {
                    name: "customerId",
                    fields: ["customerId"]
                },
            },
        },
        shopifyAbandonedCheckoutLineItem: {
            name: 'ShopifyAbandonedCheckoutLineItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, checkoutId: {
                    name: "checkoutId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'checkout',
                }, checkout: {
                    name: "checkout",
                    type: "ShopifyAbandonedCheckout",
                    isDataModel: true,
                    backLink: 'lineItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "checkoutId" },
                }, productId: {
                    name: "productId",
                    type: "String",
                }, title: {
                    name: "title",
                    type: "String",
                    isOptional: true,
                }, quantity: {
                    name: "quantity",
                    type: "Int",
                    isOptional: true,
                }, price: {
                    name: "price",
                    type: "String",
                    isOptional: true,
                }, currency: {
                    name: "currency",
                    type: "CurrencyCode",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        shopifyOrder: {
            name: 'ShopifyOrder', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, customerId: {
                    name: "customerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customer',
                }, customer: {
                    name: "customer",
                    type: "CommunityMemberShopifyProfileData",
                    isDataModel: true,
                    backLink: 'orders',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customerId" },
                }, shopifyOrderId: {
                    name: "shopifyOrderId",
                    type: "String",
                }, orderNumber: {
                    name: "orderNumber",
                    type: "String",
                }, processedAt: {
                    name: "processedAt",
                    type: "DateTime",
                }, cancelReason: {
                    name: "cancelReason",
                    type: "String",
                    isOptional: true,
                }, cancelTime: {
                    name: "cancelTime",
                    type: "DateTime",
                    isOptional: true,
                }, totalSpent: {
                    name: "totalSpent",
                    type: "Decimal",
                }, totalSpentInUSD: {
                    name: "totalSpentInUSD",
                    type: "Decimal",
                    isOptional: true,
                }, currencyCode: {
                    name: "currencyCode",
                    type: "CurrencyCode",
                }, isPaid: {
                    name: "isPaid",
                    type: "Boolean",
                }, fulfillmentStatus: {
                    name: "fulfillmentStatus",
                    type: "String",
                    isOptional: true,
                }, orderStatusUrl: {
                    name: "orderStatusUrl",
                    type: "String",
                    isOptional: true,
                }, adminShopifyUrl: {
                    name: "adminShopifyUrl",
                    type: "String",
                    isOptional: true,
                }, products: {
                    name: "products",
                    type: "ShopifyOrderProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'order',
                }, shippingAddressId: {
                    name: "shippingAddressId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shippingAddress',
                }, shippingAddress: {
                    name: "shippingAddress",
                    type: "ShopifyCustomerAddress",
                    isDataModel: true,
                    backLink: 'linkedOrders',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shippingAddressId" },
                }, shippingCost: {
                    name: "shippingCost",
                    type: "Decimal",
                }, shippingCurrencyCode: {
                    name: "shippingCurrencyCode",
                    type: "CurrencyCode",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopifyOrderId_customerId: {
                    name: "shopifyOrderId_customerId",
                    fields: ["shopifyOrderId", "customerId"]
                },
            },
        },
        shopifyOrderProduct: {
            name: 'ShopifyOrderProduct', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, orderId: {
                    name: "orderId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'order',
                }, order: {
                    name: "order",
                    type: "ShopifyOrder",
                    isDataModel: true,
                    backLink: 'products',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "orderId" },
                }, shopifyProductId: {
                    name: "shopifyProductId",
                    type: "String",
                }, shopifyLineItemId: {
                    name: "shopifyLineItemId",
                    type: "String",
                }, title: {
                    name: "title",
                    type: "String",
                }, quantity: {
                    name: "quantity",
                    type: "Int",
                }, sku: {
                    name: "sku",
                    type: "String",
                    isOptional: true,
                }, price: {
                    name: "price",
                    type: "Decimal",
                }, currencyCode: {
                    name: "currencyCode",
                    type: "CurrencyCode",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, orderId_shopifyLineItemId: {
                    name: "orderId_shopifyLineItemId",
                    fields: ["orderId", "shopifyLineItemId"]
                },
            },
        },
        globalCommunityMemberInstagramProfileData: {
            name: 'GlobalCommunityMemberInstagramProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "GlobalCommunityMember",
                    isDataModel: true,
                    backLink: 'instagramProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, instagramUniversalId: {
                    name: "instagramUniversalId",
                    type: "String",
                    isOptional: true,
                }, profileName: {
                    name: "profileName",
                    type: "String",
                    isOptional: true,
                }, isVerified: {
                    name: "isVerified",
                    type: "Boolean",
                    isOptional: true,
                }, accountType: {
                    name: "accountType",
                    type: "InstagramAccountType",
                    isOptional: true,
                }, biography: {
                    name: "biography",
                    type: "String",
                    isOptional: true,
                }, followerCount: {
                    name: "followerCount",
                    type: "Int",
                    isOptional: true,
                }, mediaCount: {
                    name: "mediaCount",
                    type: "Int",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                },
            },
        },
        communityMemberInstagramProfileData: {
            name: 'CommunityMemberInstagramProfileData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'instagramProfileData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, handle: {
                    name: "handle",
                    type: "String",
                }, profileName: {
                    name: "profileName",
                    type: "String",
                    isOptional: true,
                }, instagramUniversalId: {
                    name: "instagramUniversalId",
                    type: "String",
                    isOptional: true,
                }, isVerified: {
                    name: "isVerified",
                    type: "Boolean",
                    isOptional: true,
                }, accountType: {
                    name: "accountType",
                    type: "InstagramAccountType",
                    isOptional: true,
                }, biography: {
                    name: "biography",
                    type: "String",
                    isOptional: true,
                }, profilePictureUri: {
                    name: "profilePictureUri",
                    type: "String",
                    isOptional: true,
                }, followerCount: {
                    name: "followerCount",
                    type: "Int",
                    isOptional: true,
                }, mediaCount: {
                    name: "mediaCount",
                    type: "Int",
                    isOptional: true,
                }, recentMedia: {
                    name: "recentMedia",
                    type: "Json",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'instagramProfiles',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, communityMemberId_handle: {
                    name: "communityMemberId_handle",
                    fields: ["communityMemberId", "handle"]
                }, workspaceId_handle: {
                    name: "workspaceId_handle",
                    fields: ["workspaceId", "handle"]
                },
            },
        },
        communityMemberInstagramRelationData: {
            name: 'CommunityMemberInstagramRelationData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'instagramRelationData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    backLink: 'communityMemberData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, scopedPlatformId: {
                    name: "scopedPlatformId",
                    type: "String",
                }, followsOwnerAccount: {
                    name: "followsOwnerAccount",
                    type: "Boolean",
                    isOptional: true,
                }, followedByOwnerAccount: {
                    name: "followedByOwnerAccount",
                    type: "Boolean",
                    isOptional: true,
                }, followingStatus: {
                    name: "followingStatus",
                    type: "InstagramFollowingStatus",
                    isOptional: true,
                }, commentCount: {
                    name: "commentCount",
                    type: "Int",
                    isOptional: true,
                }, tagMentionCount: {
                    name: "tagMentionCount",
                    type: "Int",
                    isOptional: true,
                }, lastEngagedWith: {
                    name: "lastEngagedWith",
                    type: "DateTime",
                    isOptional: true,
                }, isEligibleForDM: {
                    name: "isEligibleForDM",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, dmEligibilityInfo: {
                    name: "dmEligibilityInfo",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId_instagramAccountId: {
                    name: "communityMemberId_instagramAccountId",
                    fields: ["communityMemberId", "instagramAccountId"]
                },
            },
        },
        inboxFeedItemRead: {
            name: 'InboxFeedItemRead', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, inboxFeedItemId: {
                    name: "inboxFeedItemId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'inboxFeedItem',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    backLink: 'readStates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxFeedItemId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    backLink: 'inboxItemReadStates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, lastReadTimestamp: {
                    name: "lastReadTimestamp",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, inboxFeedItemId_workspaceUserId: {
                    name: "inboxFeedItemId_workspaceUserId",
                    fields: ["inboxFeedItemId", "workspaceUserId"]
                },
            },
        },
        inboxFeedItem: {
            name: 'InboxFeedItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, owningAccountId: {
                    name: "owningAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'owningAccountInstagram',
                }, owningAccountPlatform: {
                    name: "owningAccountPlatform",
                    type: "Platform",
                }, owningAccountInstagram: {
                    name: "owningAccountInstagram",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "owningAccountId" },
                }, owningFacebookAccountId: {
                    name: "owningFacebookAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'owningAccountFacebook',
                }, owningAccountFacebook: {
                    name: "owningAccountFacebook",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "owningFacebookAccountId" },
                }, owningTiktokAccountId: {
                    name: "owningTiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'owningAccountTiktok',
                }, owningAccountTiktok: {
                    name: "owningAccountTiktok",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "owningTiktokAccountId" },
                }, itemType: {
                    name: "itemType",
                    type: "InboxItemType",
                }, displayType: {
                    name: "displayType",
                    type: "InboxDisplayType",
                    isOptional: true,
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, previewMessage: {
                    name: "previewMessage",
                    type: "String",
                    isOptional: true,
                }, previewTimestamp: {
                    name: "previewTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, isAIGeneratingResponse: {
                    name: "isAIGeneratingResponse",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isStarred: {
                    name: "isStarred",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isDone: {
                    name: "isDone",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isDoneTimestamp: {
                    name: "isDoneTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, isAnswered: {
                    name: "isAnswered",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, isRead: {
                    name: "isRead",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, unreadCount: {
                    name: "unreadCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, labels: {
                    name: "labels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'InboxFeedItem',
                    isRelationOwner: true,
                }, draftResponse: {
                    name: "draftResponse",
                    type: "Json",
                    isOptional: true,
                }, assignType: {
                    name: "assignType",
                    type: "AssignType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, assigneeId: {
                    name: "assigneeId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'assignee',
                }, assignee: {
                    name: "assignee",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'assignedInboxItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "assigneeId" },
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                    isOptional: true,
                }, activityLink: {
                    name: "activityLink",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxItem',
                }, readStates: {
                    name: "readStates",
                    type: "InboxFeedItemRead",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxFeedItem',
                }, lastRefreshedTime: {
                    name: "lastRefreshedTime",
                    type: "DateTime",
                    isOptional: true,
                }, mostRecentProfileId: {
                    name: "mostRecentProfileId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'mostRecentProfile',
                }, mostRecentProfile: {
                    name: "mostRecentProfile",
                    type: "InboxFeedProfile",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "mostRecentProfileId" },
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxFeedItem',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, conversationId: {
                    name: "conversationId",
                    fields: ["conversationId"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                },
            },
        },
        inboxFeedProfile: {
            name: 'InboxFeedProfile', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "InboxFeedProfileType",
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedProfile',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'limitedCommunityMember',
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxFeedProfile',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "limitedCommunityMemberId" },
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'mostRecentProfile',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    fields: ["limitedCommunityMemberId"]
                },
            },
        },
        capturedIntent: {
            name: 'CapturedIntent', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, processedAt: {
                    name: "processedAt",
                    type: "DateTime",
                    isOptional: true,
                }, type: {
                    name: "type",
                    type: "CapturedIntentType",
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'capturedIntents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'capturedIntents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, intentId: {
                    name: "intentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'intent',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    backLink: 'capturedIntents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentId" },
                }, confidenceScore: {
                    name: "confidenceScore",
                    type: "Float",
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        sentimentAnalysis: {
            name: 'SentimentAnalysis', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, sentiment: {
                    name: "sentiment",
                    type: "Sentiment",
                }, tone: {
                    name: "tone",
                    type: "Tone",
                }, shouldEscalateToHuman: {
                    name: "shouldEscalateToHuman",
                    type: "Boolean",
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, globalContentId: {
                    name: "globalContentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'globalContent',
                }, globalContent: {
                    name: "globalContent",
                    type: "GlobalContent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "globalContentId" },
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                }, globalLLMAnalysisMetadata: {
                    name: "globalLLMAnalysisMetadata",
                    type: "GlobalLLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentimentAnalysis',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, conversationId: {
                    name: "conversationId",
                    fields: ["conversationId"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                }, globalContentId: {
                    name: "globalContentId",
                    fields: ["globalContentId"]
                },
            },
        },
        conversation: {
            name: 'Conversation', fields: {
                isStarred: {
                    name: "isStarred",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, labels: {
                    name: "labels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversations',
                    isRelationOwner: true,
                }, previewMessage: {
                    name: "previewMessage",
                    type: "String",
                    isOptional: true,
                }, previewTimestamp: {
                    name: "previewTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, isDone: {
                    name: "isDone",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isAIGeneratingResponse: {
                    name: "isAIGeneratingResponse",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isAnswered: {
                    name: "isAnswered",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, assignType: {
                    name: "assignType",
                    type: "AssignType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, draftResponse: {
                    name: "draftResponse",
                    type: "Json",
                    isOptional: true,
                }, id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platformConversationId: {
                    name: "platformConversationId",
                    type: "String",
                    isOptional: true,
                }, conversationOwner: {
                    name: "conversationOwner",
                    type: "ConversationOwner",
                    isDataModel: true,
                    backLink: 'conversations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationOwnerId" },
                }, conversationOwnerId: {
                    name: "conversationOwnerId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversationOwner',
                }, participantId: {
                    name: "participantId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'participant',
                }, participant: {
                    name: "participant",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'conversations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "participantId" },
                }, title: {
                    name: "title",
                    type: "String",
                    isOptional: true,
                }, messages: {
                    name: "messages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, conversationFeedItems: {
                    name: "conversationFeedItems",
                    type: "ConversationFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, historicalIntents: {
                    name: "historicalIntents",
                    type: "Intent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'linkedConversations',
                    isRelationOwner: true,
                }, activeJourneyId: {
                    name: "activeJourneyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'activeJourney',
                }, activeJourney: {
                    name: "activeJourney",
                    type: "Journey",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'activeConversations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "activeJourneyId" },
                }, conversationSummary: {
                    name: "conversationSummary",
                    type: "String",
                    isOptional: true,
                }, conversationHistory: {
                    name: "conversationHistory",
                    type: "Json",
                    isOptional: true,
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversation',
                }, eventActivity: {
                    name: "eventActivity",
                    type: "ConversationEventActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, notes: {
                    name: "notes",
                    type: "Note",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, journeySessions: {
                    name: "journeySessions",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, journeySessionsV2: {
                    name: "journeySessionsV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, quizSessions: {
                    name: "quizSessions",
                    type: "QuizSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, quizSessionsV2: {
                    name: "quizSessionsV2",
                    type: "QuizSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, insightId: {
                    name: "insightId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'insight',
                }, insight: {
                    name: "insight",
                    type: "Insight",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "insightId" },
                }, isMarkedAsSpam: {
                    name: "isMarkedAsSpam",
                    type: "Boolean",
                    isOptional: true,
                }, moderatedItem: {
                    name: "moderatedItem",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversation',
                }, capturedIntents: {
                    name: "capturedIntents",
                    type: "CapturedIntent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, draftAIGeneratedMessage: {
                    name: "draftAIGeneratedMessage",
                    type: "AIGeneratedMessage",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversation',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversation',
                }, copilotGeneratedResponses: {
                    name: "copilotGeneratedResponses",
                    type: "CopilotGeneratedResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'targetedConversation',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'conversations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, messageReactions: {
                    name: "messageReactions",
                    type: "MessageReaction",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'conversation',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, platformConversationId_conversationOwnerId: {
                    name: "platformConversationId_conversationOwnerId",
                    fields: ["platformConversationId", "conversationOwnerId"]
                }, participantId_conversationOwnerId: {
                    name: "participantId_conversationOwnerId",
                    fields: ["participantId", "conversationOwnerId"]
                },
            },
        },
        conversationFeedItem: {
            name: 'ConversationFeedItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'conversationFeedItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, note: {
                    name: "note",
                    type: "Note",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "noteId" },
                }, noteId: {
                    name: "noteId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'note',
                }, eventActivity: {
                    name: "eventActivity",
                    type: "ConversationEventActivity",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "eventActivityId" },
                }, eventActivityId: {
                    name: "eventActivityId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'eventActivity',
                }, draftAIGeneratedMessage: {
                    name: "draftAIGeneratedMessage",
                    type: "AIGeneratedMessage",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationFeedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "draftAIGeneratedMessageId" },
                }, draftAIGeneratedMessageId: {
                    name: "draftAIGeneratedMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'draftAIGeneratedMessage',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                }, noteId: {
                    name: "noteId",
                    fields: ["noteId"]
                }, eventActivityId: {
                    name: "eventActivityId",
                    fields: ["eventActivityId"]
                }, draftAIGeneratedMessageId: {
                    name: "draftAIGeneratedMessageId",
                    fields: ["draftAIGeneratedMessageId"]
                },
            },
        },
        aIGeneratedMessage: {
            name: 'AIGeneratedMessage', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, generatedTimestamp: {
                    name: "generatedTimestamp",
                    type: "DateTime",
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'draftAIGeneratedMessage',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, conversationFeedItem: {
                    name: "conversationFeedItem",
                    type: "ConversationFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'draftAIGeneratedMessage',
                }, body: {
                    name: "body",
                    type: "String",
                }, autopilotDraftState: {
                    name: "autopilotDraftState",
                    type: "AutopilotDraftState",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'aiGeneratedMessage',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, conversationId: {
                    name: "conversationId",
                    fields: ["conversationId"]
                },
            },
        },
        conversationEventActivity: {
            name: 'ConversationEventActivity', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, activityType: {
                    name: "activityType",
                    type: "ConversationEventActivityType",
                }, recordedTimestamp: {
                    name: "recordedTimestamp",
                    type: "DateTime",
                }, notificationMessage: {
                    name: "notificationMessage",
                    type: "String",
                    isOptional: true,
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'eventActivity',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversationFeedItem: {
                    name: "conversationFeedItem",
                    type: "ConversationFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'eventActivity',
                }, primaryParticipantId: {
                    name: "primaryParticipantId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'primaryParticipant',
                }, primaryParticipant: {
                    name: "primaryParticipant",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'primaryParticipantActivities',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "primaryParticipantId" },
                }, secondaryParticipantId: {
                    name: "secondaryParticipantId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'secondaryParticipant',
                }, secondaryParticipant: {
                    name: "secondaryParticipant",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'secondaryParticipantActivities',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "secondaryParticipantId" },
                }, aiPersonaId: {
                    name: "aiPersonaId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'aiPersona',
                }, aiPersona: {
                    name: "aiPersona",
                    type: "AiPersona",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'conversationEvents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "aiPersonaId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        label: {
            name: 'Label', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "LabelType",
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'customLabels',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, InboxFeedItem: {
                    name: "InboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'labels',
                    isRelationOwner: true,
                }, conversations: {
                    name: "conversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'labels',
                    isRelationOwner: true,
                }, communityMembers: {
                    name: "communityMembers",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'labels',
                    isRelationOwner: true,
                }, limitedCommunityMembers: {
                    name: "limitedCommunityMembers",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'labels',
                    isRelationOwner: true,
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'labels',
                    isRelationOwner: true,
                }, moderationIntentConfig: {
                    name: "moderationIntentConfig",
                    type: "ModerationIntentConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'title',
                }, title: {
                    name: "title",
                    type: "String",
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'label',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, type_workspaceId_title: {
                    name: "type_workspaceId_title",
                    fields: ["type", "workspaceId", "title"]
                },
            },
        },
        labelAssignmentMetadata: {
            name: 'LabelAssignmentMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, labelId: {
                    name: "labelId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'label',
                }, label: {
                    name: "label",
                    type: "Label",
                    isDataModel: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "labelId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, inboxFeedItemId: {
                    name: "inboxFeedItemId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxFeedItem',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxFeedItemId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'limitedCommunityMember',
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "limitedCommunityMemberId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, addedBy: {
                    name: "addedBy",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'addedByUser',
                }, addedByUser: {
                    name: "addedByUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'labelAssignments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "addedBy" },
                }, lastUpdatedMethod: {
                    name: "lastUpdatedMethod",
                    type: "LabelAssignmentMethod",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, labelId_conversationId: {
                    name: "labelId_conversationId",
                    fields: ["labelId", "conversationId"]
                }, labelId_inboxFeedItemId: {
                    name: "labelId_inboxFeedItemId",
                    fields: ["labelId", "inboxFeedItemId"]
                }, labelId_communityMemberId: {
                    name: "labelId_communityMemberId",
                    fields: ["labelId", "communityMemberId"]
                }, labelId_limitedCommunityMemberId: {
                    name: "labelId_limitedCommunityMemberId",
                    fields: ["labelId", "limitedCommunityMemberId"]
                }, labelId_contentId: {
                    name: "labelId_contentId",
                    fields: ["labelId", "contentId"]
                },
            },
        },
        contentSyncTask: {
            name: 'ContentSyncTask', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentSyncTasks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, status: {
                    name: "status",
                    type: "SyncStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                    isOptional: true,
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentSyncTasks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentSyncTasks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, platformUserId: {
                    name: "platformUserId",
                    type: "String",
                    isOptional: true,
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        tiktokContentMetadata: {
            name: 'TiktokContentMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, tiktokAdId: {
                    name: "tiktokAdId",
                    type: "String",
                    isOptional: true,
                }, tiktokIdentityId: {
                    name: "tiktokIdentityId",
                    type: "String",
                    isOptional: true,
                }, tiktokIdentityType: {
                    name: "tiktokIdentityType",
                    type: "TiktokIdentityType",
                    isOptional: true,
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'tiktokContentMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                },
            },
        },
        globalContent: {
            name: 'GlobalContent', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "GlobalCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'authoredContent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, media: {
                    name: "media",
                    type: "GlobalMedia",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'globalContent',
                }, platformContentId: {
                    name: "platformContentId",
                    type: "String",
                }, contentType: {
                    name: "contentType",
                    type: "ContentType",
                }, sourceType: {
                    name: "sourceType",
                    type: "ContentSource",
                    isOptional: true,
                }, caption: {
                    name: "caption",
                    type: "String",
                    isOptional: true,
                }, permalink: {
                    name: "permalink",
                    type: "String",
                    isOptional: true,
                }, publishTimestamp: {
                    name: "publishTimestamp",
                    type: "DateTime",
                }, insights: {
                    name: "insights",
                    type: "Json",
                    isOptional: true,
                }, hashtagTrackers: {
                    name: "hashtagTrackers",
                    type: "HashtagTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'globalContents',
                }, searchQueryTrackers: {
                    name: "searchQueryTrackers",
                    type: "SearchQueryTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'globalContents',
                }, analysisStatus: {
                    name: "analysisStatus",
                    type: "ContentAnalysisStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, audioAnalysisData: {
                    name: "audioAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, frameAnalysisData: {
                    name: "frameAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, videoAnalysisData: {
                    name: "videoAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "GlobalContentEmbedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, videoFrames: {
                    name: "videoFrames",
                    type: "GlobalContentVideoFrame",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, metadata: {
                    name: "metadata",
                    type: "GlobalContentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, taggedUsers: {
                    name: "taggedUsers",
                    type: "GlobalCommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'taggedContent',
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "GlobalLLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'globalContent',
                }, topics: {
                    name: "topics",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'globalContents',
                    isRelationOwner: true,
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, isDeleted: {
                    name: "isDeleted",
                    type: "Boolean",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, platformContentId: {
                    name: "platformContentId",
                    fields: ["platformContentId"]
                },
            },
        },
        content: {
            name: 'Content', fields: {
                isStarred: {
                    name: "isStarred",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, labels: {
                    name: "labels",
                    type: "Label",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                    isRelationOwner: true,
                }, previewMessage: {
                    name: "previewMessage",
                    type: "String",
                    isOptional: true,
                }, previewTimestamp: {
                    name: "previewTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, isDone: {
                    name: "isDone",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isAIGeneratingResponse: {
                    name: "isAIGeneratingResponse",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isAnswered: {
                    name: "isAnswered",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, assignType: {
                    name: "assignType",
                    type: "AssignType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, draftResponse: {
                    name: "draftResponse",
                    type: "Json",
                    isOptional: true,
                }, id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platformContentId: {
                    name: "platformContentId",
                    type: "String",
                }, contentType: {
                    name: "contentType",
                    type: "ContentType",
                }, contentSurface: {
                    name: "contentSurface",
                    type: "ContentSurface",
                    attributes: [{ "name": "@default", "args": [] }],
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "ContentOwner",
                    isDataModel: true,
                    backLink: 'publishedContent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, relevantAccountId: {
                    name: "relevantAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'relevantAccount',
                }, relevantAccount: {
                    name: "relevantAccount",
                    type: "ContentOwner",
                    isDataModel: true,
                    backLink: 'allContent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "relevantAccountId" },
                }, sourceType: {
                    name: "sourceType",
                    type: "ContentSource",
                    isOptional: true,
                }, isMention: {
                    name: "isMention",
                    type: "Boolean",
                }, isByOwner: {
                    name: "isByOwner",
                    type: "Boolean",
                }, isFavorited: {
                    name: "isFavorited",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isRemoved: {
                    name: "isRemoved",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, media: {
                    name: "media",
                    type: "Media",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, permalink: {
                    name: "permalink",
                    type: "String",
                    isOptional: true,
                }, caption: {
                    name: "caption",
                    type: "String",
                    isOptional: true,
                }, publishTimestamp: {
                    name: "publishTimestamp",
                    type: "DateTime",
                }, metadata: {
                    name: "metadata",
                    type: "ContentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, insights: {
                    name: "insights",
                    type: "Json",
                    isOptional: true,
                }, comments: {
                    name: "comments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, privateMessages: {
                    name: "privateMessages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'originContent',
                }, canReply: {
                    name: "canReply",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, contentSummary: {
                    name: "contentSummary",
                    type: "ContentSummary",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, inboxFeedItem: {
                    name: "inboxFeedItem",
                    type: "InboxFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, linkedEvents: {
                    name: "linkedEvents",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'originContent',
                }, contentTriggers: {
                    name: "contentTriggers",
                    type: "ContentTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, commentMentionerId: {
                    name: "commentMentionerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'commentMentioner',
                }, commentMentioner: {
                    name: "commentMentioner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'mentionedCommentContent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentMentionerId" },
                }, tiktokHashtagTrackers: {
                    name: "tiktokHashtagTrackers",
                    type: "TikTokHashtagTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'contents',
                }, tiktokSearchQueryTrackers: {
                    name: "tiktokSearchQueryTrackers",
                    type: "TikTokSearchQueryTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'contents',
                }, hashtagTrackers: {
                    name: "hashtagTrackers",
                    type: "HashtagTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'contents',
                }, searchQueryTrackers: {
                    name: "searchQueryTrackers",
                    type: "SearchQueryTracker",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'contents',
                }, threads: {
                    name: "threads",
                    type: "Thread",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, identifiedProducts: {
                    name: "identifiedProducts",
                    type: "IdentifiedProductContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, analysisStatus: {
                    name: "analysisStatus",
                    type: "ContentAnalysisStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, audioAnalysisData: {
                    name: "audioAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, frameAnalysisData: {
                    name: "frameAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, videoAnalysisData: {
                    name: "videoAnalysisData",
                    type: "Json",
                    isOptional: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "ContentEmbedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, videoFrames: {
                    name: "videoFrames",
                    type: "ContentVideoFrame",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, contentSyncTasks: {
                    name: "contentSyncTasks",
                    type: "ContentSyncTask",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, location: {
                    name: "location",
                    type: "String",
                    isOptional: true,
                }, locationId: {
                    name: "locationId",
                    type: "String",
                    isOptional: true,
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, collaborators: {
                    name: "collaborators",
                    type: "ContentCollaboration",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                }, contentPublishingMetadata: {
                    name: "contentPublishingMetadata",
                    type: "ContentPublishingMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, tiktokContentMetadata: {
                    name: "tiktokContentMetadata",
                    type: "TiktokContentMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, clusterPendingItem: {
                    name: "clusterPendingItem",
                    type: "InsightClusterPendingItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, topics: {
                    name: "topics",
                    type: "SocialListeningTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'contents',
                    isRelationOwner: true,
                }, isDeleted: {
                    name: "isDeleted",
                    type: "Boolean",
                    isOptional: true,
                }, labelAssignments: {
                    name: "labelAssignments",
                    type: "LabelAssignmentMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'content',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, platformContentId_relevantAccountId: {
                    name: "platformContentId_relevantAccountId",
                    fields: ["platformContentId", "relevantAccountId"]
                },
            },
        },
        contentPublishingMetadata: {
            name: 'ContentPublishingMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'contentPublishingMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, scheduledTime: {
                    name: "scheduledTime",
                    type: "DateTime",
                    isOptional: true,
                }, workspaceUserAuthorId: {
                    name: "workspaceUserAuthorId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceUserAuthor',
                }, workspaceUserAuthor: {
                    name: "workspaceUserAuthor",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentPublishingMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserAuthorId" },
                }, instagramFirstComment: {
                    name: "instagramFirstComment",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "ContentStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, containerId: {
                    name: "containerId",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                },
            },
        },
        contentCollaboration: {
            name: 'ContentCollaboration', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, username: {
                    name: "username",
                    type: "String",
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentCollaborations',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'collaborators',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        identifiedProductContent: {
            name: 'IdentifiedProductContent', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'identifiedProducts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'identifiedProductContent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, confidence: {
                    name: "confidence",
                    type: "Float",
                }, recognitionData: {
                    name: "recognitionData",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_shopifyResourceId: {
                    name: "contentId_shopifyResourceId",
                    fields: ["contentId", "shopifyResourceId"]
                },
            },
        },
        contentVideoFrame: {
            name: 'ContentVideoFrame', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, sourceUri: {
                    name: "sourceUri",
                    type: "String",
                }, height: {
                    name: "height",
                    type: "Int",
                }, width: {
                    name: "width",
                    type: "Int",
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'videoFrames',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, timestamp: {
                    name: "timestamp",
                    type: "Float",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_timestamp: {
                    name: "contentId_timestamp",
                    fields: ["contentId", "timestamp"]
                },
            },
        },
        globalContentVideoFrame: {
            name: 'GlobalContentVideoFrame', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, sourceUri: {
                    name: "sourceUri",
                    type: "String",
                }, height: {
                    name: "height",
                    type: "Int",
                }, width: {
                    name: "width",
                    type: "Int",
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "GlobalContent",
                    isDataModel: true,
                    backLink: 'videoFrames',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, timestamp: {
                    name: "timestamp",
                    type: "Float",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_timestamp: {
                    name: "contentId_timestamp",
                    fields: ["contentId", "timestamp"]
                },
            },
        },
        contentEmbedding: {
            name: 'ContentEmbedding', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceInternalMetadataId: {
                    name: "workspaceInternalMetadataId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspaceInternalMetadata',
                }, workspaceInternalMetadata: {
                    name: "workspaceInternalMetadata",
                    type: "WorkspaceInternalMetadata",
                    isDataModel: true,
                    backLink: 'contentEmbeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceInternalMetadataId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, searchType: {
                    name: "searchType",
                    type: "ContentEmbeddingType",
                }, rawText: {
                    name: "rawText",
                    type: "String",
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_rawText_searchType: {
                    name: "contentId_rawText_searchType",
                    fields: ["contentId", "rawText", "searchType"]
                },
            },
        },
        globalContentEmbedding: {
            name: 'GlobalContentEmbedding', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "GlobalContent",
                    isDataModel: true,
                    backLink: 'embeddings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, searchType: {
                    name: "searchType",
                    type: "ContentEmbeddingType",
                }, rawText: {
                    name: "rawText",
                    type: "String",
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_rawText_searchType: {
                    name: "contentId_rawText_searchType",
                    fields: ["contentId", "rawText", "searchType"]
                },
            },
        },
        globalContentMetadata: {
            name: 'GlobalContentMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "GlobalContent",
                    isDataModel: true,
                    backLink: 'metadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, metadataType: {
                    name: "metadataType",
                    type: "ContentMetadataType",
                }, valueNumber: {
                    name: "valueNumber",
                    type: "Int",
                    isOptional: true,
                }, valueString: {
                    name: "valueString",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_metadataType: {
                    name: "contentId_metadataType",
                    fields: ["contentId", "metadataType"]
                },
            },
        },
        contentMetadata: {
            name: 'ContentMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'metadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, metadataType: {
                    name: "metadataType",
                    type: "ContentMetadataType",
                }, valueNumber: {
                    name: "valueNumber",
                    type: "Int",
                    isOptional: true,
                }, valueString: {
                    name: "valueString",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_metadataType: {
                    name: "contentId_metadataType",
                    fields: ["contentId", "metadataType"]
                },
            },
        },
        contentSummary: {
            name: 'ContentSummary', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'contentSummary',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, summary: {
                    name: "summary",
                    type: "String",
                }, summaryStatus: {
                    name: "summaryStatus",
                    type: "SummaryStatus",
                }, sentiment: {
                    name: "sentiment",
                    type: "Sentiment",
                }, keyThemes: {
                    name: "keyThemes",
                    type: "String",
                    isArray: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                },
            },
        },
        globalMedia: {
            name: 'GlobalMedia', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, platformMediaId: {
                    name: "platformMediaId",
                    type: "String",
                }, sourceUri: {
                    name: "sourceUri",
                    type: "String",
                }, thumbnailUri: {
                    name: "thumbnailUri",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "MediaStatus",
                    isOptional: true,
                }, type: {
                    name: "type",
                    type: "ContentType",
                }, height: {
                    name: "height",
                    type: "Int",
                    isOptional: true,
                }, width: {
                    name: "width",
                    type: "Int",
                    isOptional: true,
                }, globalContentId: {
                    name: "globalContentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'globalContent',
                }, globalContent: {
                    name: "globalContent",
                    type: "GlobalContent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'media',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "globalContentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        media: {
            name: 'Media', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'media',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'media',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, platformMediaId: {
                    name: "platformMediaId",
                    type: "String",
                }, sourceUri: {
                    name: "sourceUri",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "ContentType",
                }, thumbnailUri: {
                    name: "thumbnailUri",
                    type: "String",
                    isOptional: true,
                }, width: {
                    name: "width",
                    type: "Int",
                    isOptional: true,
                }, height: {
                    name: "height",
                    type: "Int",
                    isOptional: true,
                }, tags: {
                    name: "tags",
                    type: "ContentMediaTag",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'media',
                }, containerId: {
                    name: "containerId",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "MediaStatus",
                    isOptional: true,
                }, index: {
                    name: "index",
                    type: "Int",
                    isOptional: true,
                }, uploadOffset: {
                    name: "uploadOffset",
                    type: "Int",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, platformMediaId_contentId: {
                    name: "platformMediaId_contentId",
                    fields: ["platformMediaId", "contentId"]
                },
            },
        },
        contentOwner: {
            name: 'ContentOwner', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'limitedCommunityMember',
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookAccount',
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'content',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "limitedCommunityMemberId" },
                }, facebookAccount: {
                    name: "facebookAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookAccountId" },
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, publishedContent: {
                    name: "publishedContent",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, allContent: {
                    name: "allContent",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'relevantAccount',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    fields: ["instagramAccountId"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    fields: ["limitedCommunityMemberId"]
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    fields: ["facebookAccountId"]
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    fields: ["tiktokAccountId"]
                },
            },
        },
        commentOwner: {
            name: 'CommentOwner', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, platform: {
                    name: "platform",
                    type: "Platform",
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'limitedCommunityMember',
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookAccount',
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "limitedCommunityMemberId" },
                }, facebookAccount: {
                    name: "facebookAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookAccountId" },
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentOwner',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                }, publishedComments: {
                    name: "publishedComments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, mentionedComments: {
                    name: "mentionedComments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'mentionedOwner',
                }, mentionedCommentContent: {
                    name: "mentionedCommentContent",
                    type: "Content",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'commentMentioner',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    fields: ["instagramAccountId"]
                }, communityMemberId: {
                    name: "communityMemberId",
                    fields: ["communityMemberId"]
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    fields: ["limitedCommunityMemberId"]
                }, facebookAccountId: {
                    name: "facebookAccountId",
                    fields: ["facebookAccountId"]
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    fields: ["tiktokAccountId"]
                },
            },
        },
        commentDeleteMetadata: {
            name: 'CommentDeleteMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    backLink: 'commentDeleteMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, previousState: {
                    name: "previousState",
                    type: "CommentViewState",
                    attributes: [{ "name": "@default", "args": [] }],
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                },
            },
        },
        commentMetadata: {
            name: 'CommentMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, hasBrandReply: {
                    name: "hasBrandReply",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    backLink: 'commentMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                },
            },
        },
        keyword: {
            name: 'Keyword', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, keyword: {
                    name: "keyword",
                    type: "String",
                }, products: {
                    name: "products",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'keywords',
                    isRelationOwner: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'keywords',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, mentions: {
                    name: "mentions",
                    type: "KeywordMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'keyword',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, keyword_workspaceId: {
                    name: "keyword_workspaceId",
                    fields: ["keyword", "workspaceId"]
                },
            },
        },
        keywordMention: {
            name: 'KeywordMention', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, llmAnalysisId: {
                    name: "llmAnalysisId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'llmAnalysis',
                }, llmAnalysis: {
                    name: "llmAnalysis",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    backLink: 'mentionedKeywords',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "llmAnalysisId" },
                }, keywordId: {
                    name: "keywordId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'keyword',
                }, keyword: {
                    name: "keyword",
                    type: "Keyword",
                    isDataModel: true,
                    backLink: 'mentions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "keywordId" },
                }, confidence: {
                    name: "confidence",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'mentionedKeywords',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, llmAnalysisId_keywordId: {
                    name: "llmAnalysisId_keywordId",
                    fields: ["llmAnalysisId", "keywordId"]
                },
            },
        },
        productMention: {
            name: 'ProductMention', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'productMentions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, llmAnalysisId: {
                    name: "llmAnalysisId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'llmAnalysis',
                }, llmAnalysis: {
                    name: "llmAnalysis",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    backLink: 'mentionedProducts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "llmAnalysisId" },
                }, confidence: {
                    name: "confidence",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'productMentions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopifyResourceId_llmAnalysisId: {
                    name: "shopifyResourceId_llmAnalysisId",
                    fields: ["shopifyResourceId", "llmAnalysisId"]
                },
            },
        },
        contentMediaTag: {
            name: 'ContentMediaTag', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, username: {
                    name: "username",
                    type: "String",
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentMediaTags',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, x: {
                    name: "x",
                    type: "Float",
                }, y: {
                    name: "y",
                    type: "Float",
                }, mediaId: {
                    name: "mediaId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'media',
                }, media: {
                    name: "media",
                    type: "Media",
                    isDataModel: true,
                    backLink: 'tags',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "mediaId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        comment: {
            name: 'Comment', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, authorId: {
                    name: "authorId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "CommentOwner",
                    isDataModel: true,
                    backLink: 'publishedComments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, mentionedOwnerId: {
                    name: "mentionedOwnerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'mentionedOwner',
                }, mentionedOwner: {
                    name: "mentionedOwner",
                    type: "CommentOwner",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'mentionedComments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "mentionedOwnerId" },
                }, platformCommentId: {
                    name: "platformCommentId",
                    type: "String",
                }, body: {
                    name: "body",
                    type: "String",
                }, publishedTimestamp: {
                    name: "publishedTimestamp",
                    type: "DateTime",
                }, isMention: {
                    name: "isMention",
                    type: "Boolean",
                }, isSentByAI: {
                    name: "isSentByAI",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, viewState: {
                    name: "viewState",
                    type: "CommentViewState",
                }, hasBrandReply: {
                    name: "hasBrandReply",
                    type: "Boolean",
                    isOptional: true,
                }, parentCommentId: {
                    name: "parentCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentComment',
                }, parentComment: {
                    name: "parentComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'replies',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentCommentId" },
                }, replies: {
                    name: "replies",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentComment',
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'comments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, likeCount: {
                    name: "likeCount",
                    type: "Int",
                    isOptional: true,
                }, isLikedByBrand: {
                    name: "isLikedByBrand",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, canReply: {
                    name: "canReply",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, status: {
                    name: "status",
                    type: "CommentSentStatus",
                    isOptional: true,
                }, scheduledTime: {
                    name: "scheduledTime",
                    type: "DateTime",
                    isOptional: true,
                }, isDone: {
                    name: "isDone",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isDoneTimestamp: {
                    name: "isDoneTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, isMarkedAsDoneByUserId: {
                    name: "isMarkedAsDoneByUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'isMarkedAsDoneByUser',
                }, isMarkedAsDoneByUser: {
                    name: "isMarkedAsDoneByUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentsMarkedAsDone',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "isMarkedAsDoneByUserId" },
                }, notes: {
                    name: "notes",
                    type: "Note",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'comment',
                }, context: {
                    name: "context",
                    type: "Json",
                    isOptional: true,
                }, permalink: {
                    name: "permalink",
                    type: "String",
                    isOptional: true,
                }, tags: {
                    name: "tags",
                    type: "Json",
                    isOptional: true,
                }, media: {
                    name: "media",
                    type: "Media",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, unknownIntent: {
                    name: "unknownIntent",
                    type: "UnknownIntentComment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, insightId: {
                    name: "insightId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'insight',
                }, insight: {
                    name: "insight",
                    type: "Insight",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "insightId" },
                }, llmAnalysisMetadataId: {
                    name: "llmAnalysisMetadataId",
                    type: "String",
                    isOptional: true,
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, copilotGeneratedResponse: {
                    name: "copilotGeneratedResponse",
                    type: "CopilotGeneratedResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'targetedComment',
                }, workspaceSenderId: {
                    name: "workspaceSenderId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceSender',
                }, workspaceSender: {
                    name: "workspaceSender",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentComments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceSenderId" },
                }, isMarkedAsSpam: {
                    name: "isMarkedAsSpam",
                    type: "Boolean",
                    isOptional: true,
                }, isHiddenByModeration: {
                    name: "isHiddenByModeration",
                    type: "Boolean",
                    isOptional: true,
                }, moderatedItem: {
                    name: "moderatedItem",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, parentJourneyId: {
                    name: "parentJourneyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentJourney',
                }, parentJourney: {
                    name: "parentJourney",
                    type: "Journey",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'commentsSent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentJourneyId" },
                }, journeyResponseId: {
                    name: "journeyResponseId",
                    type: "String",
                    isOptional: true,
                }, journeyResponse: {
                    name: "journeyResponse",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, thread: {
                    name: "thread",
                    type: "Thread",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'rootComment',
                }, parentThreadId: {
                    name: "parentThreadId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentThread',
                }, parentThread: {
                    name: "parentThread",
                    type: "Thread",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'replies',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentThreadId" },
                }, capturedIntents: {
                    name: "capturedIntents",
                    type: "CapturedIntent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'comment',
                }, clusterPendingItem: {
                    name: "clusterPendingItem",
                    type: "InsightClusterPendingItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, journeysTrigger: {
                    name: "journeysTrigger",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'delayedComment',
                }, journeysTriggerV2: {
                    name: "journeysTriggerV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'delayedComment',
                }, delayedJourneySession: {
                    name: "delayedJourneySession",
                    type: "JourneySession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedComment',
                }, delayedJourneySessionV2: {
                    name: "delayedJourneySessionV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedComment',
                }, publishOperations: {
                    name: "publishOperations",
                    type: "Json",
                    isOptional: true,
                }, replyMessages: {
                    name: "replyMessages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'replyComment',
                }, autopilotDraftState: {
                    name: "autopilotDraftState",
                    type: "AutopilotDraftState",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, commentDeleteMetadata: {
                    name: "commentDeleteMetadata",
                    type: "CommentDeleteMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, commentMetadata: {
                    name: "commentMetadata",
                    type: "CommentMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comment',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'comments',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, automationPreviews: {
                    name: "automationPreviews",
                    type: "AutomationPreview",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'comments',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, platformCommentId_contentId: {
                    name: "platformCommentId_contentId",
                    fields: ["platformCommentId", "contentId"]
                },
            },
        },
        thread: {
            name: 'Thread', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'threads',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, rootCommentId: {
                    name: "rootCommentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'rootComment',
                }, rootComment: {
                    name: "rootComment",
                    type: "Comment",
                    isDataModel: true,
                    backLink: 'thread',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "rootCommentId" },
                }, replies: {
                    name: "replies",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentThread',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, rootCommentId: {
                    name: "rootCommentId",
                    fields: ["rootCommentId"]
                }, contentId_rootCommentId: {
                    name: "contentId_rootCommentId",
                    fields: ["contentId", "rootCommentId"]
                },
            },
        },
        messageReaction: {
            name: 'MessageReaction', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isFromOwner: {
                    name: "isFromOwner",
                    type: "Boolean",
                }, platformTimestamp: {
                    name: "platformTimestamp",
                    type: "DateTime",
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    backLink: 'reactions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messageReactions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, actionType: {
                    name: "actionType",
                    type: "MessageReactionActionType",
                }, reactionType: {
                    name: "reactionType",
                    type: "MessageReactionType",
                    isOptional: true,
                }, emoji: {
                    name: "emoji",
                    type: "String",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'messageReactions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId_isFromOwner: {
                    name: "messageId_isFromOwner",
                    fields: ["messageId", "isFromOwner"]
                },
            },
        },
        message: {
            name: 'Message', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, originContentId: {
                    name: "originContentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'originContent',
                }, platformMessageId: {
                    name: "platformMessageId",
                    type: "String",
                    isOptional: true,
                }, content: {
                    name: "content",
                    type: "String",
                }, messageType: {
                    name: "messageType",
                    type: "MessageType",
                }, sentTimestamp: {
                    name: "sentTimestamp",
                    type: "DateTime",
                }, isFromOwner: {
                    name: "isFromOwner",
                    type: "Boolean",
                }, buttonMetadata: {
                    name: "buttonMetadata",
                    type: "Json",
                    isOptional: true,
                }, attachments: {
                    name: "attachments",
                    type: "Json",
                    isArray: true,
                }, isReadByOwner: {
                    name: "isReadByOwner",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, seenTimestamp: {
                    name: "seenTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, detectedIntents: {
                    name: "detectedIntents",
                    type: "Intent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'linkedMessages',
                    isRelationOwner: true,
                }, detectedSentiment: {
                    name: "detectedSentiment",
                    type: "Sentiment",
                    isOptional: true,
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'messages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, conversationFeedItem: {
                    name: "conversationFeedItem",
                    type: "ConversationFeedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, originContent: {
                    name: "originContent",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'privateMessages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "originContentId" },
                }, responseSuggestion: {
                    name: "responseSuggestion",
                    type: "String",
                    isOptional: true,
                }, isSentByAI: {
                    name: "isSentByAI",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, llmAnalysisMetadataId: {
                    name: "llmAnalysisMetadataId",
                    type: "String",
                    isOptional: true,
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, parentCampaignId: {
                    name: "parentCampaignId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentCampaign',
                }, parentCampaign: {
                    name: "parentCampaign",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentCampaignId" },
                }, status: {
                    name: "status",
                    type: "MessageStatus",
                    isOptional: true,
                }, scheduledTime: {
                    name: "scheduledTime",
                    type: "DateTime",
                    isOptional: true,
                }, generatedLinks: {
                    name: "generatedLinks",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'message',
                }, quizAnswer: {
                    name: "quizAnswer",
                    type: "QuizAnswer",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, journeyResponseId: {
                    name: "journeyResponseId",
                    type: "String",
                    isOptional: true,
                }, journeyResponse: {
                    name: "journeyResponse",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, parentJourneyId: {
                    name: "parentJourneyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentJourney',
                }, parentJourney: {
                    name: "parentJourney",
                    type: "Journey",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messagesSent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentJourneyId" },
                }, parentActionBlockId: {
                    name: "parentActionBlockId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'parentActionBlock',
                }, parentActionBlock: {
                    name: "parentActionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messagesSent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "parentActionBlockId" },
                }, workspaceSenderId: {
                    name: "workspaceSenderId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceSender',
                }, workspaceSender: {
                    name: "workspaceSender",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentMessages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceSenderId" },
                }, isMarkedAsSpam: {
                    name: "isMarkedAsSpam",
                    type: "Boolean",
                    isOptional: true,
                }, moderatedItemId: {
                    name: "moderatedItemId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'moderatedItem',
                }, moderatedItem: {
                    name: "moderatedItem",
                    type: "ModeratedItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'flaggedMessages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "moderatedItemId" },
                }, journeysTrigger: {
                    name: "journeysTrigger",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'delayedMessage',
                }, journeysTriggerV2: {
                    name: "journeysTriggerV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'delayedMessage',
                }, delayedJourneySession: {
                    name: "delayedJourneySession",
                    type: "JourneySession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedMessage',
                }, delayedJourneySessionV2: {
                    name: "delayedJourneySessionV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedMessage',
                }, clusterPendingItem: {
                    name: "clusterPendingItem",
                    type: "InsightClusterPendingItem",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, publishOperations: {
                    name: "publishOperations",
                    type: "Json",
                    isOptional: true,
                }, quickReplies: {
                    name: "quickReplies",
                    type: "String",
                    isArray: true,
                }, messageGroupId: {
                    name: "messageGroupId",
                    type: "String",
                    isOptional: true,
                }, replyCommentId: {
                    name: "replyCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'replyComment',
                }, replyComment: {
                    name: "replyComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'replyMessages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "replyCommentId" },
                }, tiktokCard: {
                    name: "tiktokCard",
                    type: "TikTokCard",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, tiktokCustomerService: {
                    name: "tiktokCustomerService",
                    type: "TikTokCustomerServiceMessage",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'message',
                }, reactions: {
                    name: "reactions",
                    type: "MessageReaction",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'message',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'sentMessage',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, automationPreviews: {
                    name: "automationPreviews",
                    type: "AutomationPreview",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'messages',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, platformMessageId_conversationId: {
                    name: "platformMessageId_conversationId",
                    fields: ["platformMessageId", "conversationId"]
                },
            },
        },
        link: {
            name: 'Link', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'links',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'links',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, name: {
                    name: "name",
                    type: "String",
                    isOptional: true,
                }, type: {
                    name: "type",
                    type: "LinkType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, status: {
                    name: "status",
                    type: "LinkStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, surface: {
                    name: "surface",
                    type: "LinkSurface",
                    attributes: [{ "name": "@default", "args": [] }],
                }, channel: {
                    name: "channel",
                    type: "Platform",
                    attributes: [{ "name": "@default", "args": [] }],
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'generatedLinks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, blastId: {
                    name: "blastId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'blast',
                }, blast: {
                    name: "blast",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'links',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blastId" },
                }, originalUrl: {
                    name: "originalUrl",
                    type: "String",
                    isOptional: true,
                }, url: {
                    name: "url",
                    type: "String",
                }, shortcode: {
                    name: "shortcode",
                    type: "String",
                }, shortioLinkId: {
                    name: "shortioLinkId",
                    type: "String",
                    isOptional: true,
                }, totalClicks: {
                    name: "totalClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, uniqueClicks: {
                    name: "uniqueClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCheckouts: {
                    name: "totalCheckouts",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, revenue: {
                    name: "revenue",
                    type: "Decimal",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, revenueCurrency: {
                    name: "revenueCurrency",
                    type: "CurrencyCode",
                    attributes: [{ "name": "@default", "args": [] }],
                }, totalCartAdds: {
                    name: "totalCartAdds",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCheckoutStarts: {
                    name: "totalCheckoutStarts",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, conversionRate: {
                    name: "conversionRate",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, shopifyResources: {
                    name: "shopifyResources",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'links',
                    isRelationOwner: true,
                }, activities: {
                    name: "activities",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shortLink',
                }, lastAnalyzedTime: {
                    name: "lastAnalyzedTime",
                    type: "DateTime",
                    isOptional: true,
                }, shopifyStats: {
                    name: "shopifyStats",
                    type: "LinkShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'link',
                }, groupedJourneyLink: {
                    name: "groupedJourneyLink",
                    type: "GroupedJourneyLink",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'links',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "groupedJourneyLinkId" },
                }, groupedJourneyLinkId: {
                    name: "groupedJourneyLinkId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'groupedJourneyLink',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'generatedLinks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shortcode_workspaceId: {
                    name: "shortcode_workspaceId",
                    fields: ["shortcode", "workspaceId"]
                },
            },
        },
        groupedJourneyLink: {
            name: 'GroupedJourneyLink', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'groupedStatsLinks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, originalUrl: {
                    name: "originalUrl",
                    type: "String",
                }, totalClicks: {
                    name: "totalClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, uniqueClicks: {
                    name: "uniqueClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCheckouts: {
                    name: "totalCheckouts",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, revenue: {
                    name: "revenue",
                    type: "Decimal",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, revenueCurrency: {
                    name: "revenueCurrency",
                    type: "CurrencyCode",
                    attributes: [{ "name": "@default", "args": [] }],
                }, totalCartAdds: {
                    name: "totalCartAdds",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCheckoutStarts: {
                    name: "totalCheckoutStarts",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, conversionRate: {
                    name: "conversionRate",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, clickthroughRate: {
                    name: "clickthroughRate",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, links: {
                    name: "links",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'groupedJourneyLink',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_originalUrl: {
                    name: "journeyId_originalUrl",
                    fields: ["journeyId", "originalUrl"]
                },
            },
        },
        linkShopifyStatistic: {
            name: 'LinkShopifyStatistic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, resourceId: {
                    name: "resourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'resource',
                }, resource: {
                    name: "resource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'linkStatistics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "resourceId" },
                }, viewCount: {
                    name: "viewCount",
                    type: "Int",
                }, uniqueViewCount: {
                    name: "uniqueViewCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, communityMembers: {
                    name: "communityMembers",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'linkStatistics',
                    isRelationOwner: true,
                }, type: {
                    name: "type",
                    type: "ActivityType",
                }, linkId: {
                    name: "linkId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'link',
                }, link: {
                    name: "link",
                    type: "Link",
                    isDataModel: true,
                    backLink: 'shopifyStats',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "linkId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, linkId_resourceId_type: {
                    name: "linkId_resourceId_type",
                    fields: ["linkId", "resourceId", "type"]
                },
            },
        },
        blastShopifyStatistic: {
            name: 'BlastShopifyStatistic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, resourceId: {
                    name: "resourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'resource',
                }, resource: {
                    name: "resource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'blastStatistics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "resourceId" },
                }, viewCount: {
                    name: "viewCount",
                    type: "Int",
                }, uniqueViewCount: {
                    name: "uniqueViewCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, communityMembers: {
                    name: "communityMembers",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blastStatistics',
                    isRelationOwner: true,
                }, type: {
                    name: "type",
                    type: "ActivityType",
                }, blastId: {
                    name: "blastId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'blast',
                }, blast: {
                    name: "blast",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    backLink: 'shopifyStats',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blastId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, blastId_resourceId_type: {
                    name: "blastId_resourceId_type",
                    fields: ["blastId", "resourceId", "type"]
                },
            },
        },
        journeyShopifyStatistic: {
            name: 'JourneyShopifyStatistic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, resourceId: {
                    name: "resourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'resource',
                }, resource: {
                    name: "resource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'journeyStatistics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "resourceId" },
                }, viewCount: {
                    name: "viewCount",
                    type: "Int",
                }, uniqueViewCount: {
                    name: "uniqueViewCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, communityMembers: {
                    name: "communityMembers",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeyStatistics',
                    isRelationOwner: true,
                }, type: {
                    name: "type",
                    type: "ActivityType",
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'shopifyStatistics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, originalUrl: {
                    name: "originalUrl",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_resourceId_type_originalUrl: {
                    name: "journeyId_resourceId_type_originalUrl",
                    fields: ["journeyId", "resourceId", "type", "originalUrl"]
                },
            },
        },
        persona: {
            name: 'Persona', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'persona',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, avatar: {
                    name: "avatar",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                }, useEmoji: {
                    name: "useEmoji",
                    type: "Boolean",
                }, status: {
                    name: "status",
                    type: "Status",
                }, messageLength: {
                    name: "messageLength",
                    type: "PersonaMessageLength",
                }, responseTime: {
                    name: "responseTime",
                    type: "PersonaResponseTime",
                }, responseExamples: {
                    name: "responseExamples",
                    type: "String",
                    isArray: true,
                }, channels: {
                    name: "channels",
                    type: "Platform",
                    isArray: true,
                }, blacklistedEmojis: {
                    name: "blacklistedEmojis",
                    type: "String",
                    isArray: true,
                }, whitelistedEmojis: {
                    name: "whitelistedEmojis",
                    type: "String",
                    isArray: true,
                }, traits: {
                    name: "traits",
                    type: "PersonaTrait",
                    isArray: true,
                }, enableAllIntents: {
                    name: "enableAllIntents",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, enabledIntents: {
                    name: "enabledIntents",
                    type: "Intent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'personas',
                    isRelationOwner: true,
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    isRelationOwner: true,
                }, greetingMessage: {
                    name: "greetingMessage",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "Hello! How can I help you today?" }] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        aiPersona: {
            name: 'AiPersona', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'aiPersona',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, avatar: {
                    name: "avatar",
                    type: "String",
                }, name: {
                    name: "name",
                    type: "String",
                }, brandSummary: {
                    name: "brandSummary",
                    type: "String",
                }, gender: {
                    name: "gender",
                    type: "Gender",
                    attributes: [{ "name": "@default", "args": [] }],
                }, age: {
                    name: "age",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 30 }] }],
                }, cityLocation: {
                    name: "cityLocation",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "New York" }] }],
                }, description: {
                    name: "description",
                    type: "String",
                }, toneOfVoice: {
                    name: "toneOfVoice",
                    type: "PersonaTone",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'persona',
                }, responseExamples: {
                    name: "responseExamples",
                    type: "Json",
                    isArray: true,
                }, whitelistedEmojis: {
                    name: "whitelistedEmojis",
                    type: "String",
                    isArray: true,
                }, maxAllowedEmojiCount: {
                    name: "maxAllowedEmojiCount",
                    type: "EmojiCount",
                }, blockedContent: {
                    name: "blockedContent",
                    type: "String",
                    isArray: true,
                }, channelInstructions: {
                    name: "channelInstructions",
                    type: "PersonaChannelInstruction",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'persona',
                }, channelSetting: {
                    name: "channelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'aiPersona',
                }, conversationEvents: {
                    name: "conversationEvents",
                    type: "ConversationEventActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'aiPersona',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        personaTone: {
            name: 'PersonaTone', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, personaId: {
                    name: "personaId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'persona',
                }, persona: {
                    name: "persona",
                    type: "AiPersona",
                    isDataModel: true,
                    backLink: 'toneOfVoice',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "personaId" },
                }, channelType: {
                    name: "channelType",
                    type: "PersonaItemChannel",
                }, toneType: {
                    name: "toneType",
                    type: "PersonaToneType",
                }, toneLevel: {
                    name: "toneLevel",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 50 }] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, personaId_channelType_toneType: {
                    name: "personaId_channelType_toneType",
                    fields: ["personaId", "channelType", "toneType"]
                },
            },
        },
        personaChannelInstruction: {
            name: 'PersonaChannelInstruction', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, personaId: {
                    name: "personaId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'persona',
                }, persona: {
                    name: "persona",
                    type: "AiPersona",
                    isDataModel: true,
                    backLink: 'channelInstructions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "personaId" },
                }, channelType: {
                    name: "channelType",
                    type: "PersonaItemChannel",
                }, instruction: {
                    name: "instruction",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, personaId_channelType: {
                    name: "personaId_channelType",
                    fields: ["personaId", "channelType"]
                },
            },
        },
        intentCategory: {
            name: 'IntentCategory', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'intentCategory',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, icon: {
                    name: "icon",
                    type: "String",
                    isOptional: true,
                }, intents: {
                    name: "intents",
                    type: "Intent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'categories',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, title_workspaceId: {
                    name: "title_workspaceId",
                    fields: ["title", "workspaceId"]
                },
            },
        },
        suggestedIntent: {
            name: 'SuggestedIntent', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'suggestedIntents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, icon: {
                    name: "icon",
                    type: "String",
                    isOptional: true,
                }, examples: {
                    name: "examples",
                    type: "String",
                    isArray: true,
                }, exampleWithEmbedding: {
                    name: "exampleWithEmbedding",
                    type: "SuggestedIntentExample",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'suggestion',
                }, response: {
                    name: "response",
                    type: "Json",
                }, categories: {
                    name: "categories",
                    type: "String",
                    isArray: true,
                }, status: {
                    name: "status",
                    type: "SuggestedIntentStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, title_workspaceId: {
                    name: "title_workspaceId",
                    fields: ["title", "workspaceId"]
                },
            },
        },
        suggestedIntentExample: {
            name: 'SuggestedIntentExample', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, body: {
                    name: "body",
                    type: "String",
                }, suggestionId: {
                    name: "suggestionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'suggestion',
                }, suggestion: {
                    name: "suggestion",
                    type: "SuggestedIntent",
                    isDataModel: true,
                    backLink: 'exampleWithEmbedding',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "suggestionId" },
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        intent: {
            name: 'Intent', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'intents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, examples: {
                    name: "examples",
                    type: "String",
                    isArray: true,
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                    isArray: true,
                }, status: {
                    name: "status",
                    type: "Status",
                    attributes: [{ "name": "@default", "args": [] }],
                }, responseJourneyId: {
                    name: "responseJourneyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'responseJourney',
                }, responseJourney: {
                    name: "responseJourney",
                    type: "ResponseJourney",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'intent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "responseJourneyId" },
                }, additionalConditions: {
                    name: "additionalConditions",
                    type: "Json",
                    isOptional: true,
                }, actionBlocks: {
                    name: "actionBlocks",
                    type: "ActionBlock",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intent',
                }, simpleResponse: {
                    name: "simpleResponse",
                    type: "Json",
                    isOptional: true,
                }, cannedResponses: {
                    name: "cannedResponses",
                    type: "String",
                    isArray: true,
                }, shadowResource: {
                    name: "shadowResource",
                    type: "IntentShadowResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'intent',
                }, personas: {
                    name: "personas",
                    type: "Persona",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'enabledIntents',
                    isRelationOwner: true,
                }, personaChannelSetting: {
                    name: "personaChannelSetting",
                    type: "PersonaChannelSetting",
                    isDataModel: true,
                    isArray: true,
                    isRelationOwner: true,
                }, personaEnabledTopics: {
                    name: "personaEnabledTopics",
                    type: "PersonaChannelEnabledTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'topic',
                }, categories: {
                    name: "categories",
                    type: "IntentCategory",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intents',
                    isRelationOwner: true,
                }, linkedMessages: {
                    name: "linkedMessages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'detectedIntents',
                    isRelationOwner: true,
                }, linkedConversations: {
                    name: "linkedConversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'historicalIntents',
                    isRelationOwner: true,
                }, capturedIntents: {
                    name: "capturedIntents",
                    type: "CapturedIntent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intent',
                }, autopilotDraftState: {
                    name: "autopilotDraftState",
                    type: "AutopilotDraftState",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intent',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intent',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, responseJourneyId: {
                    name: "responseJourneyId",
                    fields: ["responseJourneyId"]
                }, title_workspaceId: {
                    name: "title_workspaceId",
                    fields: ["title", "workspaceId"]
                },
            },
        },
        defaultIntent: {
            name: 'DefaultIntent', fields: {
                id: {
                    name: "id",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, examples: {
                    name: "examples",
                    type: "String",
                    isArray: true,
                }, embedding: {
                    name: "embedding",
                    type: "undefined",
                    isArray: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        knowledgeBase: {
            name: 'KnowledgeBase', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, documents: {
                    name: "documents",
                    type: "DocumentResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentKnowledgeBase',
                }, shopifyItems: {
                    name: "shopifyItems",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentKnowledgeBase',
                }, intentShadowResources: {
                    name: "intentShadowResources",
                    type: "IntentShadowResource",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentKnowledgeBase',
                }, customProducts: {
                    name: "customProducts",
                    type: "CustomProduct",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentKnowledgeBase',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'knowledgeBase',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, embedding: {
                    name: "embedding",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'knowledgeBase',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId: {
                    name: "workspaceId",
                    fields: ["workspaceId"]
                },
            },
        },
        intentShadowResource: {
            name: 'IntentShadowResource', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "KnowledgeResourceType",
                }, status: {
                    name: "status",
                    type: "UploadStatus",
                }, customNotes: {
                    name: "customNotes",
                    type: "String",
                    isArray: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'intentShadowResource',
                }, parentKnowledgeBase: {
                    name: "parentKnowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    backLink: 'intentShadowResources',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "knowledgeBaseId" },
                }, knowledgeBaseId: {
                    name: "knowledgeBaseId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'parentKnowledgeBase',
                }, intentId: {
                    name: "intentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'intent',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    backLink: 'shadowResource',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, intentId: {
                    name: "intentId",
                    fields: ["intentId"]
                },
            },
        },
        productImage: {
            name: 'ProductImage', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productImages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, tiktokProductId: {
                    name: "tiktokProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokProduct',
                }, tiktokProduct: {
                    name: "tiktokProduct",
                    type: "TikTokProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productImages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokProductId" },
                }, customProductId: {
                    name: "customProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'customProduct',
                }, customProduct: {
                    name: "customProduct",
                    type: "CustomProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productImages',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customProductId" },
                }, url: {
                    name: "url",
                    type: "String",
                }, width: {
                    name: "width",
                    type: "Int",
                }, height: {
                    name: "height",
                    type: "Int",
                }, altText: {
                    name: "altText",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, tiktokProductId_url: {
                    name: "tiktokProductId_url",
                    fields: ["tiktokProductId", "url"]
                }, shopifyResourceId_url: {
                    name: "shopifyResourceId_url",
                    fields: ["shopifyResourceId", "url"]
                }, customProductId_url: {
                    name: "customProductId_url",
                    fields: ["customProductId", "url"]
                },
            },
        },
        customProduct: {
            name: 'CustomProduct', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "KnowledgeResourceType",
                }, status: {
                    name: "status",
                    type: "UploadStatus",
                }, customNotes: {
                    name: "customNotes",
                    type: "String",
                    isArray: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customProduct',
                }, parentKnowledgeBase: {
                    name: "parentKnowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    backLink: 'customProducts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "knowledgeBaseId" },
                }, knowledgeBaseId: {
                    name: "knowledgeBaseId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'parentKnowledgeBase',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'customProducts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, description: {
                    name: "description",
                    type: "String",
                }, url: {
                    name: "url",
                    type: "String",
                    isOptional: true,
                }, productImages: {
                    name: "productImages",
                    type: "ProductImage",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'customProduct',
                }, productTracking: {
                    name: "productTracking",
                    type: "ProductTracking",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'customProduct',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_id: {
                    name: "workspaceId_id",
                    fields: ["workspaceId", "id"]
                },
            },
        },
        productTracking: {
            name: 'ProductTracking', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productTracking',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, tiktokProductId: {
                    name: "tiktokProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokProduct',
                }, tiktokProduct: {
                    name: "tiktokProduct",
                    type: "TikTokProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productTracking',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokProductId" },
                }, customProductId: {
                    name: "customProductId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'customProduct',
                }, customProduct: {
                    name: "customProduct",
                    type: "CustomProduct",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'productTracking',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customProductId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'productTrackings',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    fields: ["shopifyResourceId"]
                }, tiktokProductId: {
                    name: "tiktokProductId",
                    fields: ["tiktokProductId"]
                }, customProductId: {
                    name: "customProductId",
                    fields: ["customProductId"]
                }, workspaceId_shopifyResourceId: {
                    name: "workspaceId_shopifyResourceId",
                    fields: ["workspaceId", "shopifyResourceId"]
                }, workspaceId_tiktokProductId: {
                    name: "workspaceId_tiktokProductId",
                    fields: ["workspaceId", "tiktokProductId"]
                }, workspaceId_customProductId: {
                    name: "workspaceId_customProductId",
                    fields: ["workspaceId", "customProductId"]
                },
            },
        },
        shopifyResource: {
            name: 'ShopifyResource', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "KnowledgeResourceType",
                }, status: {
                    name: "status",
                    type: "UploadStatus",
                }, customNotes: {
                    name: "customNotes",
                    type: "String",
                    isArray: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, parentKnowledgeBase: {
                    name: "parentKnowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    backLink: 'shopifyItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "knowledgeBaseId" },
                }, knowledgeBaseId: {
                    name: "knowledgeBaseId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'parentKnowledgeBase',
                }, storeId: {
                    name: "storeId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'store',
                }, store: {
                    name: "store",
                    type: "ShopifyAccount",
                    isDataModel: true,
                    backLink: 'shopifyResource',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "storeId" },
                }, resourceId: {
                    name: "resourceId",
                    type: "String",
                }, resourceUrl: {
                    name: "resourceUrl",
                    type: "String",
                }, recommendationUrl: {
                    name: "recommendationUrl",
                    type: "String",
                    isOptional: true,
                }, extractedMetadata: {
                    name: "extractedMetadata",
                    type: "Json",
                }, overrideTitle: {
                    name: "overrideTitle",
                    type: "String",
                    isOptional: true,
                }, pictureUri: {
                    name: "pictureUri",
                    type: "String",
                    isOptional: true,
                }, minVariantPrice: {
                    name: "minVariantPrice",
                    type: "String",
                    isOptional: true,
                }, maxVariantPrice: {
                    name: "maxVariantPrice",
                    type: "String",
                    isOptional: true,
                }, price: {
                    name: "price",
                    type: "String",
                    isOptional: true,
                }, productDescription: {
                    name: "productDescription",
                    type: "String",
                    isOptional: true,
                }, links: {
                    name: "links",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResources',
                    isRelationOwner: true,
                }, linkedActivity: {
                    name: "linkedActivity",
                    type: "RecentActivity",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'linkedShopifyResources',
                    isRelationOwner: true,
                }, productVariant: {
                    name: "productVariant",
                    type: "ShopifyProductVariant",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, linkStatistics: {
                    name: "linkStatistics",
                    type: "LinkShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'resource',
                }, blastStatistics: {
                    name: "blastStatistics",
                    type: "BlastShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'resource',
                }, journeyStatistics: {
                    name: "journeyStatistics",
                    type: "JourneyShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'resource',
                }, identifiedProductContent: {
                    name: "identifiedProductContent",
                    type: "IdentifiedProductContent",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, shopifyMetafields: {
                    name: "shopifyMetafields",
                    type: "ShopifyMetafield",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, discounts: {
                    name: "discounts",
                    type: "ShopifyDiscount",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'discountResources',
                    isRelationOwner: true,
                }, keywords: {
                    name: "keywords",
                    type: "Keyword",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'products',
                    isRelationOwner: true,
                }, savedTemplates: {
                    name: "savedTemplates",
                    type: "CardTemplate",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, productMentions: {
                    name: "productMentions",
                    type: "ProductMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, productImages: {
                    name: "productImages",
                    type: "ProductImage",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyResource',
                }, isCollection: {
                    name: "isCollection",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, productTracking: {
                    name: "productTracking",
                    type: "ProductTracking",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'shopifyResource',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, storeId_resourceId: {
                    name: "storeId_resourceId",
                    fields: ["storeId", "resourceId"]
                },
            },
        },
        shopifyMetafield: {
            name: 'ShopifyMetafield', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, key: {
                    name: "key",
                    type: "String",
                }, value: {
                    name: "value",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, metafieldId: {
                    name: "metafieldId",
                    type: "String",
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'shopifyMetafields',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, embedding: {
                    name: "embedding",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'shopifyMetafield',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, shopifyResourceId_metafieldId: {
                    name: "shopifyResourceId_metafieldId",
                    fields: ["shopifyResourceId", "metafieldId"]
                },
            },
        },
        shopifyProductVariant: {
            name: 'ShopifyProductVariant', fields: {
                title: {
                    name: "title",
                    type: "String",
                }, price: {
                    name: "price",
                    type: "String",
                }, shopifyResourceId: {
                    name: "shopifyResourceId",
                    type: "String",
                    isId: true,
                    isForeignKey: true,
                    relationField: 'shopifyResource',
                }, shopifyResource: {
                    name: "shopifyResource",
                    type: "ShopifyResource",
                    isDataModel: true,
                    backLink: 'productVariant',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "shopifyResourceId" },
                }, variantId: {
                    name: "variantId",
                    type: "String",
                    isId: true,
                }, inventoryQuantity: {
                    name: "inventoryQuantity",
                    type: "Int",
                },
            }, uniqueConstraints: {
                shopifyResourceId_variantId: {
                    name: "shopifyResourceId_variantId",
                    fields: ["shopifyResourceId", "variantId"]
                },
            },
        },
        documentResource: {
            name: 'DocumentResource', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, type: {
                    name: "type",
                    type: "KnowledgeResourceType",
                }, status: {
                    name: "status",
                    type: "UploadStatus",
                }, customNotes: {
                    name: "customNotes",
                    type: "String",
                    isArray: true,
                }, embeddings: {
                    name: "embeddings",
                    type: "Embedding",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'documentResource',
                }, parentKnowledgeBase: {
                    name: "parentKnowledgeBase",
                    type: "KnowledgeBase",
                    isDataModel: true,
                    backLink: 'documents',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "knowledgeBaseId" },
                }, knowledgeBaseId: {
                    name: "knowledgeBaseId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'parentKnowledgeBase',
                }, resourceUrl: {
                    name: "resourceUrl",
                    type: "String",
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        messageBlastCampaign: {
            name: 'MessageBlastCampaign', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, latestUpdatedById: {
                    name: "latestUpdatedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'latestUpdatedBy',
                }, latestUpdatedBy: {
                    name: "latestUpdatedBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'messageBlastCampaigns',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "latestUpdatedById" },
                }, latestUpdatedByTimestamp: {
                    name: "latestUpdatedByTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, type: {
                    name: "type",
                    type: "BlastCampaignType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    backLink: 'messageBlastCampaign',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, status: {
                    name: "status",
                    type: "BlastCampaignStatus",
                }, sendTime: {
                    name: "sendTime",
                    type: "DateTime",
                }, targetAudience: {
                    name: "targetAudience",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blasts',
                    isRelationOwner: true,
                }, messages: {
                    name: "messages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentCampaign',
                }, links: {
                    name: "links",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blast',
                }, shopifyStats: {
                    name: "shopifyStats",
                    type: "BlastShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blast',
                }, messagesOpened: {
                    name: "messagesOpened",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, messagesReplied: {
                    name: "messagesReplied",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, clickthroughRate: {
                    name: "clickthroughRate",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, conversionRate: {
                    name: "conversionRate",
                    type: "Float",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCartAdds: {
                    name: "totalCartAdds",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalCheckoutStarts: {
                    name: "totalCheckoutStarts",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalOrders: {
                    name: "totalOrders",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, totalClicks: {
                    name: "totalClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, uniqueClicks: {
                    name: "uniqueClicks",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, revenue: {
                    name: "revenue",
                    type: "Decimal",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, blastContent: {
                    name: "blastContent",
                    type: "Json",
                    isOptional: true,
                }, blastAudienceMembers: {
                    name: "blastAudienceMembers",
                    type: "BlastAudienceMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'blastCampaign',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        blastAudienceMember: {
            name: 'BlastAudienceMember', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, messageStatus: {
                    name: "messageStatus",
                    type: "BlastAudienceMemberMessageStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, blastCampaignId: {
                    name: "blastCampaignId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'blastCampaign',
                }, blastCampaign: {
                    name: "blastCampaign",
                    type: "MessageBlastCampaign",
                    isDataModel: true,
                    backLink: 'blastAudienceMembers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blastCampaignId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'blastAudienceMembers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        blastTemplate: {
            name: 'BlastTemplate', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, content: {
                    name: "content",
                    type: "Json",
                }, categoryId: {
                    name: "categoryId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'category',
                }, category: {
                    name: "category",
                    type: "BlastTemplateCategory",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'templates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "categoryId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'blastTemplates',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        blastTemplateCategory: {
            name: 'BlastTemplateCategory', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'blastTemplateCategories',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, templates: {
                    name: "templates",
                    type: "BlastTemplate",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'category',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        moderatedItem: {
            name: 'ModeratedItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "ModeratedItemType",
                }, visibility: {
                    name: "visibility",
                    type: "ModeratedItemVisibility",
                }, isHidden: {
                    name: "isHidden",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, timestamp: {
                    name: "timestamp",
                    type: "DateTime",
                }, isCreatedManually: {
                    name: "isCreatedManually",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'moderatedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'moderatedItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, limitedCommunityMemberId: {
                    name: "limitedCommunityMemberId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'limitedCommunityMember',
                }, limitedCommunityMember: {
                    name: "limitedCommunityMember",
                    type: "LimitedCommunityMember",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'moderatedItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "limitedCommunityMemberId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'moderatedItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'moderatedItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, flaggedMessages: {
                    name: "flaggedMessages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'moderatedItem',
                }, matchedFlags: {
                    name: "matchedFlags",
                    type: "ModerationFlagType",
                    isArray: true,
                }, matchedKeywords: {
                    name: "matchedKeywords",
                    type: "String",
                    isArray: true,
                }, matchedIntents: {
                    name: "matchedIntents",
                    type: "String",
                    isArray: true,
                }, metadata: {
                    name: "metadata",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, conversationId: {
                    name: "conversationId",
                    fields: ["conversationId"]
                },
            },
        },
        moderationFlagConfig: {
            name: 'ModerationFlagConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, type: {
                    name: "type",
                    type: "ModerationFlagType",
                }, isAutomated: {
                    name: "isAutomated",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, moderationRule: {
                    name: "moderationRule",
                    type: "ModerationRule",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'flagConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "moderationRuleId" },
                }, moderationRuleId: {
                    name: "moderationRuleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'moderationRule',
                }, instagramModerationConfig: {
                    name: "instagramModerationConfig",
                    type: "InstagramModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'flagConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramModerationConfigId" },
                }, instagramModerationConfigId: {
                    name: "instagramModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramModerationConfig',
                }, facebookModerationConfig: {
                    name: "facebookModerationConfig",
                    type: "FacebookModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'flagConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookModerationConfigId" },
                }, facebookModerationConfigId: {
                    name: "facebookModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookModerationConfig',
                }, tiktokModerationConfig: {
                    name: "tiktokModerationConfig",
                    type: "TiktokModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'flagConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokModerationConfigId" },
                }, tiktokModerationConfigId: {
                    name: "tiktokModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokModerationConfig',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, type_instagramModerationConfigId: {
                    name: "type_instagramModerationConfigId",
                    fields: ["type", "instagramModerationConfigId"]
                }, type_facebookModerationConfigId: {
                    name: "type_facebookModerationConfigId",
                    fields: ["type", "facebookModerationConfigId"]
                }, type_tiktokModerationConfigId: {
                    name: "type_tiktokModerationConfigId",
                    fields: ["type", "tiktokModerationConfigId"]
                }, type_moderationRuleId: {
                    name: "type_moderationRuleId",
                    fields: ["type", "moderationRuleId"]
                },
            },
        },
        moderationIntentConfig: {
            name: 'ModerationIntentConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, intent: {
                    name: "intent",
                    type: "String",
                }, titleId: {
                    name: "titleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'title',
                }, title: {
                    name: "title",
                    type: "Label",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'moderationIntentConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "titleId" },
                }, isAutomated: {
                    name: "isAutomated",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, moderationRuleId: {
                    name: "moderationRuleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'moderationRule',
                }, moderationRule: {
                    name: "moderationRule",
                    type: "ModerationRule",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'intentConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "moderationRuleId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, intent_moderationRuleId: {
                    name: "intent_moderationRuleId",
                    fields: ["intent", "moderationRuleId"]
                },
            },
        },
        moderationKeywordsConfig: {
            name: 'ModerationKeywordsConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, isAutomated: {
                    name: "isAutomated",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, moderationRuleId: {
                    name: "moderationRuleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'moderationRule',
                }, moderationRule: {
                    name: "moderationRule",
                    type: "ModerationRule",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'keywordConfigs',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "moderationRuleId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, keywords_moderationRuleId: {
                    name: "keywords_moderationRuleId",
                    fields: ["keywords", "moderationRuleId"]
                },
            },
        },
        moderationRule: {
            name: 'ModerationRule', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, surface: {
                    name: "surface",
                    type: "ModerationRuleSurface",
                }, isKeywordsPreferenceActive: {
                    name: "isKeywordsPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, keywordConfigs: {
                    name: "keywordConfigs",
                    type: "ModerationKeywordsConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'moderationRule',
                }, isIntentDetectionPreferenceActive: {
                    name: "isIntentDetectionPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, intents: {
                    name: "intents",
                    type: "String",
                    isArray: true,
                }, flagConfigs: {
                    name: "flagConfigs",
                    type: "ModerationFlagConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'moderationRule',
                }, intentConfigs: {
                    name: "intentConfigs",
                    type: "ModerationIntentConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'moderationRule',
                }, instagramModerationConfig: {
                    name: "instagramModerationConfig",
                    type: "InstagramModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'rules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramModerationConfigId" },
                }, instagramModerationConfigId: {
                    name: "instagramModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramModerationConfig',
                }, facebookModerationConfig: {
                    name: "facebookModerationConfig",
                    type: "FacebookModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'rules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookModerationConfigId" },
                }, facebookModerationConfigId: {
                    name: "facebookModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookModerationConfig',
                }, tiktokModerationConfig: {
                    name: "tiktokModerationConfig",
                    type: "TiktokModerationConfig",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'rules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokModerationConfigId" },
                }, tiktokModerationConfigId: {
                    name: "tiktokModerationConfigId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'tiktokModerationConfig',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, surface_instagramModerationConfigId: {
                    name: "surface_instagramModerationConfigId",
                    fields: ["surface", "instagramModerationConfigId"]
                }, surface_facebookModerationConfigId: {
                    name: "surface_facebookModerationConfigId",
                    fields: ["surface", "facebookModerationConfigId"]
                }, surface_tiktokModerationConfigId: {
                    name: "surface_tiktokModerationConfigId",
                    fields: ["surface", "tiktokModerationConfigId"]
                },
            },
        },
        instagramModerationConfig: {
            name: 'InstagramModerationConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isKeywordsPreferenceActive: {
                    name: "isKeywordsPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, isAIBasedIntentDetectionPreferenceActive: {
                    name: "isAIBasedIntentDetectionPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, intents: {
                    name: "intents",
                    type: "String",
                    isArray: true,
                }, flagConfigs: {
                    name: "flagConfigs",
                    type: "ModerationFlagConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramModerationConfig',
                }, rules: {
                    name: "rules",
                    type: "ModerationRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramModerationConfig',
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    backLink: 'instagramModerationConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    fields: ["instagramAccountId"]
                },
            },
        },
        facebookModerationConfig: {
            name: 'FacebookModerationConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isKeywordsPreferenceActive: {
                    name: "isKeywordsPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, isAIBasedIntentDetectionPreferenceActive: {
                    name: "isAIBasedIntentDetectionPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, intents: {
                    name: "intents",
                    type: "String",
                    isArray: true,
                }, flagConfigs: {
                    name: "flagConfigs",
                    type: "ModerationFlagConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookModerationConfig',
                }, rules: {
                    name: "rules",
                    type: "ModerationRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookModerationConfig',
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    backLink: 'facebookModerationConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    fields: ["facebookPageAccountId"]
                },
            },
        },
        tiktokModerationConfig: {
            name: 'TiktokModerationConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isEnabled: {
                    name: "isEnabled",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, isKeywordsPreferenceActive: {
                    name: "isKeywordsPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, keywords: {
                    name: "keywords",
                    type: "String",
                    isArray: true,
                }, isAIBasedIntentDetectionPreferenceActive: {
                    name: "isAIBasedIntentDetectionPreferenceActive",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, intents: {
                    name: "intents",
                    type: "String",
                    isArray: true,
                }, flagConfigs: {
                    name: "flagConfigs",
                    type: "ModerationFlagConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokModerationConfig',
                }, rules: {
                    name: "rules",
                    type: "ModerationRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'tiktokModerationConfig',
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'tiktokAccount',
                }, tiktokAccount: {
                    name: "tiktokAccount",
                    type: "TikTokAccount",
                    isDataModel: true,
                    backLink: 'tiktokModerationConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "tiktokAccountId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, tiktokAccountId: {
                    name: "tiktokAccountId",
                    fields: ["tiktokAccountId"]
                },
            },
        },
        workingHours: {
            name: 'WorkingHours', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'workingHours',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, timeZone: {
                    name: "timeZone",
                    type: "String",
                }, businessHoursConfig: {
                    name: "businessHoursConfig",
                    type: "BusinessHoursConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'workingHours',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId: {
                    name: "workspaceId",
                    fields: ["workspaceId"]
                },
            },
        },
        businessHoursConfig: {
            name: 'BusinessHoursConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, day: {
                    name: "day",
                    type: "Day",
                }, timeRanges: {
                    name: "timeRanges",
                    type: "Json",
                    isArray: true,
                }, isOffline: {
                    name: "isOffline",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, workingHours: {
                    name: "workingHours",
                    type: "WorkingHours",
                    isDataModel: true,
                    backLink: 'businessHoursConfig',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workingHoursId" },
                }, workingHoursId: {
                    name: "workingHoursId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workingHours',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, day_workingHoursId: {
                    name: "day_workingHoursId",
                    fields: ["day", "workingHoursId"]
                },
            },
        },
        responseJourney: {
            name: 'ResponseJourney', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, title: {
                    name: "title",
                    type: "String",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'responseJourney',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, actionBlocks: {
                    name: "actionBlocks",
                    type: "ActionBlock",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'responseJourney',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'responseJourney',
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        automationMetadata: {
            name: 'AutomationMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, mode: {
                    name: "mode",
                    type: "AutomationMode",
                }, status: {
                    name: "status",
                    type: "AutomationResponseStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, generatedTimestamp: {
                    name: "generatedTimestamp",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, originalText: {
                    name: "originalText",
                    type: "String",
                }, editedText: {
                    name: "editedText",
                    type: "String",
                    isOptional: true,
                }, isEdited: {
                    name: "isEdited",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, inputContext: {
                    name: "inputContext",
                    type: "Json",
                    isOptional: true,
                }, intentId: {
                    name: "intentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'intent',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentId" },
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, aiGeneratedMessageId: {
                    name: "aiGeneratedMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'aiGeneratedMessage',
                }, aiGeneratedMessage: {
                    name: "aiGeneratedMessage",
                    type: "AIGeneratedMessage",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "aiGeneratedMessageId" },
                }, sentMessageId: {
                    name: "sentMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'sentMessage',
                }, sentMessage: {
                    name: "sentMessage",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "sentMessageId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, workspaceUserId: {
                    name: "workspaceUserId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspaceUser',
                }, workspaceUser: {
                    name: "workspaceUser",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceUserId" },
                }, copilotGeneratedResponse: {
                    name: "copilotGeneratedResponse",
                    type: "CopilotGeneratedResponse",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'automationMetadata',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, aiGeneratedMessageId: {
                    name: "aiGeneratedMessageId",
                    fields: ["aiGeneratedMessageId"]
                }, sentMessageId: {
                    name: "sentMessageId",
                    fields: ["sentMessageId"]
                },
            },
        },
        copilotGeneratedResponseSession: {
            name: 'CopilotGeneratedResponseSession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "CopilotSessionStatus",
                }, copilotGeneratedResponse: {
                    name: "copilotGeneratedResponse",
                    type: "CopilotGeneratedResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'session',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        copilotGeneratedResponse: {
            name: 'CopilotGeneratedResponse', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, session: {
                    name: "session",
                    type: "CopilotGeneratedResponseSession",
                    isDataModel: true,
                    backLink: 'copilotGeneratedResponse',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "sessionId" },
                }, sessionId: {
                    name: "sessionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'session',
                }, targetedItemId: {
                    name: "targetedItemId",
                    type: "String",
                }, targetItemType: {
                    name: "targetItemType",
                    type: "CopilotResponseTarget",
                }, targetedCommentId: {
                    name: "targetedCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'targetedComment',
                }, targetedComment: {
                    name: "targetedComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'copilotGeneratedResponse',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "targetedCommentId" },
                }, targetedConversationId: {
                    name: "targetedConversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'targetedConversation',
                }, targetedConversation: {
                    name: "targetedConversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'copilotGeneratedResponses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "targetedConversationId" },
                }, automationMetadataId: {
                    name: "automationMetadataId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'automationMetadata',
                }, automationMetadata: {
                    name: "automationMetadata",
                    type: "AutomationMetadata",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'copilotGeneratedResponse',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "automationMetadataId" },
                }, generatedReply: {
                    name: "generatedReply",
                    type: "String",
                    isOptional: true,
                }, finalReply: {
                    name: "finalReply",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "CopilotResponseStatus",
                }, shouldReply: {
                    name: "shouldReply",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": true }] }],
                }, deliveryMethod: {
                    name: "deliveryMethod",
                    type: "CopilotResponseDeliveryMethod",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, automationMetadataId: {
                    name: "automationMetadataId",
                    fields: ["automationMetadataId"]
                },
            },
        },
        autopilotDraftState: {
            name: 'AutopilotDraftState', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, draftedTimestamp: {
                    name: "draftedTimestamp",
                    type: "DateTime",
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'autopilotDraftState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "AIGeneratedMessage",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'autopilotDraftState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, originalMessage: {
                    name: "originalMessage",
                    type: "String",
                }, editedMessage: {
                    name: "editedMessage",
                    type: "String",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "AutopilotDraftStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, intentId: {
                    name: "intentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'intent',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'autopilotDraftState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'autopilotDraftState',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                },
            },
        },
        unknownIntentComment: {
            name: 'UnknownIntentComment', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    backLink: 'unknownIntent',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                },
            },
        },
        insightClusterPendingItem: {
            name: 'InsightClusterPendingItem', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'insightClusterPendingItems',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'clusterPendingItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'clusterPendingItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'clusterPendingItem',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, status: {
                    name: "status",
                    type: "ClusteringStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                },
            },
        },
        insightCategory: {
            name: 'InsightCategory', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'insightCategory',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, insights: {
                    name: "insights",
                    type: "Insight",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'category',
                }, groups: {
                    name: "groups",
                    type: "InsightGroup",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'category',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_title: {
                    name: "workspaceId_title",
                    fields: ["workspaceId", "title"]
                },
            },
        },
        insightGroup: {
            name: 'InsightGroup', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, lastItemAddedAt: {
                    name: "lastItemAddedAt",
                    type: "DateTime",
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'insightGroup',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'insightGroup',
                }, categoryId: {
                    name: "categoryId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'category',
                }, category: {
                    name: "category",
                    type: "InsightCategory",
                    isDataModel: true,
                    backLink: 'groups',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "categoryId" },
                }, bin: {
                    name: "bin",
                    type: "CommunityInsightBin",
                    isOptional: true,
                }, bins: {
                    name: "bins",
                    type: "CommunityInsightBin",
                    isArray: true,
                }, sentiment: {
                    name: "sentiment",
                    type: "Sentiment",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "InsightGroupStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_title: {
                    name: "workspaceId_title",
                    fields: ["workspaceId", "title"]
                },
            },
        },
        trackedTopic: {
            name: 'TrackedTopic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'trackedTopics',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                }, examples: {
                    name: "examples",
                    type: "String",
                    isArray: true,
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'trackedTopics',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_title: {
                    name: "workspaceId_title",
                    fields: ["workspaceId", "title"]
                },
            },
        },
        insight: {
            name: 'Insight', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'insight',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, categoryId: {
                    name: "categoryId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'category',
                }, category: {
                    name: "category",
                    type: "InsightCategory",
                    isDataModel: true,
                    backLink: 'insights',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "categoryId" },
                }, title: {
                    name: "title",
                    type: "String",
                }, conversations: {
                    name: "conversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'insight',
                }, comments: {
                    name: "comments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'insight',
                }, llmAnalysisMetadata: {
                    name: "llmAnalysisMetadata",
                    type: "LLMAnalysisMetadata",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'insight',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, workspaceId_title: {
                    name: "workspaceId_title",
                    fields: ["workspaceId", "title"]
                },
            },
        },
        globalLLMAnalysisMetadata: {
            name: 'GlobalLLMAnalysisMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "GlobalContent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, generatedSummary: {
                    name: "generatedSummary",
                    type: "String",
                    isOptional: true,
                }, sentimentAnalysisId: {
                    name: "sentimentAnalysisId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'sentimentAnalysis',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'globalLLMAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "sentimentAnalysisId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                }, sentimentAnalysisId: {
                    name: "sentimentAnalysisId",
                    fields: ["sentimentAnalysisId"]
                },
            },
        },
        lLMAnalysisMetadata: {
            name: 'LLMAnalysisMetadata', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, insightId: {
                    name: "insightId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'insight',
                }, insight: {
                    name: "insight",
                    type: "Insight",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "insightId" },
                }, insightGroupId: {
                    name: "insightGroupId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'insightGroup',
                }, insightGroup: {
                    name: "insightGroup",
                    type: "InsightGroup",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "insightGroupId" },
                }, sentimentAnalysisId: {
                    name: "sentimentAnalysisId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'sentimentAnalysis',
                }, sentimentAnalysis: {
                    name: "sentimentAnalysis",
                    type: "SentimentAnalysis",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "sentimentAnalysisId" },
                }, generatedSummary: {
                    name: "generatedSummary",
                    type: "String",
                    isOptional: true,
                }, shouldEscalateToHuman: {
                    name: "shouldEscalateToHuman",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, languageLocale: {
                    name: "languageLocale",
                    type: "String",
                    isOptional: true,
                }, isLanguageEnglish: {
                    name: "isLanguageEnglish",
                    type: "Boolean",
                    isOptional: true,
                }, trackedTopics: {
                    name: "trackedTopics",
                    type: "TrackedTopic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'llmAnalysisMetadata',
                    isRelationOwner: true,
                }, mentionedKeywords: {
                    name: "mentionedKeywords",
                    type: "KeywordMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'llmAnalysis',
                }, mentionedProducts: {
                    name: "mentionedProducts",
                    type: "ProductMention",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'llmAnalysis',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                }, contentId: {
                    name: "contentId",
                    fields: ["contentId"]
                }, sentimentAnalysisId: {
                    name: "sentimentAnalysisId",
                    fields: ["sentimentAnalysisId"]
                },
            },
        },
        actionBlockConfig: {
            name: 'ActionBlockConfig', fields: {
                id: {
                    name: "id",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, actionBlockType: {
                    name: "actionBlockType",
                    type: "ActionBlockType",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, actionBlockSettings: {
                    name: "actionBlockSettings",
                    type: "Json",
                }, coreFunctions: {
                    name: "coreFunctions",
                    type: "FunctionConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'actionBlockConfigReference',
                    isRelationOwner: true,
                }, corePrompt: {
                    name: "corePrompt",
                    type: "String",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, actionBlockType: {
                    name: "actionBlockType",
                    fields: ["actionBlockType"]
                },
            },
        },
        functionConfig: {
            name: 'FunctionConfig', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, config: {
                    name: "config",
                    type: "Json",
                }, actionBlockConfigReference: {
                    name: "actionBlockConfigReference",
                    type: "ActionBlockConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'coreFunctions',
                    isRelationOwner: true,
                }, actionBlockReference: {
                    name: "actionBlockReference",
                    type: "ActionBlock",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'functions',
                    isRelationOwner: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        actionBlock: {
            name: 'ActionBlock', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "ActionBlockType",
                }, configValues: {
                    name: "configValues",
                    type: "Json",
                }, functions: {
                    name: "functions",
                    type: "FunctionConfig",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'actionBlockReference',
                    isRelationOwner: true,
                }, prompt: {
                    name: "prompt",
                    type: "String",
                }, journeySessionsLastBlock: {
                    name: "journeySessionsLastBlock",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'lastActionBlock',
                }, journeySessionsLastBlockV2: {
                    name: "journeySessionsLastBlockV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'lastActionBlock',
                }, customResponseSessions: {
                    name: "customResponseSessions",
                    type: "CustomResponseSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'block',
                }, customResponseSessionsV2: {
                    name: "customResponseSessionsV2",
                    type: "CustomResponseSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'block',
                }, followUpSessions: {
                    name: "followUpSessions",
                    type: "JourneyFollowUpSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'block',
                }, responseJourney: {
                    name: "responseJourney",
                    type: "ResponseJourney",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'actionBlocks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "responseJourneyId" },
                }, responseJourneyId: {
                    name: "responseJourneyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'responseJourney',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'actionBlocks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journey',
                }, inboxRule: {
                    name: "inboxRule",
                    type: "InboxRule",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'actionBlocks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleId" },
                }, inboxRuleId: {
                    name: "inboxRuleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRule',
                }, intent: {
                    name: "intent",
                    type: "Intent",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'actionBlocks',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "intentId" },
                }, intentId: {
                    name: "intentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'intent',
                }, delay: {
                    name: "delay",
                    type: "Delay",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'actionBlock',
                }, messagesSent: {
                    name: "messagesSent",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentActionBlock',
                }, journeyResponses: {
                    name: "journeyResponses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'actionBlock',
                }, quizAnswers: {
                    name: "quizAnswers",
                    type: "QuizAnswer",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'actionBlock',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        automationPreviewSession: {
            name: 'AutomationPreviewSession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "AutomationPreviewStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, config: {
                    name: "config",
                    type: "Json",
                }, inboxRules: {
                    name: "inboxRules",
                    type: "InboxRule",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'previewSession',
                }, journeys: {
                    name: "journeys",
                    type: "Journey",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'previewSession',
                }, previews: {
                    name: "previews",
                    type: "AutomationPreview",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'session',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'automationPreviewSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        automationPreview: {
            name: 'AutomationPreview', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "AutomationPreviewStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, sessionId: {
                    name: "sessionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'session',
                }, session: {
                    name: "session",
                    type: "AutomationPreviewSession",
                    isDataModel: true,
                    backLink: 'previews',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "sessionId" },
                }, comments: {
                    name: "comments",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'automationPreviews',
                    isRelationOwner: true,
                }, messages: {
                    name: "messages",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'automationPreviews',
                    isRelationOwner: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'automationPreviews',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        inboxRule: {
            name: 'InboxRule', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdBy',
                }, createdBy: {
                    name: "createdBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'createdInboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdById" },
                }, lastUpdatedById: {
                    name: "lastUpdatedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'lastUpdatedBy',
                }, lastUpdatedBy: {
                    name: "lastUpdatedBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'updatedInboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "lastUpdatedById" },
                }, lastUpdatedByTimestamp: {
                    name: "lastUpdatedByTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'inboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, triggers: {
                    name: "triggers",
                    type: "InboxRuleTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxRule',
                }, scope: {
                    name: "scope",
                    type: "TriggerScope",
                    attributes: [{ "name": "@default", "args": [] }],
                }, replyCondition: {
                    name: "replyCondition",
                    type: "TriggerReplyCondition",
                    isOptional: true,
                }, triggerWords: {
                    name: "triggerWords",
                    type: "String",
                    isArray: true,
                }, triggerIntents: {
                    name: "triggerIntents",
                    type: "String",
                    isArray: true,
                }, additionalConditions: {
                    name: "additionalConditions",
                    type: "Json",
                }, additionalConditionsUniqueHash: {
                    name: "additionalConditionsUniqueHash",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "" }] }],
                }, blockOrder: {
                    name: "blockOrder",
                    type: "Json",
                }, actionBlocks: {
                    name: "actionBlocks",
                    type: "ActionBlock",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxRule',
                }, name: {
                    name: "name",
                    type: "String",
                }, status: {
                    name: "status",
                    type: "InboxRuleStatus",
                }, processedMessages: {
                    name: "processedMessages",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, processedComments: {
                    name: "processedComments",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, delay: {
                    name: "delay",
                    type: "Delay",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRule',
                }, previewSessionId: {
                    name: "previewSessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'previewSession',
                }, previewSession: {
                    name: "previewSession",
                    type: "AutomationPreviewSession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRules',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "previewSessionId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        job: {
            name: 'Job', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "JobStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, scheduledAt: {
                    name: "scheduledAt",
                    type: "DateTime",
                }, functionConfig: {
                    name: "functionConfig",
                    type: "Json",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        journey: {
            name: 'Journey', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, config: {
                    name: "config",
                    type: "Json",
                    isOptional: true,
                }, createdById: {
                    name: "createdById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'createdBy',
                }, createdBy: {
                    name: "createdBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'createdJourneys',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "createdById" },
                }, latestUpdatedById: {
                    name: "latestUpdatedById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'latestUpdatedBy',
                }, latestUpdatedBy: {
                    name: "latestUpdatedBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'updatedJourneys',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "latestUpdatedById" },
                }, latestUpdatedByTimestamp: {
                    name: "latestUpdatedByTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, trigger: {
                    name: "trigger",
                    type: "Trigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journey',
                }, triggers: {
                    name: "triggers",
                    type: "JourneyTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, name: {
                    name: "name",
                    type: "String",
                }, status: {
                    name: "status",
                    type: "JourneyStatus",
                }, blockOrder: {
                    name: "blockOrder",
                    type: "Json",
                }, actionBlocks: {
                    name: "actionBlocks",
                    type: "ActionBlock",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, links: {
                    name: "links",
                    type: "Link",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, groupedStatsLinks: {
                    name: "groupedStatsLinks",
                    type: "GroupedJourneyLink",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, audience: {
                    name: "audience",
                    type: "CommunityMember",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeys',
                }, collectedData: {
                    name: "collectedData",
                    type: "JourneyCollectedData",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, sessions: {
                    name: "sessions",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, sessionsV2: {
                    name: "sessionsV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, quizSessions: {
                    name: "quizSessions",
                    type: "QuizSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, quizSessionsV2: {
                    name: "quizSessionsV2",
                    type: "QuizSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, quizAnswers: {
                    name: "quizAnswers",
                    type: "QuizAnswer",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, customResponseSessions: {
                    name: "customResponseSessions",
                    type: "CustomResponseSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, customResponseSessionsV2: {
                    name: "customResponseSessionsV2",
                    type: "CustomResponseSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, responses: {
                    name: "responses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, messagesSentCount: {
                    name: "messagesSentCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, messageRepliesCount: {
                    name: "messageRepliesCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, messagesOpenedCount: {
                    name: "messagesOpenedCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, commentsSentCount: {
                    name: "commentsSentCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, commentRepliesCount: {
                    name: "commentRepliesCount",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                }, messagesSent: {
                    name: "messagesSent",
                    type: "Message",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentJourney',
                }, commentsSent: {
                    name: "commentsSent",
                    type: "Comment",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'parentJourney',
                }, activeConversations: {
                    name: "activeConversations",
                    type: "Conversation",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'activeJourney',
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'journeys',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, metrics: {
                    name: "metrics",
                    type: "JourneyMetric",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, shopifyStatistics: {
                    name: "shopifyStatistics",
                    type: "JourneyShopifyStatistic",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journey',
                }, previewSessionId: {
                    name: "previewSessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'previewSession',
                }, previewSession: {
                    name: "previewSession",
                    type: "AutomationPreviewSession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeys',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "previewSessionId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        thirdPartyApp: {
            name: 'ThirdPartyApp', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, iconUri: {
                    name: "iconUri",
                    type: "String",
                }, clientSecret: {
                    name: "clientSecret",
                    type: "String",
                }, redirectUris: {
                    name: "redirectUris",
                    type: "String",
                    isArray: true,
                }, appScopes: {
                    name: "appScopes",
                    type: "ThirdPartyAppAccessScope",
                    isArray: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'thirdPartyApps',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, tokens: {
                    name: "tokens",
                    type: "ThirdPartyAppToken",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'thirdPartyApp',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        thirdPartyAppToken: {
            name: 'ThirdPartyAppToken', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, accessToken: {
                    name: "accessToken",
                    type: "String",
                    isOptional: true,
                }, refreshToken: {
                    name: "refreshToken",
                    type: "String",
                    isOptional: true,
                }, tokenScope: {
                    name: "tokenScope",
                    type: "ThirdPartyAppAccessScope",
                    isArray: true,
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'thirdPartyAppTokens',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                }, thirdPartyAppId: {
                    name: "thirdPartyAppId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'thirdPartyApp',
                }, thirdPartyApp: {
                    name: "thirdPartyApp",
                    type: "ThirdPartyApp",
                    isDataModel: true,
                    backLink: 'tokens',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "thirdPartyAppId" },
                }, webhookSubscriptions: {
                    name: "webhookSubscriptions",
                    type: "WebhookSubscription",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'appToken',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        webhookSubscription: {
            name: 'WebhookSubscription', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, expiresAt: {
                    name: "expiresAt",
                    type: "DateTime",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "WebhookStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, subscribedTargets: {
                    name: "subscribedTargets",
                    type: "WebhookSubscriptionTarget",
                    isArray: true,
                }, events: {
                    name: "events",
                    type: "WebhookEventType",
                    isArray: true,
                }, secret: {
                    name: "secret",
                    type: "String",
                }, payloadURL: {
                    name: "payloadURL",
                    type: "String",
                }, payloadFormat: {
                    name: "payloadFormat",
                    type: "WebhookPayloadFormat",
                    attributes: [{ "name": "@default", "args": [] }],
                }, dumpExistingDataOnFirstRun: {
                    name: "dumpExistingDataOnFirstRun",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, integrationType: {
                    name: "integrationType",
                    type: "WebhookIntegrationType",
                    attributes: [{ "name": "@default", "args": [] }],
                }, appTokenId: {
                    name: "appTokenId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'appToken',
                }, appToken: {
                    name: "appToken",
                    type: "ThirdPartyAppToken",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'webhookSubscriptions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "appTokenId" },
                }, workspaceId: {
                    name: "workspaceId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'workspace',
                }, workspace: {
                    name: "workspace",
                    type: "Workspace",
                    isDataModel: true,
                    backLink: 'webhookSubscriptions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "workspaceId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        delay: {
            name: 'Delay', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, type: {
                    name: "type",
                    type: "DelayType",
                }, scheduleTimestamp: {
                    name: "scheduleTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, days: {
                    name: "days",
                    type: "Int",
                    isOptional: true,
                }, hours: {
                    name: "hours",
                    type: "Int",
                    isOptional: true,
                }, minutes: {
                    name: "minutes",
                    type: "Int",
                    isOptional: true,
                }, actionBlockId: {
                    name: "actionBlockId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'actionBlock',
                }, actionBlock: {
                    name: "actionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delay',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "actionBlockId" },
                }, inboxRuleId: {
                    name: "inboxRuleId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRule',
                }, inboxRule: {
                    name: "inboxRule",
                    type: "InboxRule",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delay',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, actionBlockId: {
                    name: "actionBlockId",
                    fields: ["actionBlockId"]
                }, inboxRuleId: {
                    name: "inboxRuleId",
                    fields: ["inboxRuleId"]
                },
            },
        },
        journeySession: {
            name: 'JourneySession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, lastActionBlockExecutedId: {
                    name: "lastActionBlockExecutedId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'lastActionBlock',
                }, lastActionBlockExecutedTimestamp: {
                    name: "lastActionBlockExecutedTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, lastActionBlock: {
                    name: "lastActionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeySessionsLastBlock',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "lastActionBlockExecutedId" },
                }, status: {
                    name: "status",
                    type: "JourneySessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'sessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeySessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'journeySessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, responses: {
                    name: "responses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySession',
                }, delayedCommentId: {
                    name: "delayedCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'delayedComment',
                }, delayedComment: {
                    name: "delayedComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedJourneySession',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "delayedCommentId" },
                }, delayedMessageId: {
                    name: "delayedMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'delayedMessage',
                }, delayedMessage: {
                    name: "delayedMessage",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedJourneySession',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "delayedMessageId" },
                }, validatedTrigger: {
                    name: "validatedTrigger",
                    type: "JourneyTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'validatedSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "validatedTriggerId" },
                }, validatedTriggerId: {
                    name: "validatedTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'validatedTrigger',
                }, triggerEntity: {
                    name: "triggerEntity",
                    type: "JourneyTriggerEntity",
                    isOptional: true,
                }, triggerMessageId: {
                    name: "triggerMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggerMessage',
                }, triggerMessage: {
                    name: "triggerMessage",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeysTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerMessageId" },
                }, triggeredById: {
                    name: "triggeredById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggeredBy',
                }, triggeredBy: {
                    name: "triggeredBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'triggeredJourneySessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggeredById" },
                }, customResponseSessions: {
                    name: "customResponseSessions",
                    type: "CustomResponseSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySession',
                }, quizSessions: {
                    name: "quizSessions",
                    type: "QuizSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySession',
                }, followUpSessions: {
                    name: "followUpSessions",
                    type: "JourneyFollowUpSession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySession',
                }, triggerCommentId: {
                    name: "triggerCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggerComment',
                }, triggerComment: {
                    name: "triggerComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeysTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerCommentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, delayedCommentId: {
                    name: "delayedCommentId",
                    fields: ["delayedCommentId"]
                }, delayedMessageId: {
                    name: "delayedMessageId",
                    fields: ["delayedMessageId"]
                }, journeyId_conversationId: {
                    name: "journeyId_conversationId",
                    fields: ["journeyId", "conversationId"]
                }, journeyId_communityMemberId: {
                    name: "journeyId_communityMemberId",
                    fields: ["journeyId", "communityMemberId"]
                },
            },
        },
        journeySessionV2: {
            name: 'JourneySessionV2', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, isExecuting: {
                    name: "isExecuting",
                    type: "Boolean",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, lastActionBlockExecutedId: {
                    name: "lastActionBlockExecutedId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'lastActionBlock',
                }, lastActionBlockExecutedTimestamp: {
                    name: "lastActionBlockExecutedTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, lastActionBlock: {
                    name: "lastActionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeySessionsLastBlockV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "lastActionBlockExecutedId" },
                }, status: {
                    name: "status",
                    type: "JourneySessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'sessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeySessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'journeySessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, responses: {
                    name: "responses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySessionV2',
                }, delayedCommentId: {
                    name: "delayedCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'delayedComment',
                }, delayedComment: {
                    name: "delayedComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedJourneySessionV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "delayedCommentId" },
                }, delayedMessageId: {
                    name: "delayedMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'delayedMessage',
                }, delayedMessage: {
                    name: "delayedMessage",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'delayedJourneySessionV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "delayedMessageId" },
                }, validatedTrigger: {
                    name: "validatedTrigger",
                    type: "JourneyTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'validatedSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "validatedTriggerId" },
                }, validatedTriggerId: {
                    name: "validatedTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'validatedTrigger',
                }, triggerEntity: {
                    name: "triggerEntity",
                    type: "JourneyTriggerEntity",
                    isOptional: true,
                }, triggerMessageId: {
                    name: "triggerMessageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggerMessage',
                }, triggerMessage: {
                    name: "triggerMessage",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeysTriggerV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerMessageId" },
                }, triggeredById: {
                    name: "triggeredById",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggeredBy',
                }, triggeredBy: {
                    name: "triggeredBy",
                    type: "WorkspaceUser",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'triggeredJourneySessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggeredById" },
                }, customResponseSessionsV2: {
                    name: "customResponseSessionsV2",
                    type: "CustomResponseSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySessionV2',
                }, quizSessionsV2: {
                    name: "quizSessionsV2",
                    type: "QuizSessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'journeySession',
                }, triggerCommentId: {
                    name: "triggerCommentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'triggerComment',
                }, triggerComment: {
                    name: "triggerComment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeysTriggerV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerCommentId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, delayedCommentId: {
                    name: "delayedCommentId",
                    fields: ["delayedCommentId"]
                }, delayedMessageId: {
                    name: "delayedMessageId",
                    fields: ["delayedMessageId"]
                },
            },
        },
        journeyResponse: {
            name: 'JourneyResponse', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'responses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, actionBlockId: {
                    name: "actionBlockId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'actionBlock',
                }, actionBlock: {
                    name: "actionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyResponses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "actionBlockId" },
                }, questionId: {
                    name: "questionId",
                    type: "String",
                    isOptional: true,
                }, questionText: {
                    name: "questionText",
                    type: "String",
                    isOptional: true,
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyResponse',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, commentId: {
                    name: "commentId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'comment',
                }, comment: {
                    name: "comment",
                    type: "Comment",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyResponse',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "commentId" },
                }, responseType: {
                    name: "responseType",
                    type: "JourneyResponseType",
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'journeyResponses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, quizSessionId: {
                    name: "quizSessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'quizSession',
                }, quizSession: {
                    name: "quizSession",
                    type: "QuizSession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyResponses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "quizSessionId" },
                }, quizSessionIdV2: {
                    name: "quizSessionIdV2",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'quizSessionV2',
                }, quizSessionV2: {
                    name: "quizSessionV2",
                    type: "QuizSessionV2",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyResponses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "quizSessionIdV2" },
                }, journeySessionId: {
                    name: "journeySessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeySession',
                }, journeySession: {
                    name: "journeySession",
                    type: "JourneySession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'responses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionId" },
                }, journeySessionIdV2: {
                    name: "journeySessionIdV2",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeySessionV2',
                }, journeySessionV2: {
                    name: "journeySessionV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'responses',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionIdV2" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                }, commentId: {
                    name: "commentId",
                    fields: ["commentId"]
                }, actionBlockId_messageId_questionId: {
                    name: "actionBlockId_messageId_questionId",
                    fields: ["actionBlockId", "messageId", "questionId"]
                }, actionBlockId_commentId_questionId: {
                    name: "actionBlockId_commentId_questionId",
                    fields: ["actionBlockId", "commentId", "questionId"]
                },
            },
        },
        quizAnswer: {
            name: 'QuizAnswer', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, actionBlockId: {
                    name: "actionBlockId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'actionBlock',
                }, actionBlock: {
                    name: "actionBlock",
                    type: "ActionBlock",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'quizAnswers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "actionBlockId" },
                }, questionId: {
                    name: "questionId",
                    type: "String",
                }, questionText: {
                    name: "questionText",
                    type: "String",
                }, messageId: {
                    name: "messageId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'message',
                }, message: {
                    name: "message",
                    type: "Message",
                    isDataModel: true,
                    backLink: 'quizAnswer',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "messageId" },
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'quizAnswers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'quizAnswers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, quizSessionId: {
                    name: "quizSessionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'quizSession',
                }, quizSession: {
                    name: "quizSession",
                    type: "QuizSession",
                    isDataModel: true,
                    backLink: 'answers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "quizSessionId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, messageId: {
                    name: "messageId",
                    fields: ["messageId"]
                }, actionBlockId_messageId_questionId: {
                    name: "actionBlockId_messageId_questionId",
                    fields: ["actionBlockId", "messageId", "questionId"]
                },
            },
        },
        quizSession: {
            name: 'QuizSession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, askedQuestionIds: {
                    name: "askedQuestionIds",
                    type: "String",
                    isArray: true,
                }, lastQuestionAskedId: {
                    name: "lastQuestionAskedId",
                    type: "String",
                    isOptional: true,
                }, lastMessageSentTimestamp: {
                    name: "lastMessageSentTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "QuizSessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, currentMessageState: {
                    name: "currentMessageState",
                    type: "QuizMessageState",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, reminderStatus: {
                    name: "reminderStatus",
                    type: "QuizReminderStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'quizSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, journeySessionId: {
                    name: "journeySessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeySession',
                }, journeySession: {
                    name: "journeySession",
                    type: "JourneySession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'quizSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'quizSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'quizSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, answers: {
                    name: "answers",
                    type: "QuizAnswer",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'quizSession',
                }, journeyResponses: {
                    name: "journeyResponses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'quizSession',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_conversationId: {
                    name: "journeyId_conversationId",
                    fields: ["journeyId", "conversationId"]
                }, journeyId_communityMemberId: {
                    name: "journeyId_communityMemberId",
                    fields: ["journeyId", "communityMemberId"]
                },
            },
        },
        quizSessionV2: {
            name: 'QuizSessionV2', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, askedQuestionIds: {
                    name: "askedQuestionIds",
                    type: "String",
                    isArray: true,
                }, lastQuestionAskedId: {
                    name: "lastQuestionAskedId",
                    type: "String",
                    isOptional: true,
                }, lastMessageSentTimestamp: {
                    name: "lastMessageSentTimestamp",
                    type: "DateTime",
                    isOptional: true,
                }, status: {
                    name: "status",
                    type: "QuizSessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, currentMessageState: {
                    name: "currentMessageState",
                    type: "QuizMessageState",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, reminderStatus: {
                    name: "reminderStatus",
                    type: "QuizReminderStatus",
                    isOptional: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'quizSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, journeySessionId: {
                    name: "journeySessionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journeySession',
                }, journeySession: {
                    name: "journeySession",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    backLink: 'quizSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionId" },
                }, conversationId: {
                    name: "conversationId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'conversation',
                }, conversation: {
                    name: "conversation",
                    type: "Conversation",
                    isDataModel: true,
                    backLink: 'quizSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "conversationId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'quizSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, journeyResponses: {
                    name: "journeyResponses",
                    type: "JourneyResponse",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'quizSessionV2',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        journeyFollowUpSession: {
            name: 'JourneyFollowUpSession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, lastUpsertedAt: {
                    name: "lastUpsertedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, followUpType: {
                    name: "followUpType",
                    type: "JourneyFollowUpAudience",
                }, status: {
                    name: "status",
                    type: "JourneyFollowUpStatus",
                }, blockId: {
                    name: "blockId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'block',
                }, block: {
                    name: "block",
                    type: "ActionBlock",
                    isDataModel: true,
                    backLink: 'followUpSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blockId" },
                }, journeySessionId: {
                    name: "journeySessionId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journeySession',
                }, journeySession: {
                    name: "journeySession",
                    type: "JourneySession",
                    isDataModel: true,
                    backLink: 'followUpSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, followUpType_journeySessionId: {
                    name: "followUpType_journeySessionId",
                    fields: ["followUpType", "journeySessionId"]
                },
            },
        },
        customResponseSession: {
            name: 'CustomResponseSession', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "CustomResponseSessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, blockId: {
                    name: "blockId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'block',
                }, block: {
                    name: "block",
                    type: "ActionBlock",
                    isDataModel: true,
                    backLink: 'customResponseSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blockId" },
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'customResponseSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, journeySessionId: {
                    name: "journeySessionId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeySession',
                }, journeySession: {
                    name: "journeySession",
                    type: "JourneySession",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'customResponseSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'customResponseSessions',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_blockId_communityMemberId: {
                    name: "journeyId_blockId_communityMemberId",
                    fields: ["journeyId", "blockId", "communityMemberId"]
                },
            },
        },
        customResponseSessionV2: {
            name: 'CustomResponseSessionV2', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, status: {
                    name: "status",
                    type: "CustomResponseSessionStatus",
                    attributes: [{ "name": "@default", "args": [] }],
                }, blockId: {
                    name: "blockId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'block',
                }, block: {
                    name: "block",
                    type: "ActionBlock",
                    isDataModel: true,
                    backLink: 'customResponseSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "blockId" },
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'customResponseSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, journeySessionIdV2: {
                    name: "journeySessionIdV2",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journeySessionV2',
                }, journeySessionV2: {
                    name: "journeySessionV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    backLink: 'customResponseSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeySessionIdV2" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'customResponseSessionsV2',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        instagramInboxRuleTrigger: {
            name: 'InstagramInboxRuleTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentTriggers: {
                    name: "contentTriggers",
                    type: "ContentTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxRuleInstagramTrigger',
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRuleTrigger',
                }, inboxRuleTrigger: {
                    name: "inboxRuleTrigger",
                    type: "InboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleTriggerId" },
                }, event: {
                    name: "event",
                    type: "InstagramTriggerEvent",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    fields: ["inboxRuleTriggerId"]
                },
            },
        },
        facebookInboxRuleTrigger: {
            name: 'FacebookInboxRuleTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentTriggers: {
                    name: "contentTriggers",
                    type: "ContentTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'inboxRuleFacebookTrigger',
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRuleTrigger',
                }, inboxRuleTrigger: {
                    name: "inboxRuleTrigger",
                    type: "InboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleTriggerId" },
                }, event: {
                    name: "event",
                    type: "FacebookTriggerEvent",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    fields: ["inboxRuleTriggerId"]
                },
            },
        },
        crossPlatformInboxRuleTrigger: {
            name: 'CrossPlatformInboxRuleTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, event: {
                    name: "event",
                    type: "CrossPlatformTriggerEvent",
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRuleTrigger',
                }, inboxRuleTrigger: {
                    name: "inboxRuleTrigger",
                    type: "InboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'crossPlatformTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleTriggerId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, inboxRuleTriggerId: {
                    name: "inboxRuleTriggerId",
                    fields: ["inboxRuleTriggerId"]
                },
            },
        },
        inboxRuleTrigger: {
            name: 'InboxRuleTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "TriggerType",
                }, instagramTrigger: {
                    name: "instagramTrigger",
                    type: "InstagramInboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRuleTrigger',
                }, facebookTrigger: {
                    name: "facebookTrigger",
                    type: "FacebookInboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRuleTrigger',
                }, crossPlatformTrigger: {
                    name: "crossPlatformTrigger",
                    type: "CrossPlatformInboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'inboxRuleTrigger',
                }, inboxRuleId: {
                    name: "inboxRuleId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'inboxRule',
                }, inboxRule: {
                    name: "inboxRule",
                    type: "InboxRule",
                    isDataModel: true,
                    backLink: 'triggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, inboxRuleId: {
                    name: "inboxRuleId",
                    fields: ["inboxRuleId"]
                },
            },
        },
        journeyTrigger: {
            name: 'JourneyTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "TriggerType",
                }, instagramTrigger: {
                    name: "instagramTrigger",
                    type: "InstagramTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyTrigger',
                }, facebookTrigger: {
                    name: "facebookTrigger",
                    type: "FacebookTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyTrigger',
                }, validatedSessions: {
                    name: "validatedSessions",
                    type: "JourneySession",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'validatedTrigger',
                }, validatedSessionsV2: {
                    name: "validatedSessionsV2",
                    type: "JourneySessionV2",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'validatedTrigger',
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'triggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        trigger: {
            name: 'Trigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, type: {
                    name: "type",
                    type: "TriggerType",
                }, instagramTrigger: {
                    name: "instagramTrigger",
                    type: "InstagramTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'trigger',
                }, facebookTrigger: {
                    name: "facebookTrigger",
                    type: "FacebookTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'trigger',
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'trigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId: {
                    name: "journeyId",
                    fields: ["journeyId"]
                },
            },
        },
        instagramTrigger: {
            name: 'InstagramTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentTriggers: {
                    name: "contentTriggers",
                    type: "ContentTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'instagramTrigger',
                }, scope: {
                    name: "scope",
                    type: "TriggerScope",
                    attributes: [{ "name": "@default", "args": [] }],
                }, replyCondition: {
                    name: "replyCondition",
                    type: "TriggerReplyCondition",
                    isOptional: true,
                }, triggerWords: {
                    name: "triggerWords",
                    type: "String",
                    isArray: true,
                }, triggerIntents: {
                    name: "triggerIntents",
                    type: "String",
                    isArray: true,
                }, isDisabledOnNegativeSentiment: {
                    name: "isDisabledOnNegativeSentiment",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, additionalConditions: {
                    name: "additionalConditions",
                    type: "Json",
                }, additionalConditionsUniqueHash: {
                    name: "additionalConditionsUniqueHash",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "" }] }],
                }, triggerId: {
                    name: "triggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'trigger',
                }, trigger: {
                    name: "trigger",
                    type: "Trigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerId" },
                }, journeyTriggerId: {
                    name: "journeyTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeyTrigger',
                }, journeyTrigger: {
                    name: "journeyTrigger",
                    type: "JourneyTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'instagramTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyTriggerId" },
                }, instagramAccountId: {
                    name: "instagramAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'instagramAccount',
                }, instagramAccount: {
                    name: "instagramAccount",
                    type: "InstagramAccount",
                    isDataModel: true,
                    backLink: 'instagramTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramAccountId" },
                }, event: {
                    name: "event",
                    type: "InstagramTriggerEvent",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, triggerId: {
                    name: "triggerId",
                    fields: ["triggerId"]
                }, journeyTriggerId: {
                    name: "journeyTriggerId",
                    fields: ["journeyTriggerId"]
                },
            },
        },
        facebookTrigger: {
            name: 'FacebookTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentTriggers: {
                    name: "contentTriggers",
                    type: "ContentTrigger",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'facebookTrigger',
                }, scope: {
                    name: "scope",
                    type: "TriggerScope",
                    attributes: [{ "name": "@default", "args": [] }],
                }, replyCondition: {
                    name: "replyCondition",
                    type: "TriggerReplyCondition",
                    isOptional: true,
                }, triggerWords: {
                    name: "triggerWords",
                    type: "String",
                    isArray: true,
                }, triggerIntents: {
                    name: "triggerIntents",
                    type: "String",
                    isArray: true,
                }, isDisabledOnNegativeSentiment: {
                    name: "isDisabledOnNegativeSentiment",
                    type: "Boolean",
                    attributes: [{ "name": "@default", "args": [{ "value": false }] }],
                }, additionalConditions: {
                    name: "additionalConditions",
                    type: "Json",
                }, additionalConditionsUniqueHash: {
                    name: "additionalConditionsUniqueHash",
                    type: "String",
                    attributes: [{ "name": "@default", "args": [{ "value": "" }] }],
                }, triggerId: {
                    name: "triggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'trigger',
                }, trigger: {
                    name: "trigger",
                    type: "Trigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "triggerId" },
                }, journeyTriggerId: {
                    name: "journeyTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'journeyTrigger',
                }, journeyTrigger: {
                    name: "journeyTrigger",
                    type: "JourneyTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'facebookTrigger',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyTriggerId" },
                }, facebookPageAccountId: {
                    name: "facebookPageAccountId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'facebookPageAccount',
                }, facebookPageAccount: {
                    name: "facebookPageAccount",
                    type: "FacebookPageAccount",
                    isDataModel: true,
                    backLink: 'facebookTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookPageAccountId" },
                }, event: {
                    name: "event",
                    type: "FacebookTriggerEvent",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, triggerId: {
                    name: "triggerId",
                    fields: ["triggerId"]
                }, journeyTriggerId: {
                    name: "journeyTriggerId",
                    fields: ["journeyTriggerId"]
                },
            },
        },
        contentTrigger: {
            name: 'ContentTrigger', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, contentId: {
                    name: "contentId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'content',
                }, content: {
                    name: "content",
                    type: "Content",
                    isDataModel: true,
                    backLink: 'contentTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "contentId" },
                }, instagramTriggerId: {
                    name: "instagramTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'instagramTrigger',
                }, instagramTrigger: {
                    name: "instagramTrigger",
                    type: "InstagramTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "instagramTriggerId" },
                }, facebookTriggerId: {
                    name: "facebookTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'facebookTrigger',
                }, facebookTrigger: {
                    name: "facebookTrigger",
                    type: "FacebookTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "facebookTriggerId" },
                }, inboxRuleInstagramTriggerId: {
                    name: "inboxRuleInstagramTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRuleInstagramTrigger',
                }, inboxRuleInstagramTrigger: {
                    name: "inboxRuleInstagramTrigger",
                    type: "InstagramInboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleInstagramTriggerId" },
                }, inboxRuleFacebookTriggerId: {
                    name: "inboxRuleFacebookTriggerId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'inboxRuleFacebookTrigger',
                }, inboxRuleFacebookTrigger: {
                    name: "inboxRuleFacebookTrigger",
                    type: "FacebookInboxRuleTrigger",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'contentTriggers',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "inboxRuleFacebookTriggerId" },
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, contentId_instagramTriggerId: {
                    name: "contentId_instagramTriggerId",
                    fields: ["contentId", "instagramTriggerId"]
                }, contentId_facebookTriggerId: {
                    name: "contentId_facebookTriggerId",
                    fields: ["contentId", "facebookTriggerId"]
                }, contentId_inboxRuleInstagramTriggerId: {
                    name: "contentId_inboxRuleInstagramTriggerId",
                    fields: ["contentId", "inboxRuleInstagramTriggerId"]
                }, contentId_inboxRuleFacebookTriggerId: {
                    name: "contentId_inboxRuleFacebookTriggerId",
                    fields: ["contentId", "inboxRuleFacebookTriggerId"]
                },
            },
        },
        journeyCustomFieldStatistic: {
            name: 'JourneyCustomFieldStatistic', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, customFieldId: {
                    name: "customFieldId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'customField',
                }, customField: {
                    name: "customField",
                    type: "CustomField",
                    isDataModel: true,
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customFieldId" },
                }, count: {
                    name: "count",
                    type: "Int",
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_customFieldId: {
                    name: "journeyId_customFieldId",
                    fields: ["journeyId", "customFieldId"]
                },
            },
        },
        journeyCollectedData: {
            name: 'JourneyCollectedData', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, journeyId: {
                    name: "journeyId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'journey',
                }, journey: {
                    name: "journey",
                    type: "Journey",
                    isDataModel: true,
                    backLink: 'collectedData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "journeyId" },
                }, customFieldId: {
                    name: "customFieldId",
                    type: "String",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'customField',
                }, customField: {
                    name: "customField",
                    type: "CustomField",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'journeyCollectedData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "customFieldId" },
                }, communityMemberId: {
                    name: "communityMemberId",
                    type: "String",
                    isForeignKey: true,
                    relationField: 'communityMember',
                }, communityMember: {
                    name: "communityMember",
                    type: "CommunityMember",
                    isDataModel: true,
                    backLink: 'journeyCollectedData',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "communityMemberId" },
                }, collectedDataType: {
                    name: "collectedDataType",
                    type: "JourneyCollectedDataType",
                }, count: {
                    name: "count",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [{ "value": 0 }] }],
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, journeyId_customFieldId_collectedDataType_communityMemberId: {
                    name: "journeyId_customFieldId_collectedDataType_communityMemberId",
                    fields: ["journeyId", "customFieldId", "collectedDataType", "communityMemberId"]
                },
            },
        },
        prompts: {
            name: 'Prompts', fields: {
                id: {
                    name: "id",
                    type: "String",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }, { "name": "@updatedAt", "args": [] }],
                }, category: {
                    name: "category",
                    type: "PromptCategory",
                    isOptional: true,
                }, key: {
                    name: "key",
                    type: "String",
                }, description: {
                    name: "description",
                    type: "String",
                    isOptional: true,
                }, prompt: {
                    name: "prompt",
                    type: "String",
                }, drafts: {
                    name: "drafts",
                    type: "Json",
                    isOptional: true,
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, key: {
                    name: "key",
                    fields: ["key"]
                },
            },
        },

    },
    deleteCascade: {
        user: ['WorkspaceUser', 'Workspace', 'MFAFactor'],
        workspaceAccessRole: ['WorkspacePageAccess'],
        workspaceUser: ['WorkspaceUserActiveTime', 'WorkspaceUserActivityLog', 'Note', 'WorkspaceUserViewPinState', 'View', 'NotificationSetting', 'SlackUserAccount', 'InboxFeedItemRead', 'ConversationEventActivity', 'AutomationMetadata'],
        workspace: ['Metric', 'AgentPerformanceMetric', 'WorkspaceAccessRole', 'WorkspaceUser', 'MetricsRefreshRequests', 'InboxSetting', 'WorkspaceInternalMetadata', 'PersonaConfig', 'KlaviyoAccount', 'SlackWorkspace', 'NotificationSetting', 'SlackUserAccount', 'InstagramAccount', 'MetaAdAccount', 'FacebookPageAccount', 'TikTokAccount', 'SocialListeningTopic', 'PromptTracker', 'ShopifyAccount', 'CardTemplate', 'LimitedCommunityMember', 'RecentActivity', 'CommunityMember', 'CommunityMemberEmail', 'CommunityMemberPhoneNumber', 'CommunityMemberFacebookProfileData', 'CommunityMemberTiktokProfileData', 'CommunityImportJob', 'CommunityMemberInstagramProfileData', 'SentimentAnalysis', 'Conversation', 'Label', 'Content', 'Keyword', 'KeywordMention', 'ProductMention', 'Comment', 'MessageReaction', 'Message', 'Link', 'Persona', 'AiPersona', 'IntentCategory', 'SuggestedIntent', 'Intent', 'KnowledgeBase', 'CustomProduct', 'ProductTracking', 'BlastTemplate', 'BlastTemplateCategory', 'WorkingHours', 'ResponseJourney', 'AutomationMetadata', 'AutopilotDraftState', 'InsightClusterPendingItem', 'InsightCategory', 'InsightGroup', 'TrackedTopic', 'Insight', 'LLMAnalysisMetadata', 'AutomationPreviewSession', 'AutomationPreview', 'InboxRule', 'Journey', 'ThirdPartyApp', 'ThirdPartyAppToken', 'WebhookSubscription'],
        workspaceInternalMetadata: ['ContentEmbedding'],
        note: ['ConversationFeedItem'],
        view: ['WorkspaceUserViewPinState', 'Filter', 'SocialListeningTopic'],
        personaConfig: ['PersonaChannelSetting', 'AiPersonaEscalationSetting'],
        personaChannelSetting: ['PersonaChannelResponseTime', 'PersonaChannelEnabledTopic', 'PersonaEscalationSetting'],
        klaviyoAccount: ['CommunityMemberKlaviyoProfile', 'CommunityMemberKlaviyoLinkedProfile', 'KlaviyoJob'],
        slackWorkspace: ['SlackUserAccount'],
        instagramAccount: ['Metric', 'View', 'PersonaChannelSetting', 'ConversationOwner', 'CommunityMemberInstagramRelationData', 'InboxFeedItem', 'ContentSyncTask', 'ContentOwner', 'CommentOwner', 'MessageBlastCampaign', 'InstagramModerationConfig', 'InboxRule', 'InstagramTrigger'],
        facebookPageAccount: ['Metric', 'View', 'PersonaChannelSetting', 'ConversationOwner', 'CommunityMemberFacebookRelationData', 'InboxFeedItem', 'ContentSyncTask', 'ContentOwner', 'CommentOwner', 'FacebookModerationConfig', 'InboxRule', 'FacebookTrigger'],
        tikTokAccount: ['Metric', 'View', 'PersonaChannelSetting', 'TikTokShop', 'ConversationOwner', 'CommunityMemberTiktokRelationData', 'InboxFeedItem', 'ContentOwner', 'CommentOwner', 'TiktokModerationConfig'],
        tikTokShop: ['TikTokProduct', 'TikTokOrder', 'TikTokCoupon', 'TikTokCustomerService'],
        hashtagTracker: ['HashtagTrackerToAccounts'],
        searchQueryTracker: ['SearchQueryTrackerToAccounts'],
        tikTokProduct: ['TikTokOrderProduct', 'ProductImage', 'ProductTracking'],
        tikTokOrder: ['TikTokOrderProduct', 'TikTokOrderReturn'],
        tikTokOrderProduct: ['TikTokOrderReturnProduct'],
        tikTokOrderReturn: ['TikTokOrderReturnProduct'],
        tikTokCustomerService: ['TikTokCustomerServiceMessage'],
        shopifyAccount: ['ShopifyDiscount', 'CommunityMemberShopifyProfileData', 'ShopifyResource'],
        shopifyDiscount: ['ShopifyDiscountCode'],
        conversationOwner: ['Conversation'],
        customField: ['CustomFieldValue', 'JourneyCustomFieldStatistic', 'JourneyCollectedData'],
        limitedCommunityMember: ['InboxFeedProfile', 'LabelAssignmentMetadata', 'ContentOwner', 'CommentOwner'],
        globalCommunityMember: ['GlobalCommunityMemberTiktokProfileData', 'GlobalCommunityMemberInstagramProfileData'],
        communityMember: ['Note', 'CommunityMemberKlaviyoProfile', 'CommunityMemberKlaviyoLinkedProfile', 'CustomFieldValue', 'RecentActivity', 'CommunityMemberBlockState', 'CommunityMemberEngagement', 'CommunityMemberEmail', 'CommunityMemberPhoneNumber', 'CommunityMemberFacebookProfileData', 'CommunityMemberFacebookRelationData', 'CommunityMemberTiktokProfileData', 'CommunityMemberTiktokRelationData', 'CommunityMemberShopifyProfileData', 'CommunityMemberInstagramProfileData', 'CommunityMemberInstagramRelationData', 'InboxFeedProfile', 'Conversation', 'LabelAssignmentMetadata', 'ContentOwner', 'CommentOwner', 'BlastAudienceMember', 'JourneySession', 'JourneySessionV2', 'JourneyResponse', 'QuizAnswer', 'QuizSession', 'QuizSessionV2', 'CustomResponseSession', 'CustomResponseSessionV2', 'JourneyCollectedData'],
        communityMemberShopifyProfileData: ['ShopifyAbandonedCart', 'ShopifyCustomerAddress', 'ShopifyAbandonedCheckout', 'ShopifyOrder'],
        communityImportJob: ['ImportedCommunityMember'],
        shopifyAbandonedCart: ['ShopifyAbandonedCartLineItem'],
        shopifyCustomerAddress: ['ShopifyOrder'],
        shopifyAbandonedCheckout: ['ShopifyAbandonedCheckoutLineItem'],
        shopifyOrder: ['ShopifyOrderProduct'],
        inboxFeedItem: ['InboxFeedItemRead', 'LabelAssignmentMetadata'],
        conversation: ['Note', 'InboxFeedItem', 'CapturedIntent', 'SentimentAnalysis', 'ConversationFeedItem', 'AIGeneratedMessage', 'ConversationEventActivity', 'LabelAssignmentMetadata', 'MessageReaction', 'Message', 'JourneySession', 'JourneySessionV2', 'QuizSession', 'QuizSessionV2'],
        aIGeneratedMessage: ['ConversationFeedItem'],
        conversationEventActivity: ['ConversationFeedItem'],
        label: ['LabelAssignmentMetadata'],
        globalContent: ['SentimentAnalysis', 'GlobalContentVideoFrame', 'GlobalContentEmbedding', 'GlobalContentMetadata', 'GlobalMedia', 'GlobalLLMAnalysisMetadata'],
        content: ['InboxFeedItem', 'SentimentAnalysis', 'LabelAssignmentMetadata', 'ContentSyncTask', 'TiktokContentMetadata', 'ContentPublishingMetadata', 'ContentCollaboration', 'IdentifiedProductContent', 'ContentVideoFrame', 'ContentEmbedding', 'ContentMetadata', 'ContentSummary', 'Media', 'Comment', 'Thread', 'InsightClusterPendingItem', 'LLMAnalysisMetadata', 'ContentTrigger'],
        media: ['ContentMediaTag'],
        contentOwner: ['Content'],
        commentOwner: ['Comment'],
        keyword: ['KeywordMention'],
        comment: ['Note', 'CapturedIntent', 'SentimentAnalysis', 'Media', 'CommentDeleteMetadata', 'CommentMetadata', 'Thread', 'ModeratedItem', 'UnknownIntentComment', 'InsightClusterPendingItem', 'LLMAnalysisMetadata', 'JourneyResponse'],
        message: ['TikTokCard', 'TikTokCustomerServiceMessage', 'ConversationFeedItem', 'MessageReaction', 'Link', 'InsightClusterPendingItem', 'LLMAnalysisMetadata', 'JourneyResponse', 'QuizAnswer'],
        link: ['LinkShopifyStatistic'],
        aiPersona: ['ConversationEventActivity', 'PersonaTone', 'PersonaChannelInstruction'],
        suggestedIntent: ['SuggestedIntentExample'],
        intent: ['PersonaChannelEnabledTopic', 'CapturedIntent', 'IntentShadowResource', 'ActionBlock'],
        knowledgeBase: ['Embedding', 'IntentShadowResource', 'CustomProduct', 'ShopifyResource', 'DocumentResource'],
        intentShadowResource: ['Embedding'],
        customProduct: ['Embedding', 'ProductImage', 'ProductTracking'],
        shopifyResource: ['CardTemplate', 'Embedding', 'IdentifiedProductContent', 'ProductMention', 'LinkShopifyStatistic', 'BlastShopifyStatistic', 'JourneyShopifyStatistic', 'ProductImage', 'ProductTracking', 'ShopifyMetafield', 'ShopifyProductVariant'],
        shopifyMetafield: ['Embedding'],
        documentResource: ['Embedding'],
        messageBlastCampaign: ['Message', 'BlastShopifyStatistic', 'BlastAudienceMember'],
        moderationRule: ['ModerationIntentConfig', 'ModerationKeywordsConfig'],
        instagramModerationConfig: ['ModerationFlagConfig'],
        facebookModerationConfig: ['ModerationFlagConfig'],
        tiktokModerationConfig: ['ModerationFlagConfig'],
        workingHours: ['BusinessHoursConfig'],
        responseJourney: ['ActionBlock'],
        copilotGeneratedResponseSession: ['CopilotGeneratedResponse'],
        insightCategory: ['Insight'],
        lLMAnalysisMetadata: ['KeywordMention', 'ProductMention'],
        actionBlock: ['Delay', 'JourneyFollowUpSession', 'CustomResponseSession', 'CustomResponseSessionV2'],
        automationPreviewSession: ['AutomationPreview', 'InboxRule', 'Journey'],
        inboxRule: ['ActionBlock', 'Delay', 'InboxRuleTrigger'],
        journey: ['JourneyMetric', 'Link', 'GroupedJourneyLink', 'JourneyShopifyStatistic', 'ActionBlock', 'JourneySession', 'JourneySessionV2', 'JourneyResponse', 'QuizAnswer', 'QuizSession', 'QuizSessionV2', 'CustomResponseSession', 'CustomResponseSessionV2', 'JourneyTrigger', 'Trigger', 'JourneyCustomFieldStatistic', 'JourneyCollectedData'],
        thirdPartyApp: ['ThirdPartyAppToken'],
        thirdPartyAppToken: ['WebhookSubscription'],
        journeySession: ['JourneyResponse', 'QuizSession', 'JourneyFollowUpSession', 'CustomResponseSession'],
        journeySessionV2: ['JourneyResponse', 'QuizSessionV2', 'CustomResponseSessionV2'],
        quizSession: ['JourneyResponse', 'QuizAnswer'],
        quizSessionV2: ['JourneyResponse'],
        instagramInboxRuleTrigger: ['ContentTrigger'],
        facebookInboxRuleTrigger: ['ContentTrigger'],
        inboxRuleTrigger: ['InstagramInboxRuleTrigger', 'FacebookInboxRuleTrigger', 'CrossPlatformInboxRuleTrigger'],
        journeyTrigger: ['InstagramTrigger', 'FacebookTrigger'],
        trigger: ['InstagramTrigger', 'FacebookTrigger'],
        instagramTrigger: ['ContentTrigger'],
        facebookTrigger: ['ContentTrigger'],

    },
    authModel: 'User'

};
export default metadata;
